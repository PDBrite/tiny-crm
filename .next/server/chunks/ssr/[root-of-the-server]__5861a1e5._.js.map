{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/layout/Sidebar.tsx"],"sourcesContent":["'use client'\n\nimport Link from 'next/link'\nimport { usePathname } from 'next/navigation'\nimport { useCompany } from '@/contexts/CompanyContext'\nimport { \n  LayoutDashboard, \n  Users, \n  Target, \n  Upload, \n  Settings,\n  Building2,\n  Calendar,\n  School,\n  MessageSquare,\n  User\n} from 'lucide-react'\n\nconst craftyCodeNavigation = [\n  { name: 'Dashboard', href: '/', icon: LayoutDashboard },\n  { name: 'Leads', href: '/leads', icon: Users },\n  { name: 'Outreach', href: '/outreach', icon: MessageSquare },\n  { name: 'Campaigns', href: '/campaigns', icon: Target },\n  { name: 'Import', href: '/import', icon: Upload },\n]\n\nconst avalernNav = [\n  { name: 'Dashboard', href: '/', icon: LayoutDashboard },\n  { name: 'Districts', href: '/districts', icon: School },\n  { name: 'District Contacts', href: '/leads', icon: Users },\n  { name: 'Outreach', href: '/outreach', icon: MessageSquare },\n  { name: 'Campaigns', href: '/campaigns', icon: Target },\n  { name: 'Import', href: '/import', icon: Upload },\n]\n\nconst companyColors: Record<string, string> = {\n  'CraftyCode': 'bg-blue-500',\n  'Avalern': 'bg-purple-500'\n}\n\nexport default function Sidebar() {\n  const pathname = usePathname()\n  const { selectedCompany, setSelectedCompany, availableCompanies } = useCompany()\n\n  return (\n    <div className=\"flex h-screen w-64 flex-col bg-white shadow-lg\">\n      {/* Logo */}\n      <div className=\"flex h-16 items-center px-6 border-b border-gray-200\">\n        <Building2 className=\"h-8 w-8 text-blue-600\" />\n        <span className=\"ml-3 text-xl font-bold text-gray-900\">Lead Manager</span>\n      </div>\n\n      {/* User Info */}\n      <div className=\"border-b border-gray-200 p-4\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center\">\n            <User className=\"h-4 w-4 text-gray-500\" />\n          </div>\n          <div className=\"flex-1 min-w-0\">\n            <p className=\"text-sm font-medium text-gray-900 truncate\">\n              Current User\n            </p>\n            <p className=\"text-xs text-gray-500 truncate\">\n              User\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Company Selector */}\n      {availableCompanies.length > 0 && (\n        <div className=\"border-b border-gray-200 p-4\">\n          <div className=\"text-xs font-medium text-gray-500 uppercase tracking-wider mb-3\">\n            Active Companies\n          </div>\n          <div className=\"space-y-2\">\n            {availableCompanies.map((company) => (\n              <button\n                key={company}\n                onClick={() => setSelectedCompany(company)}\n                className={`\n                  flex items-center w-full px-3 py-2 text-sm font-medium rounded-lg transition-colors\n                  ${selectedCompany === company\n                    ? 'bg-gray-100 text-gray-900 border-l-4 border-blue-500'\n                    : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'\n                  }\n                `}\n              >\n                <div className={`w-3 h-3 ${companyColors[company] || 'bg-gray-500'} rounded-full mr-3`}></div>\n                <span>{company}</span>\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Navigation */}\n      <nav className=\"flex-1 px-4 py-6 space-y-2\">\n        {selectedCompany === 'CraftyCode' && craftyCodeNavigation.map((item) => {\n          const isActive = pathname === item.href\n          return (\n            <Link\n              key={item.name}\n              href={item.href}\n              className={`\n                flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors\n                ${isActive \n                  ? 'bg-blue-50 text-blue-700 border-r-2 border-blue-700' \n                  : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                }\n              `}\n            >\n              <item.icon className={`mr-3 h-5 w-5 ${isActive ? 'text-blue-700' : 'text-gray-400'}`} />\n              {item.name}\n            </Link>\n          )\n        })}\n        {selectedCompany === 'Avalern' && avalernNav.map((item) => {\n          const isActive = pathname === item.href\n          return (\n            <Link\n              key={item.name}\n              href={item.href}\n              className={`\n                flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors\n                ${isActive \n                  ? 'bg-blue-50 text-blue-700 border-r-2 border-blue-700' \n                  : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                }\n              `}\n            >\n              <item.icon className={`mr-3 h-5 w-5 ${isActive ? 'text-blue-700' : 'text-gray-400'}`} />\n              {item.name}\n            </Link>\n          )\n        })}\n      </nav>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/layout/DashboardLayout.tsx"],"sourcesContent":["'use client'\n\nimport Sidebar from './Sidebar'\n\ninterface DashboardLayoutProps {\n  children: React.ReactNode\n}\n\nexport default function DashboardLayout({ children }: DashboardLayoutProps) {\n  return (\n    <div className=\"flex h-screen bg-gray-100\">\n      <Sidebar />\n      <main className=\"flex-1 overflow-auto\">\n        <div className=\"p-8\">\n          {children}\n        </div>\n      </main>\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAQe,SAAS,gBAAgB,EAAE,QAAQ,EAAwB;IACxE,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,uIAAA,CAAA,UAAO;;;;;0BACR,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\nimport { Database } from '@/types/database'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n\nexport const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey)\n\n// Client-side Supabase client\nexport function createClientComponentClient() {\n  return createClient<Database>(supabaseUrl, supabaseAnonKey)\n} "],"names":[],"mappings":";;;;AAAA;;AAGA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAY,aAAa;AAGrD,SAAS;IACd,OAAO,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAY,aAAa;AAC7C","debugId":null}},
    {"offset": {"line": 472, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/app/campaigns/%5Bid%5D/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { useParams, useRouter } from 'next/navigation'\nimport DashboardLayout from '@/components/layout/DashboardLayout'\nimport { useCompany } from '@/contexts/CompanyContext'\nimport { supabase } from '@/lib/supabase'\nimport {\n  Target,\n  Calendar,\n  Users,\n  Mail,\n  Phone,\n  Edit2,\n  ArrowLeft,\n  CheckCircle,\n  Plus,\n  Minus,\n  User,\n  X,\n  Trash2,\n  ChevronLeft,\n  ChevronRight,\n  Clock,\n  MessageSquare\n} from 'lucide-react'\n\ninterface Campaign {\n  id: string\n  name: string\n  company: string\n  status?: string\n  start_date?: string\n  end_date?: string\n  created_at: string\n  outreach_sequence_id?: string\n  outreach_sequence?: {\n    id: string\n    name: string\n    description?: string\n  }\n  leadCount: number\n  emailsSent: number\n  callsMade: number\n  linkedinMessages?: number\n  appointmentsBooked: number\n  sales: number\n  conversionRate: number\n  launch_date: string\n  description?: string\n  instantly_campaign_id?: string\n}\n\ninterface OutreachSequence {\n  id: string\n  name: string\n  description?: string\n  company: string\n}\n\nexport default function CampaignDetailPage() {\n  const params = useParams()\n  const router = useRouter()\n  const { selectedCompany } = useCompany()\n  const campaignId = params.id as string\n\n  const [campaign, setCampaign] = useState<Campaign | null>(null)\n  const [outreachSequences, setOutreachSequences] = useState<OutreachSequence[]>([])\n  const [activeTab, setActiveTab] = useState<'overview' | 'leads' | 'touchpoints'>('overview')\n  const [contactTab, setContactTab] = useState<'contacts' | 'districts'>('contacts')\n  const [loading, setLoading] = useState(true)\n  const [updating, setUpdating] = useState(false)\n  const [isEditing, setIsEditing] = useState(false)\n  \n  // Lead management\n  const [campaignLeads, setCampaignLeads] = useState<any[]>([])\n  const [loadingLeads, setLoadingLeads] = useState(false)\n  \n  // District management (for Avalern)\n  const [campaignDistricts, setCampaignDistricts] = useState<any[]>([])\n  const [loadingDistricts, setLoadingDistricts] = useState(false)\n  const [selectedDistrictForEdit, setSelectedDistrictForEdit] = useState<any | null>(null)\n  const [editingDistrictData, setEditingDistrictData] = useState<any | null>(null)\n  const [updatingDistrict, setUpdatingDistrict] = useState(false)\n  const [selectedLeadForEdit, setSelectedLeadForEdit] = useState<any | null>(null)\n  const [editingLeadData, setEditingLeadData] = useState<any | null>(null)\n  const [updatingLead, setUpdatingLead] = useState(false)\n  const [showDeleteModal, setShowDeleteModal] = useState(false)\n  const [deleting, setDeleting] = useState(false)\n  \n  // Touchpoints\n  const [campaignTouchpoints, setCampaignTouchpoints] = useState<any[]>([])\n  const [loadingTouchpoints, setLoadingTouchpoints] = useState(false)\n  \n  // Touchpoints filters and pagination\n  const [touchpointTypeFilter, setTouchpointTypeFilter] = useState('')\n  const [touchpointDateFromFilter, setTouchpointDateFromFilter] = useState('')\n  const [touchpointDateToFilter, setTouchpointDateToFilter] = useState('')\n  const [touchpointOutcomeFilter, setTouchpointOutcomeFilter] = useState('')\n  const [touchpointCurrentPage, setTouchpointCurrentPage] = useState(1)\n  const [touchpointItemsPerPage] = useState(10)\n  const [filteredCampaignTouchpoints, setFilteredCampaignTouchpoints] = useState<any[]>([])\n  \n  // Sequence steps\n  const [sequenceSteps, setSequenceSteps] = useState<any[]>([])\n  const [loadingSequenceSteps, setLoadingSequenceSteps] = useState(false)\n\n  // Edit form data\n  const [editFormData, setEditFormData] = useState({\n    name: '',\n    company: '',\n    description: '',\n    start_date: '',\n    end_date: '',\n    instantly_campaign_id: '',\n    status: 'active'\n  })\n\n  useEffect(() => {\n    if (campaignId) {\n      fetchCampaign()\n      fetchOutreachSequences()\n    }\n  }, [campaignId, selectedCompany])\n\n  const fetchCampaignDistricts = async () => {\n    setLoadingDistricts(true)\n    try {\n      const { data: districts, error } = await supabase\n        .from('district_leads')\n        .select(`\n          id, district_name, county, status, created_at,\n          district_contacts(id, first_name, last_name, email, phone, status)\n        `)\n        .eq('campaign_id', campaignId)\n        .order('district_name', { ascending: true })\n\n      if (error) {\n        console.error('Error fetching campaign districts:', error)\n        return\n      }\n\n      // Enrich with contact counts\n      const enrichedDistricts = (districts || []).map(district => ({\n        ...district,\n        total_contacts: district.district_contacts?.length || 0,\n        valid_contacts: district.district_contacts?.filter((c: any) => c.status === 'Valid').length || 0\n      }))\n\n      setCampaignDistricts(enrichedDistricts)\n    } catch (error) {\n      console.error('Error fetching campaign districts:', error)\n    } finally {\n      setLoadingDistricts(false)\n    }\n  }\n\n  // Fetch leads and touchpoints after campaign is loaded\n  useEffect(() => {\n    if (campaign && !loadingLeads && !loadingTouchpoints) {\n      fetchCampaignLeads()\n      fetchCampaignTouchpoints()\n      if (campaign.company === 'Avalern') {\n        fetchCampaignDistricts()\n      }\n    }\n  }, [campaign?.id, campaign?.company])\n\n  // Helper function to get touchpoint counts for a lead/contact\n  const getTouchpointCounts = (leadId: string) => {\n    const leadTouchpoints = campaignTouchpoints.filter(tp => \n      tp.lead_id === leadId || tp.district_contact_id === leadId\n    )\n    \n    const scheduled = leadTouchpoints.filter(tp => !tp.completed_at).length\n    const completed = leadTouchpoints.filter(tp => tp.completed_at).length\n    const total = leadTouchpoints.length\n    \n    return { scheduled, completed, total }\n  }\n\n  const fetchSequenceSteps = async (sequenceId: string) => {\n    if (!sequenceId) return\n    \n    setLoadingSequenceSteps(true)\n    try {\n      const { data, error } = await supabase\n        .from('outreach_steps')\n        .select('*')\n        .eq('sequence_id', sequenceId)\n        .order('step_order', { ascending: true })\n\n      if (error) {\n        console.error('Error fetching sequence steps:', error)\n      } else {\n        setSequenceSteps(data || [])\n      }\n    } catch (error) {\n      console.error('Error fetching sequence steps:', error)\n    } finally {\n      setLoadingSequenceSteps(false)\n    }\n  }\n\n  const fetchCampaign = async () => {\n    try {\n      setLoading(true)\n      \n      // Fetch basic campaign data first\n      const { data: basicCampaign, error: campaignError } = await supabase\n        .from('campaigns')\n        .select('id, name, company, start_date, end_date, created_at, outreach_sequence_id, description, instantly_campaign_id, status')\n        .eq('id', campaignId)\n        .single()\n\n      if (campaignError) {\n        console.error('Error fetching campaign:', campaignError)\n        return\n      }\n\n      let campaignData = { ...basicCampaign }\n\n      // Fetch outreach sequence separately\n      if (basicCampaign.outreach_sequence_id) {\n        try {\n          const { data: sequence, error: seqError } = await supabase\n            .from('outreach_sequences')\n            .select('id, name, description')\n            .eq('id', basicCampaign.outreach_sequence_id)\n            .single()\n\n          if (!seqError && sequence) {\n            (campaignData as any).outreach_sequence = sequence\n          }\n        } catch (error) {\n          console.warn('Could not fetch outreach sequence:', error)\n        }\n      }\n\n      // Fetch related data based on company type\n      if (selectedCompany === 'Avalern') {\n        // Fetch district leads\n        const { data: districtLeads, error: districtError } = await supabase\n          .from('district_leads')\n          .select('id, status')\n          .eq('campaign_id', campaignId)\n\n        if (!districtError && districtLeads) {\n          // Fetch district contacts\n          const districtLeadIds = districtLeads.map(dl => dl.id)\n          let districtContacts: any[] = []\n          \n          if (districtLeadIds.length > 0) {\n            const { data: contacts, error: contactsError } = await supabase\n              .from('district_contacts')\n              .select('id, district_lead_id')\n              .in('district_lead_id', districtLeadIds)\n\n            if (!contactsError && contacts) {\n              districtContacts = contacts\n            }\n          }\n\n          // Fetch touchpoints for district contacts\n          const contactIds = districtContacts.map(c => c.id)\n          let touchpoints: any[] = []\n          \n          if (contactIds.length > 0) {\n            const { data: tps, error: tpError } = await supabase\n              .from('touchpoints')\n              .select('type, completed_at, outcome, district_contact_id')\n              .in('district_contact_id', contactIds)\n\n            if (!tpError && tps) {\n              touchpoints = tps\n            }\n          }\n\n          // Attach data to campaign\n          (campaignData as any).district_leads = districtLeads.map(dl => ({\n            ...dl,\n            district_contacts: districtContacts\n              .filter(c => c.district_lead_id === dl.id)\n              .map(c => ({\n                ...c,\n                touchpoints: touchpoints.filter(tp => tp.district_contact_id === c.id)\n              }))\n          }))\n        }\n      } else {\n        // Fetch regular leads\n        const { data: leads, error: leadsError } = await supabase\n          .from('leads')\n          .select('id, status')\n          .eq('campaign_id', campaignId)\n\n        if (!leadsError && leads) {\n          // Fetch touchpoints for leads\n          const leadIds = leads.map(l => l.id)\n          let touchpoints: any[] = []\n          \n          if (leadIds.length > 0) {\n            const { data: tps, error: tpError } = await supabase\n              .from('touchpoints')\n              .select('type, completed_at, outcome, lead_id')\n              .in('lead_id', leadIds)\n\n            if (!tpError && tps) {\n              touchpoints = tps\n            }\n          }\n\n          // Attach data to campaign\n          (campaignData as any).leads = leads.map(lead => ({\n            ...lead,\n            touchpoints: touchpoints.filter(tp => tp.lead_id === lead.id)\n          }))\n        }\n      }\n\n      if (campaignData) {\n        let leadCount = 0\n        let allTouchpoints: any[] = []\n        let engagedCount = 0\n        let wonCount = 0\n\n        if (selectedCompany === 'Avalern') {\n          // Handle district_leads data structure\n          const districtLeads = (campaignData as any).district_leads || []\n          leadCount = districtLeads.reduce((total: number, district: any) => \n            total + (district.district_contacts?.length || 0), 0)\n          \n          // Flatten touchpoints from all district contacts\n          allTouchpoints = districtLeads.flatMap((districtLead: any) =>\n            districtLead.district_contacts?.flatMap((contact: any) => contact.touchpoints || []) || []\n          )\n          \n          engagedCount = districtLeads.filter((dl: any) => dl.status === 'engaged').length\n          wonCount = districtLeads.filter((dl: any) => dl.status === 'won').length\n        } else {\n          // Handle regular leads data structure\n          const leads = (campaignData as any).leads || []\n          leadCount = leads.length\n          \n          // Flatten touchpoints from all leads\n          allTouchpoints = leads.flatMap((lead: any) => lead.touchpoints || [])\n          \n          engagedCount = leads.filter((lead: any) => lead.status === 'engaged').length\n          wonCount = leads.filter((lead: any) => lead.status === 'won').length\n        }\n        \n        const emailsSent = allTouchpoints.filter((tp: any) => tp.type === 'email' && tp.completed_at && tp.outcome).length\n        const callsMade = allTouchpoints.filter((tp: any) => tp.type === 'call' && tp.completed_at && tp.outcome).length\n        const linkedinMessages = allTouchpoints.filter((tp: any) => tp.type === 'linkedin_message' && tp.completed_at && tp.outcome).length\n        \n        const conversionRate = leadCount > 0 ? Number(((wonCount / leadCount) * 100).toFixed(1)) : 0\n\n        const enrichedCampaign = {\n          ...campaignData,\n          leadCount,\n          emailsSent,\n          callsMade,\n          linkedinMessages,\n          appointmentsBooked: engagedCount,\n          sales: wonCount,\n          conversionRate,\n          launch_date: campaignData.start_date || campaignData.created_at,\n          status: leadCount > 0 ? 'active' : 'queued',\n          outreach_sequence: Array.isArray((campaignData as any).outreach_sequence) ? (campaignData as any).outreach_sequence[0] : (campaignData as any).outreach_sequence\n        } as Campaign\n\n        setCampaign(enrichedCampaign)\n        setEditFormData({\n          name: campaignData.name,\n          company: campaignData.company,\n          start_date: campaignData.start_date || campaignData.created_at.split('T')[0],\n          end_date: campaignData.end_date || new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n          description: campaignData.description || '',\n          instantly_campaign_id: campaignData.instantly_campaign_id || '',\n          status: campaignData.status || 'active'\n        })\n        \n        // Fetch sequence steps if there's an outreach sequence\n        if (campaignData.outreach_sequence_id) {\n          fetchSequenceSteps(campaignData.outreach_sequence_id)\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching campaign:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const fetchOutreachSequences = async () => {\n    if (!selectedCompany) {\n      console.warn('No company selected, skipping outreach sequences fetch')\n      return\n    }\n\n    try {\n      const { data, error } = await supabase\n        .from('outreach_sequences')\n        .select('id, name, description, company')\n        .eq('company', selectedCompany)\n\n      if (error) {\n        console.warn('Error fetching outreach sequences:', error.message || error)\n        setOutreachSequences([])\n        return\n      }\n\n      setOutreachSequences(data || [])\n    } catch (error) {\n      console.warn('Error fetching outreach sequences:', error)\n      setOutreachSequences([])\n    }\n  }\n\n  const fetchCampaignLeads = async () => {\n    setLoadingLeads(true)\n    try {\n      if (campaign?.company === 'Avalern') {\n        // For Avalern campaigns, fetch district contacts instead of leads\n        const { data: districtContacts, error: contactError } = await supabase\n          .from('district_contacts')\n          .select(`\n            id, first_name, last_name, title, email, phone, status, notes,\n            district_lead:district_leads!inner(id, district_name, campaign_id)\n          `)\n          .eq('district_lead.campaign_id', campaignId)\n\n        if (contactError) {\n          console.error('Error fetching campaign district contacts:', contactError)\n          return\n        }\n\n                 // Transform district contacts to match lead structure\n        const transformedContacts = (districtContacts || []).map((contact: any) => ({\n          id: contact.id,\n          first_name: contact.first_name,\n          last_name: contact.last_name,\n          email: contact.email,\n          phone: contact.phone,\n          company: contact.district_lead?.district_name || '',\n          status: 'not_contacted', // District contacts use different status system\n          notes: contact.notes,\n          title: contact.title,\n          city: '', // District contacts don't have city/state\n          state: '',\n          linkedin_url: '',\n          website_url: '',\n          source: 'District Import',\n          contact_attempts_count: 0,\n          last_contacted_at: null,\n          is_district_contact: true\n        }))\n\n        setCampaignLeads(transformedContacts)\n      } else {\n        // For CraftyCode campaigns, fetch regular leads\n        let { data: currentLeads, error: currentError } = await supabase\n          .from('leads')\n          .select(`\n            id, first_name, last_name, email, status, city, state, company, \n            phone, linkedin_url, website_url, online_profile, source\n          `)\n          .eq('campaign_id', campaignId)\n\n        if (currentError) {\n          console.error('Error fetching campaign leads:', currentError)\n          return\n        }\n\n        // Try to fetch contact attempts separately to avoid relation errors\n        const leadIds = currentLeads?.map(lead => lead.id) || []\n        let contactAttemptsData: any[] = []\n        \n        if (leadIds.length > 0) {\n          const { data: attempts, error: attemptsError } = await supabase\n            .from('contact_attempts')\n            .select('lead_id, type, completed_at, notes')\n            .in('lead_id', leadIds)\n\n          if (attemptsError) {\n            console.warn('Contact attempts table not found or accessible, using default values:', attemptsError)\n          } else {\n            contactAttemptsData = attempts || []\n          }\n        }\n\n        // Process leads to add contact attempt counts and last contact date\n        const processedLeads = (currentLeads || []).map(lead => {\n          const leadAttempts = contactAttemptsData.filter(attempt => attempt.lead_id === lead.id)\n          const lastAttempt = leadAttempts.length > 0 \n            ? leadAttempts.sort((a: any, b: any) => new Date(b.completed_at).getTime() - new Date(a.completed_at).getTime())[0]\n            : null\n\n          return {\n            ...lead,\n            contact_attempts_count: leadAttempts.length,\n            last_contacted_at: lastAttempt?.completed_at || null,\n            is_district_contact: false\n          }\n        })\n\n        setCampaignLeads(processedLeads)\n      }\n    } catch (error) {\n      console.error('Error fetching leads:', error)\n    } finally {\n      setLoadingLeads(false)\n    }\n  }\n\n  const fetchCampaignTouchpoints = async () => {\n    setLoadingTouchpoints(true)\n    try {\n      if (campaign?.company === 'Avalern') {\n        // For Avalern campaigns, fetch touchpoints for district contacts\n        const { data: touchpoints, error } = await supabase\n          .from('touchpoints')\n          .select(`\n            *,\n            district_contact:district_contacts!inner(\n              id,\n              first_name,\n              last_name,\n              email,\n              district_lead:district_leads!inner(\n                id,\n                campaign_id\n              )\n            )\n          `)\n          .eq('district_contact.district_lead.campaign_id', campaignId)\n          .order('scheduled_at', { ascending: true })\n\n        if (error) {\n          console.error('Error fetching campaign touchpoints for district contacts:', error)\n        } else {\n          setCampaignTouchpoints(touchpoints || [])\n        }\n      } else {\n        // For CraftyCode campaigns, fetch touchpoints for regular leads\n        const { data: touchpoints, error } = await supabase\n          .from('touchpoints')\n          .select(`\n            *,\n            lead:leads!inner(\n              id,\n              first_name,\n              last_name,\n              email,\n              campaign_id\n            )\n          `)\n          .eq('lead.campaign_id', campaignId)\n          .order('scheduled_at', { ascending: true })\n\n        if (error) {\n          console.error('Error fetching campaign touchpoints:', error)\n        } else {\n          setCampaignTouchpoints(touchpoints || [])\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching campaign touchpoints:', error)\n    } finally {\n      setLoadingTouchpoints(false)\n    }\n  }\n\n  const handleUpdateCampaign = async () => {\n    if (!campaign || !editFormData.name || !editFormData.end_date) {\n      alert('Please fill in all required fields')\n      return\n    }\n\n    setUpdating(true)\n    try {\n      const { error } = await supabase\n        .from('campaigns')\n        .update({\n          name: editFormData.name,\n          company: editFormData.company,\n          description: editFormData.description,\n          start_date: editFormData.start_date,\n          end_date: editFormData.end_date,\n          instantly_campaign_id: editFormData.instantly_campaign_id,\n          status: editFormData.status\n        })\n        .eq('id', campaign.id)\n\n      if (error) {\n        console.error('Error updating campaign:', error)\n        alert('Failed to update campaign')\n        return\n      }\n\n      alert('Campaign updated successfully!')\n      setIsEditing(false)\n      fetchCampaign() // Refresh campaign data\n    } catch (error) {\n      console.error('Error updating campaign:', error)\n      alert('Failed to update campaign')\n    } finally {\n      setUpdating(false)\n    }\n  }\n\n  const handleRemoveLeadFromCampaign = async (leadId: string) => {\n    try {\n      const { error } = await supabase\n        .from('leads')\n        .update({ campaign_id: null })\n        .eq('id', leadId)\n\n      if (error) {\n        console.error('Error removing lead from campaign:', error)\n        alert('Failed to remove lead from campaign')\n        return\n      }\n\n      fetchCampaignLeads()\n      fetchCampaign() // Refresh campaign stats\n    } catch (error) {\n      console.error('Error removing lead from campaign:', error)\n      alert('Failed to remove lead from campaign')\n    }\n  }\n\n  const handleOpenLeadEditPanel = (lead: any) => {\n    setSelectedLeadForEdit(lead)\n    setEditingLeadData({ ...lead })\n  }\n\n  const handleCloseLeadEditPanel = () => {\n    setSelectedLeadForEdit(null)\n    setEditingLeadData(null)\n  }\n\n  const handleOpenDistrictEditPanel = (district: any) => {\n    setSelectedDistrictForEdit(district)\n    setEditingDistrictData({ ...district })\n  }\n\n  const handleCloseDistrictEditPanel = () => {\n    setSelectedDistrictForEdit(null)\n    setEditingDistrictData(null)\n  }\n\n  const handleUpdateDistrictInCampaign = async () => {\n    if (!editingDistrictData || !selectedDistrictForEdit) {\n      return\n    }\n\n    setUpdatingDistrict(true)\n    try {\n      const { error } = await supabase\n        .from('district_leads')\n        .update({\n          district_name: editingDistrictData.district_name,\n          county: editingDistrictData.county,\n          status: editingDistrictData.status\n        })\n        .eq('id', selectedDistrictForEdit.id)\n\n      if (error) {\n        console.error('Error updating district:', error)\n        alert('Failed to update district')\n        return\n      }\n\n      // Refresh districts data\n      fetchCampaignDistricts()\n      handleCloseDistrictEditPanel()\n    } catch (error) {\n      console.error('Error updating district:', error)\n      alert('Failed to update district')\n    } finally {\n      setUpdatingDistrict(false)\n    }\n  }\n\n  const handleUpdateLeadInCampaign = async () => {\n    if (!editingLeadData || !selectedLeadForEdit) return\n\n    setUpdatingLead(true)\n    try {\n      const { error } = await supabase\n        .from('leads')\n        .update({\n          first_name: editingLeadData.first_name,\n          last_name: editingLeadData.last_name,\n          email: editingLeadData.email,\n          phone: editingLeadData.phone,\n          city: editingLeadData.city,\n          state: editingLeadData.state,\n          company: editingLeadData.company,\n          status: editingLeadData.status,\n          source: editingLeadData.source,\n          linkedin_url: editingLeadData.linkedin_url,\n          website_url: editingLeadData.website_url\n        })\n        .eq('id', selectedLeadForEdit.id)\n\n      if (error) {\n        console.error('Error updating lead:', error)\n        alert('Failed to update lead')\n        return\n      }\n\n      alert('Lead updated successfully!')\n      handleCloseLeadEditPanel()\n      fetchCampaignLeads() // Refresh leads\n    } catch (error) {\n      console.error('Error updating lead:', error)\n      alert('Failed to update lead')\n    } finally {\n      setUpdatingLead(false)\n    }\n  }\n\n  const handleDeleteCampaign = async () => {\n    if (!campaign) return\n\n    setDeleting(true)\n    try {\n      // First, remove campaign assignment from all leads\n      const { error: leadsError } = await supabase\n        .from('leads')\n        .update({ campaign_id: null })\n        .eq('campaign_id', campaign.id)\n\n      if (leadsError) {\n        console.error('Error updating leads:', leadsError)\n        alert('Failed to update leads before deleting campaign')\n        return\n      }\n\n      // Then delete the campaign\n      const { error: campaignError } = await supabase\n        .from('campaigns')\n        .delete()\n        .eq('id', campaign.id)\n\n      if (campaignError) {\n        console.error('Error deleting campaign:', campaignError)\n        alert('Failed to delete campaign')\n        return\n      }\n\n      alert('Campaign deleted successfully!')\n      // Navigate back to campaigns page\n      window.location.href = '/campaigns'\n    } catch (error) {\n      console.error('Error deleting campaign:', error)\n      alert('Failed to delete campaign')\n    } finally {\n      setDeleting(false)\n      setShowDeleteModal(false)\n    }\n  }\n\n  const getStatusColor = (status: string) => {\n    const colors = {\n      'active': 'bg-green-100 text-green-800',\n      'queued': 'bg-yellow-100 text-yellow-800',\n      'completed': 'bg-blue-100 text-blue-800',\n      'paused': 'bg-orange-100 text-orange-800'\n    }\n    return colors[status as keyof typeof colors] || colors['queued']\n  }\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'active':\n        return <Target className=\"h-4 w-4\" />\n      case 'queued':\n        return <Calendar className=\"h-4 w-4\" />\n      case 'completed':\n        return <CheckCircle className=\"h-4 w-4\" />\n      case 'paused':\n        return <Clock className=\"h-4 w-4\" />\n      default:\n        return <Target className=\"h-4 w-4\" />\n    }\n  }\n\n  if (loading) {\n    return (\n      <DashboardLayout>\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n        </div>\n      </DashboardLayout>\n    )\n  }\n\n  if (!campaign) {\n    return (\n      <DashboardLayout>\n        <div className=\"text-center py-12\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Campaign not found</h3>\n          <button\n            onClick={() => router.push('/campaigns')}\n            className=\"text-blue-600 hover:text-blue-800\"\n          >\n            ← Back to Campaigns\n          </button>\n        </div>\n      </DashboardLayout>\n    )\n  }\n\n  return (\n    <DashboardLayout>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <button\n              onClick={() => router.push('/campaigns')}\n              className=\"flex items-center text-gray-600 hover:text-gray-900\"\n            >\n              <ArrowLeft className=\"h-5 w-5 mr-2\" />\n              Back to Campaigns\n            </button>\n            <div className=\"flex items-center space-x-3\">\n              {isEditing ? (\n                <>\n                  <button\n                    onClick={() => setIsEditing(false)}\n                    className=\"px-4 py-2 text-gray-600 border border-gray-200 rounded-lg hover:bg-gray-50\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={handleUpdateCampaign}\n                    disabled={updating}\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                  >\n                    {updating ? 'Saving...' : 'Save Changes'}\n                  </button>\n                </>\n              ) : (\n                <>\n                  <button\n                    onClick={() => setShowDeleteModal(true)}\n                    className=\"flex items-center px-4 py-2 text-red-600 border border-red-200 rounded-lg hover:bg-red-50\"\n                  >\n                    <Trash2 className=\"h-4 w-4 mr-2\" />\n                    Delete\n                  </button>\n                  <button\n                    onClick={() => setIsEditing(true)}\n                    className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                  >\n                    <Edit2 className=\"h-4 w-4 mr-2\" />\n                    Edit Campaign\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n          \n          {/* Campaign Title and Info */}\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900\">{campaign.name}</h1>\n            <div className=\"flex items-center space-x-4 mt-2\">\n              <div className=\"flex items-center space-x-2\">\n                <div className={`w-3 h-3 rounded-full ${campaign.company === 'CraftyCode' ? 'bg-blue-500' : 'bg-purple-500'}`}></div>\n                <span className=\"text-sm font-medium text-gray-600\">{campaign.company}</span>\n              </div>\n              <span className={`inline-flex items-center px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(campaign.status || 'queued')}`}>\n                {getStatusIcon(campaign.status || 'queued')}\n                <span className=\"ml-1 capitalize\">{campaign.status || 'queued'}</span>\n              </span>\n            </div>\n            {campaign.description && (\n              <p className=\"text-gray-600 mt-2\">{campaign.description}</p>\n            )}\n          </div>\n        </div>\n\n        {/* Campaign Stats */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n            <div className=\"flex items-center\">\n              <Mail className=\"h-8 w-8 text-green-600 mr-3\" />\n              <div>\n                <p className=\"text-2xl font-bold text-gray-900\">{campaign.emailsSent}</p>\n                <p className=\"text-sm text-gray-600\">Emails Sent</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n            <div className=\"flex items-center\">\n              <Phone className=\"h-8 w-8 text-orange-600 mr-3\" />\n              <div>\n                <p className=\"text-2xl font-bold text-gray-900\">{campaign.callsMade}</p>\n                <p className=\"text-sm text-gray-600\">Calls Made</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n            <div className=\"flex items-center\">\n              <MessageSquare className=\"h-8 w-8 text-blue-600 mr-3\" />\n              <div>\n                <p className=\"text-2xl font-bold text-gray-900\">{campaign.linkedinMessages || 0}</p>\n                <p className=\"text-sm text-gray-600\">LinkedIn Messages</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n            <div className=\"flex items-center\">\n              <CheckCircle className=\"h-8 w-8 text-emerald-600 mr-3\" />\n              <div>\n                <p className=\"text-2xl font-bold text-gray-900\">{campaign.appointmentsBooked}</p>\n                <p className=\"text-sm text-gray-600\">Engaged Leads</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg\">\n          <button\n            onClick={() => setActiveTab('overview')}\n            className={`flex-1 px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n              activeTab === 'overview'\n                ? 'bg-white text-blue-600 shadow-sm'\n                : 'text-gray-600 hover:text-gray-900'\n            }`}\n          >\n            Campaign Overview\n          </button>\n          <button\n            onClick={() => setActiveTab('leads')}\n            className={`flex-1 px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n              activeTab === 'leads'\n                ? 'bg-white text-blue-600 shadow-sm'\n                : 'text-gray-600 hover:text-gray-900'\n            }`}\n          >\n            {campaign.company === 'Avalern' ? 'Contact Management' : 'Lead Management'} ({campaignLeads.length})\n          </button>\n          <button\n            onClick={() => setActiveTab('touchpoints')}\n            className={`flex-1 px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n              activeTab === 'touchpoints'\n                ? 'bg-white text-blue-600 shadow-sm'\n                : 'text-gray-600 hover:text-gray-900'\n            }`}\n          >\n            Touchpoint Schedule ({campaignTouchpoints.length})\n          </button>\n        </div>\n\n        {/* Tab Content */}\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n          {/* Campaign Overview Tab */}\n          {activeTab === 'overview' && (\n            <div className=\"p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Campaign Details</h3>\n              \n              {isEditing ? (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Campaign Name *</label>\n                    <input\n                      type=\"text\"\n                      value={editFormData.name}\n                      onChange={(e) => setEditFormData({ ...editFormData, name: e.target.value })}\n                      className=\"w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-white transition-colors\"\n                      placeholder=\"Enter campaign name\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Start Date</label>\n                    <input\n                      type=\"date\"\n                      value={editFormData.start_date}\n                      onChange={(e) => setEditFormData({ ...editFormData, start_date: e.target.value })}\n                      className=\"w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-white transition-colors\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">End Date</label>\n                    <input\n                      type=\"date\"\n                      value={editFormData.end_date}\n                      onChange={(e) => setEditFormData({ ...editFormData, end_date: e.target.value })}\n                      min={editFormData.start_date}\n                      className=\"w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-white transition-colors\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Campaign Status</label>\n                    <select\n                      value={editFormData.status}\n                      onChange={(e) => setEditFormData({ ...editFormData, status: e.target.value })}\n                      className=\"w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-white transition-colors\"\n                    >\n                      <option value=\"active\">Active</option>\n                      <option value=\"queued\">Queued</option>\n                      <option value=\"paused\">Paused</option>\n                      <option value=\"completed\">Completed</option>\n                    </select>\n                  </div>\n                  \n                  <div className=\"md:col-span-2\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Description</label>\n                    <textarea\n                      value={editFormData.description}\n                      onChange={(e) => setEditFormData({ ...editFormData, description: e.target.value })}\n                      rows={3}\n                      className=\"w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-white transition-colors resize-none\"\n                      placeholder=\"Optional campaign description...\"\n                    />\n                  </div>\n                  \n                  {/* <div className=\"md:col-span-2\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Instantly.ai Campaign ID\n                      <span className=\"text-gray-500 text-xs ml-1\">(Optional - for email sync integration)</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={editFormData.instantly_campaign_id}\n                      onChange={(e) => setEditFormData({ ...editFormData, instantly_campaign_id: e.target.value })}\n                      className=\"w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-white transition-colors\"\n                      placeholder=\"Enter your Instantly.ai campaign ID...\"\n                    />\n                  </div> */}\n                </div>\n              ) : (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Campaign Name</h4>\n                    <p className=\"text-gray-900\">{campaign.name}</p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Company</h4>\n                    <p className=\"text-gray-900\">{campaign.company}</p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Start Date</h4>\n                    <p className=\"text-gray-900\">\n                      {campaign.start_date ? new Date(campaign.start_date).toLocaleDateString() : 'Not set'}\n                    </p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">End Date</h4>\n                    <p className=\"text-gray-900\">\n                      {campaign.end_date ? new Date(campaign.end_date).toLocaleDateString() : 'Not set'}\n                    </p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Created</h4>\n                    <p className=\"text-gray-900\">{new Date(campaign.created_at).toLocaleDateString()}</p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Status</h4>\n                    <span className={`inline-flex items-center px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(campaign.status || 'active')}`}>\n                      {getStatusIcon(campaign.status || 'active')}\n                      <span className=\"ml-1 capitalize\">{campaign.status || 'active'}</span>\n                    </span>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Outreach Sequence</h4>\n                    <p className=\"text-gray-900\">\n                      {campaign.outreach_sequence ? campaign.outreach_sequence.name : 'No sequence assigned'}\n                    </p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Instantly.ai Campaign ID</h4>\n                    <p className=\"text-gray-900\">\n                      {campaign.instantly_campaign_id || 'Not configured'}\n                    </p>\n                  </div>\n                  \n                  {campaign.description && (\n                    <div className=\"md:col-span-2\">\n                      <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Description</h4>\n                      <p className=\"text-gray-900\">{campaign.description}</p>\n                    </div>\n                  )}\n                  \n                  {/* Touchpoint Sequence Pattern */}\n                  <div className=\"md:col-span-2\">\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Touchpoint Sequence Pattern</h4>\n                    {campaign.outreach_sequence ? (\n                      loadingSequenceSteps ? (\n                        <div className=\"flex items-center py-4\">\n                          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"></div>\n                          <span className=\"text-gray-500 text-sm\">Loading sequence...</span>\n                        </div>\n                      ) : sequenceSteps.length === 0 ? (\n                        <p className=\"text-gray-500 italic\">No steps defined in sequence</p>\n                      ) : (\n                        <div className=\"space-y-2\">\n                          {sequenceSteps.map((step, index) => {\n                            const startDate = new Date(campaign.start_date || campaign.created_at)\n                            const stepDate = new Date(startDate)\n                            stepDate.setDate(startDate.getDate() + (step.day_offset || 0))\n                            \n                            return (\n                              <div key={step.id} className=\"flex items-center space-x-3 p-2 bg-gray-50 rounded-lg\">\n                                <span className=\"text-sm font-medium text-gray-600 w-8\">\n                                  {step.step_order}.\n                                </span>\n                                <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\n                                  step.type === 'email' ? 'bg-blue-100 text-blue-800' :\n                                  step.type === 'call' ? 'bg-green-100 text-green-800' :\n                                  step.type === 'linkedin_message' ? 'bg-purple-100 text-purple-800' :\n                                  'bg-gray-100 text-gray-800'\n                                }`}>\n                                  {step.type.replace('_', ' ').toUpperCase()}\n                                </span>\n                                <span className=\"text-sm text-gray-600\">\n                                  on {stepDate.toLocaleDateString()}\n                                </span>\n                                {step.day_offset > 0 && (\n                                  <span className=\"text-xs text-gray-500\">\n                                    (+{step.day_offset} days)\n                                  </span>\n                                )}\n                              </div>\n                            )\n                          })}\n                        </div>\n                      )\n                    ) : (\n                      <p className=\"text-gray-500 italic\">No outreach sequence assigned</p>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Lead Management Tab */}\n          {activeTab === 'leads' && (\n            <div className=\"p-6\">\n              {/* Sub-tabs for Avalern campaigns */}\n              {campaign.company === 'Avalern' && (\n                <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg mb-6\">\n                  <button\n                    onClick={() => setContactTab('contacts')}\n                    className={`flex-1 px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n                      contactTab === 'contacts'\n                        ? 'bg-white text-blue-600 shadow-sm'\n                        : 'text-gray-600 hover:text-gray-900'\n                    }`}\n                  >\n                    District Contacts ({campaignLeads.length})\n                  </button>\n                  <button\n                    onClick={() => setContactTab('districts')}\n                    className={`flex-1 px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n                      contactTab === 'districts'\n                        ? 'bg-white text-blue-600 shadow-sm'\n                        : 'text-gray-600 hover:text-gray-900'\n                    }`}\n                  >\n                    Districts ({campaignDistricts.length})\n                  </button>\n                </div>\n              )}\n\n              {loadingLeads || (campaign.company === 'Avalern' && loadingDistricts) ? (\n                <div className=\"text-center py-8\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n                  <p className=\"text-gray-500\">Loading...</p>\n                </div>\n              ) : (\n                <>\n                  {/* District Contacts View */}\n                  {(campaign.company !== 'Avalern' || contactTab === 'contacts') && (\n                    <div className=\"flex gap-6\">\n                      {/* Main Leads Table */}\n                      <div className={`transition-all duration-300 ${selectedLeadForEdit ? 'w-1/2' : 'w-full'}`}>\n                        <div className=\"space-y-6\">\n                          {/* Campaign Leads Table */}\n                          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n                        <div className=\"px-6 py-4 border-b border-gray-200\">\n                          <h3 className=\"text-lg font-semibold text-gray-900\">\n                            {campaign.company === 'Avalern' ? 'District Contacts' : 'Campaign Leads'} ({campaignLeads.length})\n                          </h3>\n                        </div>\n                        <div className=\"overflow-x-auto\">\n                          <table className=\"min-w-full divide-y divide-gray-200\">\n                            <thead className=\"bg-gray-50\">\n                              <tr>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                  {campaign.company === 'Avalern' ? 'Contact' : 'Lead'}\n                                </th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                  {campaign.company === 'Avalern' ? 'District/Title' : 'Details'}\n                                </th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                  {campaign.company === 'Avalern' ? 'Touchpoints' : 'Contact Attempts'}\n                                </th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Last Contact</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                              </tr>\n                            </thead>\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\n                              {campaignLeads.length === 0 ? (\n                                <tr>\n                                  <td colSpan={6} className=\"px-6 py-8 text-center text-gray-500\">\n                                    {campaign.company === 'Avalern' \n                                      ? 'No district contacts found for this campaign' \n                                      : 'No leads assigned to this campaign'\n                                    }\n                                  </td>\n                                </tr>\n                              ) : (\n                                campaignLeads.map((lead) => (\n                                  <tr key={lead.id} className=\"hover:bg-gray-50 cursor-pointer\" onClick={() => handleOpenLeadEditPanel(lead)}>\n                                    <td className=\"px-6 py-4\">\n                                      <div className=\"flex items-center\">\n                                        <div className=\"h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center mr-3\">\n                                          <User className=\"h-5 w-5 text-gray-500\" />\n                                        </div>\n                                        <div>\n                                          <div className=\"text-sm font-medium text-gray-900\">\n                                            {lead.first_name} {lead.last_name}\n                                          </div>\n                                          <div className=\"text-sm text-gray-500\">{lead.email}</div>\n                                        </div>\n                                      </div>\n                                    </td>\n                                    <td className=\"px-6 py-4\">\n                                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                                        lead.status === 'not_contacted' ? 'bg-gray-100 text-gray-800' :\n                                        lead.status === 'actively_contacting' ? 'bg-blue-100 text-blue-800' :\n                                        lead.status === 'engaged' ? 'bg-green-100 text-green-800' :\n                                        lead.status === 'won' ? 'bg-emerald-100 text-emerald-800' :\n                                        lead.status === 'not_interested' ? 'bg-red-100 text-red-800' :\n                                        'bg-gray-100 text-gray-800'\n                                      }`}>\n                                        {lead.status?.replace('_', ' ').toUpperCase() || 'UNKNOWN'}\n                                      </span>\n                                    </td>\n                                    <td className=\"px-6 py-4\">\n                                      {lead.is_district_contact ? (\n                                        // District contact view\n                                        <div>\n                                          <div className=\"text-sm text-gray-900 font-medium\">\n                                            {lead.company}\n                                          </div>\n                                          {lead.title && (\n                                            <div className=\"text-sm text-gray-500\">{lead.title}</div>\n                                          )}\n                                        </div>\n                                      ) : (\n                                        // Regular lead view\n                                        <div>\n                                          <div className=\"text-sm text-gray-900\">\n                                            {lead.city && lead.state ? `${lead.city}, ${lead.state}` : lead.city || lead.state || 'N/A'}\n                                          </div>\n                                          <div className=\"text-sm\">\n                                            {lead.online_profile ? (\n                                              <a \n                                                href={lead.online_profile} \n                                                target=\"_blank\" \n                                                rel=\"noopener noreferrer\"\n                                                className=\"text-blue-600 hover:text-blue-800 hover:underline\"\n                                                onClick={(e) => e.stopPropagation()}\n                                              >\n                                                View Profile\n                                              </a>\n                                            ) : lead.linkedin_url ? (\n                                              <a \n                                                href={lead.linkedin_url} \n                                                target=\"_blank\" \n                                                rel=\"noopener noreferrer\"\n                                                className=\"text-blue-600 hover:text-blue-800 hover:underline\"\n                                                onClick={(e) => e.stopPropagation()}\n                                              >\n                                                LinkedIn\n                                              </a>\n                                            ) : (\n                                              <span className=\"text-gray-500\">N/A</span>\n                                            )}\n                                          </div>\n                                        </div>\n                                      )}\n                                    </td>\n                                    <td className=\"px-6 py-4\">\n                                      {campaign.company === 'Avalern' ? (\n                                        // Show touchpoints for Avalern\n                                        <div className=\"flex flex-col space-y-1\">\n                                          {(() => {\n                                            const counts = getTouchpointCounts(lead.id)\n                                            return (\n                                              <>\n                                                <span className=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                                                  {counts.scheduled} scheduled\n                                                </span>\n                                                <span className=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                                                  {counts.completed} completed\n                                                </span>\n                                              </>\n                                            )\n                                          })()}\n                                        </div>\n                                      ) : (\n                                        // Show contact attempts for CraftyCode\n                                        <div className=\"flex items-center text-sm text-gray-900\">\n                                          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                                            {lead.contact_attempts_count || 0} attempts\n                                          </span>\n                                        </div>\n                                      )}\n                                    </td>\n                                    <td className=\"px-6 py-4\">\n                                      <div className=\"flex items-center text-sm text-gray-900\">\n                                        <Calendar className=\"h-3 w-3 mr-1 text-gray-400\" />\n                                        {lead.last_contacted_at ? new Date(lead.last_contacted_at).toLocaleDateString() : 'Never'}\n                                      </div>\n                                    </td>\n                                    <td className=\"px-6 py-4\" onClick={(e) => e.stopPropagation()}>\n                                      <button\n                                        onClick={() => handleRemoveLeadFromCampaign(lead.id)}\n                                        className=\"flex items-center text-red-600 hover:text-red-800 text-sm font-medium\"\n                                      >\n                                        <Minus className=\"h-4 w-4 mr-1\" />\n                                        Remove\n                                      </button>\n                                    </td>\n                                  </tr>\n                                ))\n                              )}\n                            </tbody>\n                          </table>\n                        </div>\n                      </div>\n\n\n                    </div>\n                  </div>\n\n                  {/* Lead Edit Panel */}\n                  {selectedLeadForEdit && editingLeadData && (\n                    <div className=\"w-1/2 bg-white rounded-lg shadow-sm border border-gray-200 h-fit\">\n                      <div className=\"px-6 py-4 border-b border-gray-200\">\n                        <div className=\"flex items-center justify-between\">\n                          <h2 className=\"text-lg font-semibold text-gray-900\">\n                            Edit {selectedLeadForEdit.first_name} {selectedLeadForEdit.last_name}\n                          </h2>\n                          <button\n                            onClick={handleCloseLeadEditPanel}\n                            className=\"text-gray-400 hover:text-gray-600\"\n                          >\n                            <X className=\"h-6 w-6\" />\n                          </button>\n                        </div>\n                      </div>\n\n                      <div className=\"px-6 py-4 space-y-6 max-h-[80vh] overflow-y-auto\">\n                        {/* Basic Information */}\n                        <div>\n                          <h3 className=\"text-md font-medium text-gray-900 mb-3\">Basic Information</h3>\n                          <div className=\"grid grid-cols-1 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">First Name</label>\n                              <input\n                                type=\"text\"\n                                value={editingLeadData.first_name || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, first_name: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Last Name</label>\n                              <input\n                                type=\"text\"\n                                value={editingLeadData.last_name || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, last_name: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n                              <input\n                                type=\"email\"\n                                value={editingLeadData.email || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, email: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Phone</label>\n                              <input\n                                type=\"tel\"\n                                value={editingLeadData.phone || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, phone: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              />\n                            </div>\n                            {selectedLeadForEdit?.is_district_contact && (\n                              <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Title</label>\n                                <input\n                                  type=\"text\"\n                                  value={editingLeadData.title || ''}\n                                  onChange={(e) => setEditingLeadData({...editingLeadData, title: e.target.value})}\n                                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                                />\n                              </div>\n                            )}\n                          </div>\n                        </div>\n\n                        {/* Location & Company/District */}\n                        <div>\n                          <h3 className=\"text-md font-medium text-gray-900 mb-3\">\n                            {selectedLeadForEdit?.is_district_contact ? 'Location & District' : 'Location & Company'}\n                          </h3>\n                          <div className=\"grid grid-cols-1 gap-4\">\n                            {!selectedLeadForEdit?.is_district_contact && (\n                              <>\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">City</label>\n                                  <input\n                                    type=\"text\"\n                                    value={editingLeadData.city || ''}\n                                    onChange={(e) => setEditingLeadData({...editingLeadData, city: e.target.value})}\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                                  />\n                                </div>\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">State</label>\n                                  <input\n                                    type=\"text\"\n                                    value={editingLeadData.state || ''}\n                                    onChange={(e) => setEditingLeadData({...editingLeadData, state: e.target.value})}\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                                  />\n                                </div>\n                                <div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Company</label>\n                                  <input\n                                    type=\"text\"\n                                    value={editingLeadData.company || ''}\n                                    onChange={(e) => setEditingLeadData({...editingLeadData, company: e.target.value})}\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                                  />\n                                </div>\n                              </>\n                            )}\n                            {selectedLeadForEdit?.is_district_contact && (\n                              <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">District</label>\n                                <input\n                                  type=\"text\"\n                                  value={editingLeadData.company || ''}\n                                  readOnly\n                                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 text-gray-600\"\n                                />\n                                <p className=\"text-xs text-gray-500 mt-1\">District information is managed separately</p>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n\n                        {/* Status */}\n                        <div>\n                          <h3 className=\"text-md font-medium text-gray-900 mb-3\">Status</h3>\n                          <div className=\"grid grid-cols-1 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n                              <select\n                                value={editingLeadData.status || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, status: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              >\n                                <option value=\"not_contacted\">Not Contacted</option>\n                                <option value=\"actively_contacting\">Actively Contacting</option>\n                                <option value=\"engaged\">Engaged</option>\n                                <option value=\"won\">Won</option>\n                                <option value=\"not_interested\">Not Interested</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* URLs */}\n                        <div>\n                          <h3 className=\"text-md font-medium text-gray-900 mb-3\">URLs & Links</h3>\n                          <div className=\"space-y-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">LinkedIn URL</label>\n                              <input\n                                type=\"url\"\n                                value={editingLeadData.linkedin_url || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, linkedin_url: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Website URL</label>\n                              <input\n                                type=\"url\"\n                                value={editingLeadData.website_url || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, website_url: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* Save Button */}\n                        <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n                          <button\n                            onClick={handleCloseLeadEditPanel}\n                            className=\"px-4 py-2 text-gray-600 border border-gray-200 rounded-lg hover:bg-gray-50\"\n                          >\n                            Cancel\n                          </button>\n                          <button\n                            onClick={handleUpdateLeadInCampaign}\n                            disabled={updatingLead}\n                            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                          >\n                            {updatingLead ? 'Saving...' : 'Save Changes'}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                    )}\n                  </div>\n                )}\n\n                                {/* Districts View for Avalern */}\n                {campaign.company === 'Avalern' && contactTab === 'districts' && (\n                  <div className=\"flex gap-6\">\n                    {/* Main Districts Table */}\n                    <div className={`transition-all duration-300 ${selectedDistrictForEdit ? 'w-1/2' : 'w-full'}`}>\n                      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n                        <div className=\"px-6 py-4 border-b border-gray-200\">\n                          <h3 className=\"text-lg font-semibold text-gray-900\">\n                            Campaign Districts ({campaignDistricts.length})\n                          </h3>\n                        </div>\n                        <div className=\"overflow-x-auto\">\n                          <table className=\"min-w-full divide-y divide-gray-200\">\n                            <thead className=\"bg-gray-50\">\n                              <tr>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">District</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">County</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Contacts</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Valid Contacts</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Added Date</th>\n                              </tr>\n                            </thead>\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\n                              {campaignDistricts.length === 0 ? (\n                                <tr>\n                                  <td colSpan={6} className=\"px-6 py-8 text-center text-gray-500\">\n                                    No districts assigned to this campaign\n                                  </td>\n                                </tr>\n                              ) : (\n                                campaignDistricts.map((district) => (\n                                  <tr key={district.id} className=\"hover:bg-gray-50 cursor-pointer\" onClick={() => handleOpenDistrictEditPanel(district)}>\n                                    <td className=\"px-6 py-4\">\n                                      <div className=\"flex items-center\">\n                                        <div className=\"h-10 w-10 rounded-full bg-purple-100 flex items-center justify-center mr-3\">\n                                          <Target className=\"h-5 w-5 text-purple-600\" />\n                                        </div>\n                                        <div>\n                                          <div className=\"text-sm font-medium text-gray-900\">\n                                            {district.district_name}\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </td>\n                                    <td className=\"px-6 py-4\">\n                                      <div className=\"text-sm text-gray-900\">{district.county || 'N/A'}</div>\n                                    </td>\n                                    <td className=\"px-6 py-4\">\n                                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                                        district.status === 'actively_contacting' ? 'bg-blue-100 text-blue-800' :\n                                        district.status === 'completed' ? 'bg-green-100 text-green-800' :\n                                        district.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                                        'bg-gray-100 text-gray-800'\n                                      }`}>\n                                        {district.status?.replace('_', ' ').toUpperCase() || 'PENDING'}\n                                      </span>\n                                    </td>\n                                    <td className=\"px-6 py-4\">\n                                      <div className=\"text-sm font-medium text-gray-900\">{district.total_contacts}</div>\n                                    </td>\n                                    <td className=\"px-6 py-4\">\n                                      <div className=\"text-sm font-medium text-gray-900\">{district.valid_contacts}</div>\n                                    </td>\n                                    <td className=\"px-6 py-4\">\n                                      <div className=\"text-sm text-gray-900\">\n                                        {new Date(district.created_at).toLocaleDateString()}\n                                      </div>\n                                    </td>\n                                  </tr>\n                                ))\n                              )}\n                            </tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* District Edit Panel */}\n                    {selectedDistrictForEdit && editingDistrictData && (\n                      <div className=\"w-1/2 bg-white rounded-lg shadow-sm border border-gray-200 h-fit\">\n                        <div className=\"px-6 py-4 border-b border-gray-200\">\n                          <div className=\"flex items-center justify-between\">\n                            <h2 className=\"text-lg font-semibold text-gray-900\">\n                              Edit {selectedDistrictForEdit.district_name}\n                            </h2>\n                            <button\n                              onClick={handleCloseDistrictEditPanel}\n                              className=\"text-gray-400 hover:text-gray-600\"\n                            >\n                              <X className=\"h-6 w-6\" />\n                            </button>\n                          </div>\n                        </div>\n\n                        <div className=\"px-6 py-4 space-y-6 max-h-[80vh] overflow-y-auto\">\n                          {/* Basic Information */}\n                          <div>\n                            <h3 className=\"text-md font-medium text-gray-900 mb-3\">District Information</h3>\n                            <div className=\"grid grid-cols-1 gap-4\">\n                              <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">District Name</label>\n                                <input\n                                  type=\"text\"\n                                  value={editingDistrictData.district_name || ''}\n                                  onChange={(e) => setEditingDistrictData({...editingDistrictData, district_name: e.target.value})}\n                                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                                />\n                              </div>\n                              <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">County</label>\n                                <input\n                                  type=\"text\"\n                                  value={editingDistrictData.county || ''}\n                                  onChange={(e) => setEditingDistrictData({...editingDistrictData, county: e.target.value})}\n                                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                                />\n                              </div>\n                              <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n                                <select\n                                  value={editingDistrictData.status || ''}\n                                  onChange={(e) => setEditingDistrictData({...editingDistrictData, status: e.target.value})}\n                                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                                >\n                                  <option value=\"pending\">Pending</option>\n                                  <option value=\"actively_contacting\">Actively Contacting</option>\n                                  <option value=\"completed\">Completed</option>\n                                  <option value=\"paused\">Paused</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n\n                          {/* Contact Statistics */}\n                          <div>\n                            <h3 className=\"text-md font-medium text-gray-900 mb-3\">Contact Statistics</h3>\n                            <div className=\"grid grid-cols-2 gap-4\">\n                              <div className=\"bg-gray-50 p-3 rounded-lg\">\n                                <div className=\"text-sm text-gray-600\">Total Contacts</div>\n                                <div className=\"text-xl font-semibold text-gray-900\">{selectedDistrictForEdit.total_contacts}</div>\n                              </div>\n                              <div className=\"bg-gray-50 p-3 rounded-lg\">\n                                <div className=\"text-sm text-gray-600\">Valid Contacts</div>\n                                <div className=\"text-xl font-semibold text-green-600\">{selectedDistrictForEdit.valid_contacts}</div>\n                              </div>\n                            </div>\n                          </div>\n\n                          {/* Save Button */}\n                          <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n                            <button\n                              onClick={handleCloseDistrictEditPanel}\n                              className=\"px-4 py-2 text-gray-600 border border-gray-200 rounded-lg hover:bg-gray-50\"\n                            >\n                              Cancel\n                            </button>\n                            <button\n                              onClick={handleUpdateDistrictInCampaign}\n                              disabled={updatingDistrict}\n                              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                            >\n                              {updatingDistrict ? 'Saving...' : 'Save Changes'}\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n                </>\n              )}\n            </div>\n          )}\n\n          {/* Touchpoints Tab */}\n          {activeTab === 'touchpoints' && (\n            <div className=\"p-6\">\n              <div className=\"space-y-6\">\n                {/* Touchpoints List */}\n                <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n                  <div className=\"px-6 py-4 border-b border-gray-200\">\n                    <h3 className=\"text-lg font-semibold text-gray-900\">Campaign Touchpoints</h3>\n                  </div>\n                  <div className=\"p-6\">\n                    {campaignTouchpoints.length === 0 ? (\n                      <p className=\"text-gray-500 text-center py-8\">No touchpoints found for this campaign</p>\n                    ) : (\n                      <div className=\"space-y-4\">\n                        {campaignTouchpoints.map((touchpoint) => {\n                          // Handle different data structures for CraftyCode vs Avalern\n                          const contact = touchpoint.lead || touchpoint.district_contact\n                          const contactEmail = contact?.email\n                          \n                          return (\n                            <div \n                              key={touchpoint.id} \n                              className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\"\n                            >\n                              <div className=\"flex-1\">\n                                <div className=\"flex items-center space-x-2\">\n                                  <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\n                                    touchpoint.type === 'email' ? 'bg-blue-100 text-blue-800' :\n                                    touchpoint.type === 'call' ? 'bg-green-100 text-green-800' :\n                                    touchpoint.type === 'linkedin_message' ? 'bg-purple-100 text-purple-800' :\n                                    'bg-gray-100 text-gray-800'\n                                  }`}>\n                                    {touchpoint.type.replace('_', ' ').toUpperCase()}\n                                  </span>\n                                  <span className=\"font-medium\">\n                                    {contact?.first_name} {contact?.last_name}\n                                  </span>\n                                  {touchpoint.district_contact && (\n                                    <span className=\"text-xs text-gray-500\">\n                                      ({touchpoint.district_contact.district_lead?.district_name})\n                                    </span>\n                                  )}\n                                </div>\n                                {touchpoint.subject && (\n                                  <p className=\"text-sm text-gray-600 mt-1\">{touchpoint.subject}</p>\n                                )}\n                                <div className=\"flex items-center space-x-4 mt-1\">\n                                  {contactEmail && (\n                                    <p className=\"text-xs text-gray-500\">{contactEmail}</p>\n                                  )}\n                                  {touchpoint.scheduled_at && (\n                                    <p className=\"text-xs text-gray-500\">\n                                      Scheduled: {new Date(touchpoint.scheduled_at).toLocaleDateString()}\n                                    </p>\n                                  )}\n                                  {touchpoint.completed_at && (\n                                    <p className=\"text-xs text-gray-500\">\n                                      Completed: {new Date(touchpoint.completed_at).toLocaleDateString()}\n                                    </p>\n                                  )}\n                                </div>\n                                {touchpoint.outcome && (\n                                  <p className=\"text-sm text-gray-600 mt-1\">\n                                    <span className=\"font-medium\">Outcome:</span> {touchpoint.outcome}\n                                  </p>\n                                )}\n                              </div>\n                            </div>\n                          )\n                        })}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Delete Confirmation Modal */}\n        {showDeleteModal && (\n          <div className=\"fixed inset-0 bg-gray-900 bg-opacity-50 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white rounded-xl shadow-2xl p-6 w-full max-w-md border border-gray-100\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"flex-shrink-0 w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center mr-3\">\n                  <Trash2 className=\"h-5 w-5 text-red-600\" />\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Delete Campaign</h3>\n                  <p className=\"text-sm text-gray-500\">This action cannot be undone</p>\n                </div>\n              </div>\n              \n              <div className=\"mb-6\">\n                <p className=\"text-gray-700\">\n                  Are you sure you want to delete <strong>\"{campaign?.name}\"</strong>? \n                  This will remove the campaign and unassign all leads from it.\n                </p>\n              </div>\n              \n              <div className=\"flex items-center justify-end space-x-3\">\n                <button\n                  onClick={() => setShowDeleteModal(false)}\n                  disabled={deleting}\n                  className=\"px-4 py-2 text-gray-600 border border-gray-200 rounded-lg hover:bg-gray-50 disabled:opacity-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleDeleteCampaign}\n                  disabled={deleting}\n                  className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:opacity-50 flex items-center\"\n                >\n                  {deleting ? (\n                    <>\n                      <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n                      Deleting...\n                    </>\n                  ) : (\n                    <>\n                      <Trash2 className=\"w-4 h-4 mr-2\" />\n                      Delete Campaign\n                    </>\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </DashboardLayout>\n  )\n} "],"names":[],"mappings":"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","debugId":null}}]
}