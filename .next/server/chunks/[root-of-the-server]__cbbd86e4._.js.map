{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\nimport { Database } from '@/types/database'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n\nexport const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey)\n\n// Client-side Supabase client\nexport function createClientComponentClient() {\n  return createClient<Database>(supabaseUrl, supabaseAnonKey)\n} "],"names":[],"mappings":";;;;AAAA;;AAGA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAY,aAAa;AAGrD,SAAS;IACd,OAAO,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAY,aAAa;AAC7C","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/app/api/campaigns/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { supabase } from '../../../lib/supabase'\n\nexport async function GET(request: NextRequest) {\n  try {\n    const url = new URL(request.url)\n    const company = url.searchParams.get('company')\n    \n    let query = supabase\n      .from('campaigns')\n      .select(`\n        *,\n        outreach_sequence:outreach_sequences(\n          id,\n          name,\n          description\n        )\n      `)\n    \n    // Filter by company if specified\n    if (company) {\n      query = query.eq('company', company)\n    }\n    \n    const { data: campaigns, error } = await query\n      .order('created_at', { ascending: false })\n\n    if (error) {\n      console.error('Error fetching campaigns:', error)\n      return NextResponse.json(\n        { error: 'Failed to fetch campaigns' },\n        { status: 500 }\n      )\n    }\n\n    return NextResponse.json(campaigns || [])\n\n  } catch (error) {\n    console.error('Error fetching campaigns:', error)\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { name, company, description, outreach_sequence_id } = await request.json()\n    \n    if (!name || !company) {\n      return NextResponse.json(\n        { error: 'Name and company are required' },\n        { status: 400 }\n      )\n    }\n\n    const { data: campaign, error } = await supabase\n      .from('campaigns')\n      .insert({\n        name,\n        company,\n        description,\n        outreach_sequence_id,\n        start_date: new Date().toISOString().split('T')[0] // Today's date\n      })\n      .select(`\n        *,\n        outreach_sequence:outreach_sequences(\n          id,\n          name,\n          description\n        )\n      `)\n      .single()\n\n    if (error) {\n      console.error('Error creating campaign:', error)\n      return NextResponse.json(\n        { error: 'Failed to create campaign' },\n        { status: 500 }\n      )\n    }\n\n    return NextResponse.json(campaign)\n\n  } catch (error) {\n    console.error('Error creating campaign:', error)\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;QAC/B,MAAM,UAAU,IAAI,YAAY,CAAC,GAAG,CAAC;QAErC,IAAI,QAAQ,wHAAA,CAAA,WAAQ,CACjB,IAAI,CAAC,aACL,MAAM,CAAC,CAAC;;;;;;;MAOT,CAAC;QAEH,iCAAiC;QACjC,IAAI,SAAS;YACX,QAAQ,MAAM,EAAE,CAAC,WAAW;QAC9B;QAEA,MAAM,EAAE,MAAM,SAAS,EAAE,KAAK,EAAE,GAAG,MAAM,MACtC,KAAK,CAAC,cAAc;YAAE,WAAW;QAAM;QAE1C,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA4B,GACrC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,aAAa,EAAE;IAE1C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,oBAAoB,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE/E,IAAI,CAAC,QAAQ,CAAC,SAAS;YACrB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAgC,GACzC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,EAAE,MAAM,QAAQ,EAAE,KAAK,EAAE,GAAG,MAAM,wHAAA,CAAA,WAAQ,CAC7C,IAAI,CAAC,aACL,MAAM,CAAC;YACN;YACA;YACA;YACA;YACA,YAAY,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,eAAe;QACpE,GACC,MAAM,CAAC,CAAC;;;;;;;MAOT,CAAC,EACA,MAAM;QAET,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA4B,GACrC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAE3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}