{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/layout/Sidebar.tsx"],"sourcesContent":["'use client'\n\nimport Link from 'next/link'\nimport { usePathname } from 'next/navigation'\nimport { useCompany } from '@/contexts/CompanyContext'\nimport { \n  LayoutDashboard, \n  Users, \n  Target, \n  Upload, \n  Settings,\n  Building2,\n  Calendar,\n  School\n} from 'lucide-react'\n\nconst baseNavigation = [\n  { name: 'Dashboard', href: '/', icon: LayoutDashboard },\n  { name: 'Outreach', href: '/outreach', icon: Calendar },\n  { name: 'Campaigns', href: '/campaigns', icon: Target },\n  { name: 'Import', href: '/import', icon: Upload },\n  { name: 'Settings', href: '/settings', icon: Settings },\n]\n\nconst craftyCodeNavigation = [\n  { name: 'Dashboard', href: '/', icon: LayoutDashboard },\n  { name: 'Leads', href: '/leads', icon: Users },\n  { name: 'Outreach', href: '/outreach', icon: Calendar },\n  { name: 'Campaigns', href: '/campaigns', icon: Target },\n  { name: 'Import', href: '/import', icon: Upload },\n  { name: 'Settings', href: '/settings', icon: Settings },\n]\n\nconst avalernNavigation = [\n  { name: 'Dashboard', href: '/', icon: LayoutDashboard },\n  { name: 'Districts', href: '/districts', icon: School },\n  { name: 'Leads', href: '/leads', icon: Users },\n  { name: 'Outreach', href: '/outreach', icon: Calendar },\n  { name: 'Campaigns', href: '/campaigns', icon: Target },\n  { name: 'Import', href: '/import', icon: Upload },\n  { name: 'Settings', href: '/settings', icon: Settings },\n]\n\nconst companies = [\n  { name: 'CraftyCode', color: 'bg-blue-500' },\n  { name: 'Avalern', color: 'bg-purple-500' }\n]\n\nexport default function Sidebar() {\n  const pathname = usePathname()\n  const { selectedCompany, setSelectedCompany } = useCompany()\n\n  return (\n    <div className=\"flex h-screen w-64 flex-col bg-white shadow-lg\">\n      {/* Logo */}\n      <div className=\"flex h-16 items-center px-6 border-b border-gray-200\">\n        <Building2 className=\"h-8 w-8 text-blue-600\" />\n        <span className=\"ml-3 text-xl font-bold text-gray-900\">Lead Manager</span>\n      </div>\n\n      {/* Company Selector - Moved to top */}\n      <div className=\"border-b border-gray-200 p-4\">\n        <div className=\"text-xs font-medium text-gray-500 uppercase tracking-wider mb-3\">\n          Active Companies\n        </div>\n        <div className=\"space-y-2\">\n          {companies.map((company) => (\n            <button\n              key={company.name}\n              onClick={() => setSelectedCompany(company.name)}\n              className={`\n                flex items-center w-full px-3 py-2 text-sm font-medium rounded-lg transition-colors\n                ${selectedCompany === company.name\n                  ? 'bg-gray-100 text-gray-900 border-l-4 border-blue-500'\n                  : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'\n                }\n              `}\n            >\n              <div className={`w-3 h-3 ${company.color} rounded-full mr-3`}></div>\n              <span>{company.name}</span>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Navigation */}\n      <nav className=\"flex-1 px-4 py-6 space-y-2\">\n        {selectedCompany === 'CraftyCode' && craftyCodeNavigation.map((item) => {\n          const isActive = pathname === item.href\n          return (\n            <Link\n              key={item.name}\n              href={item.href}\n              className={`\n                flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors\n                ${isActive \n                  ? 'bg-blue-50 text-blue-700 border-r-2 border-blue-700' \n                  : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                }\n              `}\n            >\n              <item.icon className={`mr-3 h-5 w-5 ${isActive ? 'text-blue-700' : 'text-gray-400'}`} />\n              {item.name}\n            </Link>\n          )\n        })}\n        {selectedCompany === 'Avalern' && avalernNavigation.map((item) => {\n          const isActive = pathname === item.href\n          return (\n            <Link\n              key={item.name}\n              href={item.href}\n              className={`\n                flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors\n                ${isActive \n                  ? 'bg-blue-50 text-blue-700 border-r-2 border-blue-700' \n                  : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                }\n              `}\n            >\n              <item.icon className={`mr-3 h-5 w-5 ${isActive ? 'text-blue-700' : 'text-gray-400'}`} />\n              {item.name}\n            </Link>\n          )\n        })}\n      </nav>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/layout/DashboardLayout.tsx"],"sourcesContent":["'use client'\n\nimport Sidebar from './Sidebar'\n\ninterface DashboardLayoutProps {\n  children: React.ReactNode\n}\n\nexport default function DashboardLayout({ children }: DashboardLayoutProps) {\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      <Sidebar />\n      <main className=\"flex-1 overflow-y-auto\">\n        <div className=\"p-8\">\n          {children}\n        </div>\n      </main>\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAQe,SAAS,gBAAgB,EAAE,QAAQ,EAAwB;IACxE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,0IAAA,CAAA,UAAO;;;;;0BACR,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;;;;;;;AAKX;KAXwB","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/lib/csv-utils.ts"],"sourcesContent":["import Papa from 'papaparse'\nimport { Lead } from '../types/database'\n\nexport interface CSVLead {\n  firstName: string\n  lastName: string\n  email: string\n  phone?: string\n  city?: string\n  source?: string\n  industry?: string\n  websiteQuality?: string\n  company?: string\n  linkedinUrl?: string\n  websiteUrl?: string\n  onlineProfile?: string\n  emailSent?: string\n  callMade?: string\n  response?: string\n  nextStep?: string\n}\n\nexport function parseCSV(file: File): Promise<CSVLead[]> {\n  return new Promise((resolve, reject) => {\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: (results) => {\n        if (results.errors.length > 0) {\n          reject(new Error('CSV parsing error: ' + results.errors[0].message))\n          return\n        }\n        \n        const leads = results.data.map((row: any) => ({\n          firstName: row['First Name'] || '',\n          lastName: row['Last Name'] || '',\n          email: row['Email'] || '',\n          phone: row['Phone Number'] || '',\n          city: row['City/State'] || '',\n          source: determineSource(row['Online Profile'], row['Linkedin URL']),\n          industry: 'Real Estate',\n          websiteQuality: row['Website?'] === 'Yes' || row['Website?'] === 'yes' ? '8' : '0',\n          company: row['Company'] || '',\n          linkedinUrl: row['Linkedin URL'] || '',\n          websiteUrl: row['Website Link'] || '',\n          onlineProfile: row['Online Profile'] || '',\n          emailSent: row['Email Sent?'] || '',\n          callMade: row['Call Made?'] || '',\n          response: row['Response'] || '',\n          nextStep: row['Next Step / Notes'] || ''\n        }))\n        \n        resolve(leads)\n      },\n      error: (error) => {\n        reject(error)\n      }\n    })\n  })\n}\n\nfunction determineSource(onlineProfile?: string, linkedinUrl?: string): string {\n  if (onlineProfile?.includes('zillow.com')) return 'Zillow'\n  if (linkedinUrl?.includes('linkedin.com')) return 'LinkedIn'\n  if (onlineProfile?.includes('realtor.com')) return 'Realtor.com'\n  return 'Cold Outreach'\n}\n\nfunction extractCityFromCityState(cityState?: string): string {\n  if (!cityState) return ''\n  \n  const cleanCityState = cityState.replace(/,$/, '').trim()\n  const parts = cleanCityState.split(',')\n  return parts[0]?.trim() || ''\n}\n\nexport interface ValidationError {\n  lead: CSVLead\n  errors: string[]\n  rowIndex: number\n}\n\nexport function validateLeads(leads: CSVLead[]): { valid: CSVLead[], invalid: ValidationError[] } {\n  const valid: CSVLead[] = []\n  const invalid: ValidationError[] = []\n  \n  leads.forEach((lead, index) => {\n    const errors: string[] = []\n    \n    // Check required fields\n    if (!lead.firstName || lead.firstName.trim() === '') {\n      errors.push('Missing first name')\n    }\n    if (!lead.lastName || lead.lastName.trim() === '') {\n      errors.push('Missing last name')\n    }\n    if (!lead.email || lead.email.trim() === '') {\n      errors.push('Missing email address')\n    } else if (!isValidEmail(lead.email)) {\n      errors.push('Invalid email format')\n    }\n    \n    // Check optional field formats\n    if (lead.phone && !isValidPhone(lead.phone)) {\n      errors.push('Invalid phone number format')\n    }\n    \n    if (errors.length === 0) {\n      lead.city = extractCityFromCityState(lead.city)\n      valid.push(lead)\n    } else {\n      invalid.push({\n        lead,\n        errors,\n        rowIndex: index + 2 // +2 because CSV rows start at 2 (1 is header)\n      })\n    }\n  })\n  \n  return { valid, invalid }\n}\n\nexport function deduplicateLeads(leads: CSVLead[], existingEmails: string[]): CSVLead[] {\n  const seen = new Set(existingEmails.map(email => email.toLowerCase()))\n  const deduplicated: CSVLead[] = []\n  \n  leads.forEach(lead => {\n    if (!seen.has(lead.email.toLowerCase())) {\n      seen.add(lead.email.toLowerCase())\n      deduplicated.push(lead)\n    }\n  })\n  \n  return deduplicated\n}\n\nexport function convertToLeadInsert(csvLead: CSVLead) {\n  // Map city to proper enum value\n  const mapCityToEnum = (cityState?: string): string | null => {\n    if (!cityState) return null\n    \n    const cityMap: { [key: string]: string } = {\n      'burbank': 'Burbank',\n      'glendale': 'Glendale', \n      'los angeles': 'Los Angeles',\n      'pasadena': 'Pasadena',\n      'north hollywood': 'North Hollywood',\n      'van nuys': 'Van Nuys',\n      'sherman oaks': 'Sherman Oaks',\n      'studio city': 'Studio City',\n      'hollywood': 'Hollywood',\n      'west hollywood': 'West Hollywood',\n      'beverly hills': 'Beverly Hills',\n      'santa monica': 'Santa Monica',\n      'culver city': 'Culver City',\n      'westwood': 'Westwood',\n      'brentwood': 'Brentwood',\n      'venice': 'Venice',\n      'manhattan beach': 'Manhattan Beach',\n      'redondo beach': 'Redondo Beach',\n      'torrance': 'Torrance',\n      'el segundo': 'El Segundo',\n      'inglewood': 'Inglewood',\n      'hawthorne': 'Hawthorne'\n    }\n    \n    // Extract city from \"City, State\" format\n    const city = cityState.split(',')[0]?.trim().toLowerCase()\n    return cityMap[city] || 'Other'\n  }\n\n  // Map source to proper enum value\n  const mapSourceToEnum = (source?: string): string => {\n    if (!source) return 'Other'\n    \n    const sourceMap: { [key: string]: string } = {\n      'zillow': 'Zillow',\n      'linkedin': 'LinkedIn',\n      'realtor.com': 'Realtor.com',\n      'realtor': 'Realtor.com',\n      'redfin': 'Redfin',\n      'trulia': 'Trulia'\n    }\n    \n    return sourceMap[source.toLowerCase()] || 'Other'\n  }\n\n  return {\n    first_name: csvLead.firstName,\n    last_name: csvLead.lastName,\n    email: csvLead.email.toLowerCase(),\n    phone: csvLead.phone || null,\n    city: mapCityToEnum(csvLead.city),\n    state: 'CA',\n    company: csvLead.company || null,\n    linkedin_url: csvLead.linkedinUrl || null,\n    website_url: csvLead.websiteUrl || null,\n    online_profile: csvLead.onlineProfile || null,\n    source: mapSourceToEnum(csvLead.source)\n  }\n}\n\nexport function convertToLeadStatusInsert(csvLead: CSVLead, leadId: string, campaignId: string) {\n  const emailSent = csvLead.emailSent?.toLowerCase() === 'yes' || csvLead.emailSent?.toLowerCase() === 'true'\n  const callMade = csvLead.callMade?.toLowerCase() === 'yes' || csvLead.callMade?.toLowerCase() === 'true'\n  \n  let status = 'Not Contacted'\n  if (csvLead.response && csvLead.response.trim()) {\n    status = 'Responded'\n  } else if (callMade) {\n    status = 'Call Made'\n  } else if (emailSent) {\n    status = 'Email Sent'\n  }\n  \n  return {\n    lead_id: leadId,\n    campaign_id: campaignId,\n    status,\n    email_sent: emailSent,\n    call_made: callMade,\n    response: csvLead.response || null,\n    next_step: csvLead.nextStep || null,\n    touch_count: (emailSent ? 1 : 0) + (callMade ? 1 : 0)\n  }\n}\n\nexport function exportToCSV(leads: Lead[], filename: string = 'san-fernando-valley-leads') {\n  const csvData = leads.map(lead => ({\n    'First Name': lead.first_name,\n    'Last Name': lead.last_name,\n    'Email': lead.email,\n    'Phone Number': lead.phone || '',\n    'City/State': lead.city ? `${lead.city}, CA` : '',\n    'Company': lead.company || '',\n    'LinkedIn URL': lead.linkedin_url || '',\n    'Website Link': lead.website_url || '',\n    'Online Profile': lead.online_profile || '',\n    'Source': lead.source || '',\n    'Status': lead.status || 'Not Contacted'\n  }))\n  \n  const csv = Papa.unparse(csvData)\n  const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' })\n  const link = document.createElement('a')\n  \n  if (link.download !== undefined) {\n    const url = URL.createObjectURL(blob)\n    link.setAttribute('href', url)\n    link.setAttribute('download', `${filename}.csv`)\n    link.style.visibility = 'hidden'\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n}\n\nfunction isValidEmail(email: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  return emailRegex.test(email)\n}\n\nfunction isValidPhone(phone: string): boolean {\n  // Allow various phone formats: (123) 456-7890, 123-456-7890, +1-123-456-7890, etc.\n  const phoneRegex = /^[\\+]?[1-9]?[\\-\\s\\(\\)]?[0-9]{3}[\\-\\s\\(\\)]?[0-9]{3}[\\-\\s]?[0-9]{4}$/\n  return phoneRegex.test(phone.replace(/[\\s\\-\\(\\)]/g, ''))\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\nimport { Database } from '@/types/database'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n\nexport const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey)\n\n// Client-side Supabase client\nexport function createClientComponentClient() {\n  return createClient<Database>(supabaseUrl, supabaseAnonKey)\n} "],"names":[],"mappings":";;;;AAGoB;AAHpB;;AAGA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAY,aAAa;AAGrD,SAAS;IACd,OAAO,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAY,aAAa;AAC7C","debugId":null}},
    {"offset": {"line": 608, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/app/import/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useCallback } from 'react'\nimport DashboardLayout from '../../components/layout/DashboardLayout'\nimport { useCompany } from '../../contexts/CompanyContext'\nimport { parseCSV, validateLeads, convertToLeadInsert, CSVLead } from '../../lib/csv-utils'\nimport { readDistrictCSVFile, processDistrictData, validateDistrictData } from '../../lib/district-csv-utils'\nimport { ProcessedDistrictData, CSVDistrictData } from '../../types/districts'\nimport { supabase } from '../../lib/supabase'\nimport {\n  Upload,\n  FileText,\n  Download,\n  CheckCircle,\n  AlertTriangle,\n  X,\n  User,\n  Mail,\n  Phone,\n  MapPin,\n  Building,\n  ExternalLink\n} from 'lucide-react'\n\ninterface ValidationError {\n  lead: CSVLead\n  errors: string[]\n  rowIndex: number\n}\n\ninterface ValidationResult {\n  valid: CSVLead[]\n  invalid: ValidationError[]\n  duplicates: { email: string; existingLeadName?: string; rowIndex: number; lead: CSVLead }[]\n}\n\ninterface DistrictValidationResult {\n  valid: ProcessedDistrictData[]\n  invalid: { district: ProcessedDistrictData; errors: string[] }[]\n}\n\ninterface ImportResult {\n  imported: number\n  failed: number\n  duplicatesSkipped: number\n  errors: string[]\n}\n\nexport default function ImportPage() {\n  const { selectedCompany } = useCompany()\n  const [isDragging, setIsDragging] = useState(false)\n  const [file, setFile] = useState<File | null>(null)\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [validationResult, setValidationResult] = useState<ValidationResult | null>(null)\n  const [districtValidationResult, setDistrictValidationResult] = useState<DistrictValidationResult | null>(null)\n  const [previewLeads, setPreviewLeads] = useState<CSVLead[]>([])\n  const [previewDistricts, setPreviewDistricts] = useState<ProcessedDistrictData[]>([])\n  const [showAllInvalid, setShowAllInvalid] = useState(false)\n  const [showAllDuplicates, setShowAllDuplicates] = useState(false)\n  \n\n  const handleDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    setIsDragging(false)\n    \n    const files = Array.from(e.dataTransfer.files)\n    const csvFile = files.find(file => file.type === 'text/csv' || file.name.endsWith('.csv'))\n    \n    if (csvFile) {\n      setFile(csvFile)\n      processFile(csvFile)\n    }\n  }, [])\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = e.target.files?.[0]\n    if (selectedFile) {\n      setFile(selectedFile)\n      processFile(selectedFile)\n    }\n  }\n\n  const processFile = async (file: File) => {\n    setIsProcessing(true)\n    \n    try {\n      console.log('Processing file:', file.name, 'Size:', file.size, 'Type:', file.type)\n      \n      // Parse CSV with San Fernando Valley format\n      const leads = await parseCSV(file)\n      console.log('Parsed leads:', leads.length, 'Sample:', leads[0])\n      \n      // Validate leads\n      const { valid, invalid } = validateLeads(leads)\n      console.log('Validation results - Valid:', valid.length, 'Invalid:', invalid.length)\n      \n      // Check for existing emails in database - using batching to avoid URL length limits\n      const emailsToCheck = valid.map(lead => lead.email.toLowerCase())\n      \n      if (emailsToCheck.length === 0) {\n        setValidationResult({\n          valid: [],\n          invalid,\n          duplicates: []\n        })\n        setPreviewLeads([])\n        return\n      }\n      \n      console.log('Checking', emailsToCheck.length, 'emails for duplicates...')\n      \n      // Batch emails into smaller chunks to avoid URL length limits\n      const batchSize = 50 // Check 50 emails at a time\n      const allExistingLeads: any[] = []\n      \n      for (let i = 0; i < emailsToCheck.length; i += batchSize) {\n        const batch = emailsToCheck.slice(i, i + batchSize)\n        console.log(`Checking batch ${Math.floor(i / batchSize) + 1}/${Math.ceil(emailsToCheck.length / batchSize)} (${batch.length} emails)`)\n        \n        const { data: batchExistingLeads, error: dbError } = await supabase\n          .from('leads')\n          .select('email, first_name, last_name')\n          .in('email', batch)\n        \n        if (dbError) {\n          console.error('Database error in batch:', dbError)\n          throw new Error(`Failed to check for duplicate emails: ${dbError.message}`)\n        }\n        \n        if (batchExistingLeads) {\n          allExistingLeads.push(...batchExistingLeads)\n        }\n      }\n      \n      console.log('Total existing leads found:', allExistingLeads.length)\n      \n      // Create duplicate info with existing lead names\n      const existingEmailMap = new Map(\n        allExistingLeads.map(lead => [\n          lead.email?.toLowerCase(), \n          `${lead.first_name || ''} ${lead.last_name || ''}`.trim()\n        ])\n      )\n      \n      const duplicates: { email: string; existingLeadName?: string; rowIndex: number; lead: CSVLead }[] = []\n      const deduplicated: CSVLead[] = []\n      \n      // We need to track the original row indices from the full leads array\n      const validLeadRowMap = new Map<string, number>()\n      leads.forEach((lead, index) => {\n        if (lead.email) {\n          validLeadRowMap.set(lead.email.toLowerCase(), index + 2) // +2 because CSV rows start at 2 (1 is header)\n        }\n      })\n      \n      valid.forEach((lead) => {\n        const emailLower = lead.email.toLowerCase()\n        if (existingEmailMap.has(emailLower)) {\n          duplicates.push({\n            email: lead.email,\n            existingLeadName: existingEmailMap.get(emailLower),\n            rowIndex: validLeadRowMap.get(emailLower) || 0,\n            lead\n          })\n        } else {\n          deduplicated.push(lead)\n        }\n      })\n      \n      console.log('Deduplication results - Clean:', deduplicated.length, 'Duplicates:', duplicates.length)\n      \n      setValidationResult({\n        valid: deduplicated,\n        invalid,\n        duplicates\n      })\n      \n      // Set preview leads (first 5)\n      setPreviewLeads(deduplicated.slice(0, 5))\n      \n    } catch (error) {\n      console.error('Detailed error processing file:', error)\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error'\n      alert(`Error processing CSV file: ${errorMessage}\\n\\nPlease check the format and try again. Make sure your CSV has the required columns: First Name, Last Name, Email`)\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const handleImport = async () => {\n    if (!validationResult) return\n    \n    setIsProcessing(true)\n    const importResult: ImportResult = {\n      imported: 0,\n      failed: 0,\n      duplicatesSkipped: validationResult.duplicates.length,\n      errors: []\n    }\n    \n    try {\n      // Import valid leads to database\n      for (const csvLead of validationResult.valid) {\n        try {\n          // Insert lead with proper status mapping\n          const leadData = convertToLeadInsert(csvLead)\n          \n          // Map status to database enum values - default to not_contacted\n          let initialStatus = 'not_contacted'\n          if (csvLead.response && csvLead.response.trim()) {\n            initialStatus = 'engaged'\n          } else if (csvLead.callMade === 'Yes' || csvLead.emailSent === 'Yes') {\n            initialStatus = 'actively_contacting'\n          }\n          \n          const { data: insertedLead, error: leadError } = await supabase\n            .from('leads')\n            .insert({\n              ...leadData,\n              status: initialStatus\n            })\n            .select()\n            .single()\n          \n          if (leadError) {\n            importResult.failed++\n            importResult.errors.push(`${csvLead.firstName} ${csvLead.lastName}: ${leadError.message}`)\n            continue\n          }\n          \n          // Insert initial touchpoint if email was sent or call was made\n          if (csvLead.emailSent === 'Yes' || csvLead.callMade === 'Yes') {\n            const touchpointData = {\n              lead_id: insertedLead.id,\n              type: csvLead.emailSent === 'Yes' ? 'email' : 'call',\n              subject: csvLead.emailSent === 'Yes' ? 'Initial Email' : 'Initial Call',\n              content: csvLead.response || null,\n              completed_at: new Date().toISOString(),\n              outcome: csvLead.response ? 'responded' : 'no_response'\n            }\n            \n            const { error: touchpointError } = await supabase\n              .from('touchpoints')\n              .insert(touchpointData)\n            \n            if (touchpointError) {\n              console.warn('Failed to create touchpoint:', touchpointError)\n            }\n          }\n          \n          importResult.imported++\n        } catch (error) {\n          importResult.failed++\n          const errorMessage = error instanceof Error ? error.message : String(error)\n          importResult.errors.push(`${csvLead.firstName} ${csvLead.lastName}: ${errorMessage}`)\n        }\n      }\n      \n      // Show detailed results\n      const message = `Import Complete!\\n\\n` +\n        `✅ Successfully imported: ${importResult.imported} leads\\n` +\n        `⚠️ Duplicates skipped: ${importResult.duplicatesSkipped} leads\\n` +\n        `❌ Failed imports: ${importResult.failed} leads\\n\\n` +\n        `📋 All leads imported with \"Not Contacted\" status and can be assigned to campaigns later.\\n\\n` +\n        (importResult.errors.length > 0 ? \n          `Errors:\\n${importResult.errors.slice(0, 5).join('\\n')}` +\n          (importResult.errors.length > 5 ? `\\n... and ${importResult.errors.length - 5} more` : '') \n          : '')\n      \n      alert(message)\n      \n      // Reset state after successful import\n      setFile(null)\n      setValidationResult(null)\n      setPreviewLeads([])\n      \n    } catch (error) {\n      console.error('Error importing leads:', error)\n      alert('Error importing leads. Please try again.')\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const downloadSampleCSV = () => {\n    // Use the exact format from the existing San Fernando Valley CSV\n    const csv = `First Name,Last Name,Email,Online Profile,Phone Number,Linkedin URL,Company,City/State,Website?,Website Link,Email Sent?,Call Made?,Response,Next Step / Notes\nMichael,Rodriguez,mrodriguez@kw.com,https://www.zillow.com/profile/mrodriguez,(818) 555-0101,https://www.linkedin.com/in/michaelrodriguez-realty,Keller Williams Realty,\"Van Nuys, CA\",Yes,https://www.michaelrodriguezrealty.com,Yes,,Interested in website redesign,Schedule demo call for next week\nJennifer,Chen,jchen@remax.com,https://www.realtor.com/realestateagents/jennifer-chen,(818) 555-0102,https://www.linkedin.com/in/jennifer-chen-realtor,RE/MAX Premier Properties,\"Sherman Oaks, CA\",Yes,https://www.jenniferchenhomes.com,,Yes,,Left voicemail follow up in 3 days\nDavid,Martinez,dmartinez@coldwellbanker.com,https://www.zillow.com/profile/davidmartinez,(818) 555-0103,https://www.linkedin.com/in/david-martinez-realtor,Coldwell Banker Residential,\"North Hollywood, CA\",No,,,,,New lead - needs website development\nLisa,Thompson,lthompson@century21.com,https://www.realtor.com/realestateagents/lisa-thompson,(818) 555-0104,https://www.linkedin.com/in/lisa-thompson-realty,Century 21 Village Realty,\"Burbank, CA\",Yes,https://www.lisathompsonhomes.com,Yes,Yes,Not interested at this time,Follow up in 6 months\nRobert,Kim,rkim@compass.com,https://www.zillow.com/profile/robertkim,(818) 555-0105,https://www.linkedin.com/in/robert-kim-compass,Compass Real Estate,\"Glendale, CA\",Yes,https://www.robertkimhomes.com,,,,\"High-volume agent, priority prospect\"`\n    \n    const blob = new Blob([csv], { type: 'text/csv' })\n    const url = URL.createObjectURL(blob)\n    const link = document.createElement('a')\n    link.href = url\n    link.download = 'sample-san-fernando-valley-leads.csv'\n    link.click()\n    URL.revokeObjectURL(url)\n  }\n\n  return (\n    <DashboardLayout>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900\">\n              {selectedCompany === 'Avalern' \n                ? 'Import District Leads for Avalern' \n                : 'Import Leads for CraftyCode'\n              }\n            </h1>\n            <p className=\"text-gray-600 mt-1\">\n              {selectedCompany === 'Avalern'\n                ? 'Upload CSV files to import school district leads for Avalern'\n                : 'Upload CSV files to import real estate leads for CraftyCode'\n              }\n            </p>\n          </div>\n          <button\n            onClick={downloadSampleCSV}\n            className=\"flex items-center px-4 py-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-50\"\n          >\n            <Download className=\"h-4 w-4 mr-2\" />\n            Download Sample CSV\n          </button>\n        </div>\n\n        {/* Upload Section */}\n        {!validationResult && (\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-8\">\n            <div\n              className={`\n                border-2 border-dashed rounded-lg p-12 text-center transition-colors\n                ${isDragging \n                  ? 'border-blue-400 bg-blue-50' \n                  : 'border-gray-300 hover:border-gray-400'\n                }\n              `}\n              onDragOver={(e) => {\n                e.preventDefault()\n                setIsDragging(true)\n              }}\n              onDragLeave={() => setIsDragging(false)}\n              onDrop={handleDrop}\n            >\n              {isProcessing ? (\n                <div className=\"flex flex-col items-center\">\n                  <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mb-4\"></div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Processing File...</h3>\n                  <p className=\"text-gray-500\">\n                    {selectedCompany === 'Avalern' \n                      ? 'Validating school district leads' \n                      : 'Validating real estate leads'\n                    }\n                  </p>\n                </div>\n              ) : (\n                <div className=\"flex flex-col items-center\">\n                  <Upload className=\"h-12 w-12 text-gray-400 mb-4\" />\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                    Drop your CSV file here, or click to browse\n                  </h3>\n                  <p className=\"text-gray-500 mb-4\">\n                    {selectedCompany === 'Avalern'\n                      ? 'Supports CSV files with school district information'\n                      : 'Supports CSV files with real estate agent information'\n                    }\n                  </p>\n                  <label className=\"cursor-pointer\">\n                    <input\n                      type=\"file\"\n                      accept=\".csv\"\n                      onChange={handleFileSelect}\n                      className=\"hidden\"\n                    />\n                    <span className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\n                      <FileText className=\"h-4 w-4 mr-2\" />\n                      Choose File\n                    </span>\n                  </label>\n                </div>\n              )}\n            </div>\n\n            {/* File Info */}\n            {file && (\n              <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    <FileText className=\"h-5 w-5 text-gray-500\" />\n                    <div>\n                      <p className=\"font-medium text-gray-900\">{file.name}</p>\n                      <p className=\"text-sm text-gray-500\">{(file.size / 1024).toFixed(1)} KB</p>\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => {\n                      setFile(null)\n                      setValidationResult(null)\n                      setPreviewLeads([])\n                    }}\n                    className=\"text-gray-400 hover:text-gray-600\"\n                  >\n                    <X className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Validation Results */}\n        {validationResult && (\n          <div className=\"space-y-6\">\n            {/* Summary */}\n            <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Import Summary</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                  <CheckCircle className=\"h-8 w-8 text-green-600 mx-auto mb-2\" />\n                  <p className=\"text-2xl font-bold text-green-600\">{validationResult.valid.length}</p>\n                  <p className=\"text-sm text-green-700\">Valid Leads</p>\n                </div>\n                <div className=\"text-center p-4 bg-red-50 rounded-lg\">\n                  <AlertTriangle className=\"h-8 w-8 text-red-600 mx-auto mb-2\" />\n                  <p className=\"text-2xl font-bold text-red-600\">{validationResult.invalid.length}</p>\n                  <p className=\"text-sm text-red-700\">Invalid Leads</p>\n                </div>\n                <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\n                  <AlertTriangle className=\"h-8 w-8 text-orange-600 mx-auto mb-2\" />\n                  <p className=\"text-2xl font-bold text-orange-600\">{validationResult.duplicates.length}</p>\n                  <p className=\"text-sm text-orange-700\">Duplicate Emails</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Preview */}\n            {previewLeads.length > 0 && (\n              <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Preview (First 5 Valid Leads)</h3>\n                <div className=\"space-y-4\">\n                  {previewLeads.map((lead, index) => (\n                    <div key={index} className=\"border border-gray-200 rounded-lg p-4\">\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex items-center space-x-4\">\n                          <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                            <User className=\"h-5 w-5 text-blue-600\" />\n                          </div>\n                          <div>\n                            <h4 className=\"font-medium text-gray-900\">{lead.firstName} {lead.lastName}</h4>\n                            <div className=\"flex items-center space-x-4 text-sm text-gray-600 mt-1\">\n                              <span className=\"flex items-center\">\n                                <Mail className=\"h-3 w-3 mr-1\" />\n                                {lead.email}\n                              </span>\n                              {lead.phone && (\n                                <span className=\"flex items-center\">\n                                  <Phone className=\"h-3 w-3 mr-1\" />\n                                  {lead.phone}\n                                </span>\n                              )}\n                              {lead.city && (\n                                <span className=\"flex items-center\">\n                                  <MapPin className=\"h-3 w-3 mr-1\" />\n                                  {lead.city}\n                                </span>\n                              )}\n                              {lead.company && (\n                                <span className=\"flex items-center\">\n                                  <Building className=\"h-3 w-3 mr-1\" />\n                                  {lead.company}\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                        {lead.onlineProfile && (\n                          <a\n                            href={lead.onlineProfile}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"flex items-center text-blue-600 hover:text-blue-800 text-sm\"\n                          >\n                            <ExternalLink className=\"h-3 w-3 mr-1\" />\n                            View Profile\n                          </a>\n                        )}\n                      </div>\n                      <div className=\"flex items-center space-x-2 mt-3\">\n                        <span className={`px-2 py-1 rounded ${lead.emailSent === 'Yes' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600'}`}>\n                          Email: {lead.emailSent || 'No'}\n                        </span>\n                        <span className={`px-2 py-1 rounded ${lead.callMade === 'Yes' ? 'bg-blue-100 text-blue-800' : 'bg-gray-100 text-gray-600'}`}>\n                          Call: {lead.callMade || 'No'}\n                        </span>\n                        <span className=\"px-2 py-1 bg-purple-100 text-purple-800 rounded\">\n                          Source: {lead.source}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Import Button */}\n            <div className=\"flex items-center justify-between\">\n              <button\n                onClick={() => {\n                  setValidationResult(null)\n                  setFile(null)\n                  setPreviewLeads([])\n                }}\n                className=\"px-6 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50\"\n              >\n                Start Over\n              </button>\n              \n              <button\n                onClick={handleImport}\n                disabled={isProcessing || validationResult.valid.length === 0}\n                className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {isProcessing ? 'Importing...' : `Import ${validationResult.valid.length} Real Estate Leads`}\n              </button>\n            </div>\n\n            {/* Issues */}\n            {(validationResult.invalid.length > 0 || validationResult.duplicates.length > 0) && (\n              <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Issues Found</h3>\n                \n                {validationResult.invalid.length > 0 && (\n                  <div className=\"mb-6\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h4 className=\"font-medium text-red-800\">\n                        Invalid Leads ({validationResult.invalid.length})\n                      </h4>\n                      {validationResult.invalid.length > 5 && (\n                        <button\n                          onClick={() => setShowAllInvalid(!showAllInvalid)}\n                          className=\"text-red-600 hover:text-red-800 text-sm font-medium\"\n                        >\n                          {showAllInvalid ? 'Show Less' : 'View All'}\n                        </button>\n                      )}\n                    </div>\n                    <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n                      <div className=\"space-y-2 text-sm text-red-700\">\n                        {(showAllInvalid ? validationResult.invalid : validationResult.invalid.slice(0, 5)).map((validationError, index) => (\n                          <div key={index} className=\"border-b border-red-200 pb-2 last:border-b-0\">\n                            <p className=\"font-medium\">\n                              Row {validationError.rowIndex}: {validationError.lead.firstName || '[Missing]'} {validationError.lead.lastName || '[Missing]'} - {validationError.lead.email || '[Missing email]'}\n                            </p>\n                            <ul className=\"ml-4 mt-1\">\n                              {validationError.errors.map((error, errorIndex) => (\n                                <li key={errorIndex} className=\"text-xs\">• {error}</li>\n                              ))}\n                            </ul>\n                          </div>\n                        ))}\n                        {!showAllInvalid && validationResult.invalid.length > 5 && (\n                          <p className=\"text-xs italic\">... and {validationResult.invalid.length - 5} more invalid leads</p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {validationResult.duplicates.length > 0 && (\n                  <div>\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h4 className=\"font-medium text-orange-800\">\n                        Duplicate Emails ({validationResult.duplicates.length})\n                      </h4>\n                      {validationResult.duplicates.length > 5 && (\n                        <button\n                          onClick={() => setShowAllDuplicates(!showAllDuplicates)}\n                          className=\"text-orange-600 hover:text-orange-800 text-sm font-medium\"\n                        >\n                          {showAllDuplicates ? 'Show Less' : 'View All'}\n                        </button>\n                      )}\n                    </div>\n                    <div className=\"bg-orange-50 border border-orange-200 rounded-lg p-4\">\n                      <div className=\"space-y-2 text-sm text-orange-700\">\n                        {(showAllDuplicates ? validationResult.duplicates : validationResult.duplicates.slice(0, 5)).map((duplicate, index) => (\n                          <div key={index} className=\"border-b border-orange-200 pb-2 last:border-b-0\">\n                            <p className=\"font-medium\">\n                              Row {duplicate.rowIndex}: {duplicate.lead.firstName} {duplicate.lead.lastName} - {duplicate.email}\n                            </p>\n                            {duplicate.existingLeadName && (\n                              <p className=\"text-xs text-orange-600 ml-4\">\n                                Already exists in database as: {duplicate.existingLeadName}\n                              </p>\n                            )}\n                          </div>\n                        ))}\n                        {!showAllDuplicates && validationResult.duplicates.length > 5 && (\n                          <p className=\"text-xs italic\">... and {validationResult.duplicates.length - 5} more duplicates</p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </DashboardLayout>\n  )\n} "],"names":[],"mappings":"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","debugId":null}}]
}