{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/layout/Sidebar.tsx"],"sourcesContent":["'use client'\n\nimport Link from 'next/link'\nimport { usePathname } from 'next/navigation'\nimport { useCompany } from '@/contexts/CompanyContext'\nimport { \n  LayoutDashboard, \n  Users, \n  Target, \n  Upload, \n  Settings,\n  Building2,\n  Calendar,\n  School\n} from 'lucide-react'\n\nconst baseNavigation = [\n  { name: 'Dashboard', href: '/', icon: LayoutDashboard },\n  { name: 'Outreach', href: '/outreach', icon: Calendar },\n  { name: 'Campaigns', href: '/campaigns', icon: Target },\n  { name: 'Import', href: '/import', icon: Upload },\n  { name: 'Settings', href: '/settings', icon: Settings },\n]\n\nconst craftyCodeNavigation = [\n  { name: 'Dashboard', href: '/', icon: LayoutDashboard },\n  { name: 'Leads', href: '/leads', icon: Users },\n  { name: 'Outreach', href: '/outreach', icon: Calendar },\n  { name: 'Campaigns', href: '/campaigns', icon: Target },\n  { name: 'Import', href: '/import', icon: Upload },\n  { name: 'Settings', href: '/settings', icon: Settings },\n]\n\nconst avalernNavigation = [\n  { name: 'Dashboard', href: '/', icon: LayoutDashboard },\n  { name: 'Districts', href: '/districts', icon: School },\n  { name: 'Leads', href: '/leads', icon: Users },\n  { name: 'Outreach', href: '/outreach', icon: Calendar },\n  { name: 'Campaigns', href: '/campaigns', icon: Target },\n  { name: 'Import', href: '/import', icon: Upload },\n  { name: 'Settings', href: '/settings', icon: Settings },\n]\n\nconst companies = [\n  { name: 'CraftyCode', color: 'bg-blue-500' },\n  { name: 'Avalern', color: 'bg-purple-500' }\n]\n\nexport default function Sidebar() {\n  const pathname = usePathname()\n  const { selectedCompany, setSelectedCompany } = useCompany()\n\n  return (\n    <div className=\"flex h-screen w-64 flex-col bg-white shadow-lg\">\n      {/* Logo */}\n      <div className=\"flex h-16 items-center px-6 border-b border-gray-200\">\n        <Building2 className=\"h-8 w-8 text-blue-600\" />\n        <span className=\"ml-3 text-xl font-bold text-gray-900\">Lead Manager</span>\n      </div>\n\n      {/* Company Selector - Moved to top */}\n      <div className=\"border-b border-gray-200 p-4\">\n        <div className=\"text-xs font-medium text-gray-500 uppercase tracking-wider mb-3\">\n          Active Companies\n        </div>\n        <div className=\"space-y-2\">\n          {companies.map((company) => (\n            <button\n              key={company.name}\n              onClick={() => setSelectedCompany(company.name)}\n              className={`\n                flex items-center w-full px-3 py-2 text-sm font-medium rounded-lg transition-colors\n                ${selectedCompany === company.name\n                  ? 'bg-gray-100 text-gray-900 border-l-4 border-blue-500'\n                  : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'\n                }\n              `}\n            >\n              <div className={`w-3 h-3 ${company.color} rounded-full mr-3`}></div>\n              <span>{company.name}</span>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Navigation */}\n      <nav className=\"flex-1 px-4 py-6 space-y-2\">\n        {selectedCompany === 'CraftyCode' && craftyCodeNavigation.map((item) => {\n          const isActive = pathname === item.href\n          return (\n            <Link\n              key={item.name}\n              href={item.href}\n              className={`\n                flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors\n                ${isActive \n                  ? 'bg-blue-50 text-blue-700 border-r-2 border-blue-700' \n                  : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                }\n              `}\n            >\n              <item.icon className={`mr-3 h-5 w-5 ${isActive ? 'text-blue-700' : 'text-gray-400'}`} />\n              {item.name}\n            </Link>\n          )\n        })}\n        {selectedCompany === 'Avalern' && avalernNavigation.map((item) => {\n          const isActive = pathname === item.href\n          return (\n            <Link\n              key={item.name}\n              href={item.href}\n              className={`\n                flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors\n                ${isActive \n                  ? 'bg-blue-50 text-blue-700 border-r-2 border-blue-700' \n                  : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                }\n              `}\n            >\n              <item.icon className={`mr-3 h-5 w-5 ${isActive ? 'text-blue-700' : 'text-gray-400'}`} />\n              {item.name}\n            </Link>\n          )\n        })}\n      </nav>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/layout/DashboardLayout.tsx"],"sourcesContent":["'use client'\n\nimport Sidebar from './Sidebar'\n\ninterface DashboardLayoutProps {\n  children: React.ReactNode\n}\n\nexport default function DashboardLayout({ children }: DashboardLayoutProps) {\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      <Sidebar />\n      <main className=\"flex-1 overflow-y-auto\">\n        <div className=\"p-8\">\n          {children}\n        </div>\n      </main>\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAQe,SAAS,gBAAgB,EAAE,QAAQ,EAAwB;IACxE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,0IAAA,CAAA,UAAO;;;;;0BACR,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;;;;;;;AAKX;KAXwB","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/types/leads.ts"],"sourcesContent":["export interface Campaign {\n  id: string\n  name: string\n  company: string\n  created_at: string\n  outreach_sequence_id?: string\n  outreach_sequence?: OutreachSequence\n}\n\nexport interface Touchpoint {\n  id: string\n  lead_id: string\n  type: 'email' | 'call' | 'meeting' | 'linkedin_message' | 'note'\n  subject?: string\n  content?: string\n  scheduled_at?: string\n  completed_at?: string\n  outcome?: string\n  outcome_enum?: 'replied' | 'no_answer' | 'voicemail' | 'opted_out' | 'bounced' | 'booked' | 'ignored'\n  created_at: string\n}\n\n// Keep ContactAttempt as an alias for backward compatibility during transition\nexport type ContactAttempt = Touchpoint\n\nexport interface OutreachSequence {\n  id: string\n  name: string\n  company: string\n  description?: string\n  created_at: string\n  updated_at: string\n  steps?: OutreachStep[]\n}\n\nexport interface OutreachStep {\n  id: string\n  sequence_id: string\n  step_order: number\n  type: 'email' | 'call' | 'meeting' | 'linkedin_message' | 'note'\n  subject?: string\n  content?: string\n  day_offset: number\n  created_at: string\n  updated_at: string\n}\n\nexport interface Lead {\n  id: string\n  first_name: string\n  last_name: string\n  email: string\n  phone?: string\n  city?: string\n  state?: string\n  company?: string\n  linkedin_url?: string\n  website_url?: string\n  online_profile?: string\n  source?: string\n  status: string\n  notes?: string\n  campaign_id?: string\n  campaign?: Campaign\n  created_at: string\n  last_contacted_at?: string\n  touchpoints?: Touchpoint[]\n  touchpoints_count?: number\n  scheduled_touchpoints_count?: number\n  // Legacy fields for backward compatibility\n  contact_attempts?: ContactAttempt[]\n  contact_attempts_count?: number\n}\n\nexport interface SyncResults {\n  syncedCount: number\n  totalEmails: number\n  errors?: string[]\n}\n\n// Status mapping for display\nexport const STATUS_DISPLAY_MAP: Record<string, string> = {\n  'not_contacted': 'Not Contacted',\n  'actively_contacting': 'Actively Contacting',\n  'engaged': 'Engaged',\n  'won': 'Won',\n  'not_interested': 'Not Interested'\n}\n\n// Status descriptions for tooltips/help text\nexport const STATUS_DESCRIPTIONS: Record<string, string> = {\n  'not_contacted': 'Lead is in your database, but no outreach yet.',\n  'actively_contacting': \"You're in the process of emailing/calling/following up.\",\n  'engaged': \"They've responded or shown interest (replied, booked a call, etc.).\",\n  'won': 'They became a customer or agreed to a pilot/demo.',\n  'not_interested': 'Said no, ghosted after multiple follow-ups, or clearly not a fit.'\n} "],"names":[],"mappings":";;;;AAiFO,MAAM,qBAA6C;IACxD,iBAAiB;IACjB,uBAAuB;IACvB,WAAW;IACX,OAAO;IACP,kBAAkB;AACpB;AAGO,MAAM,sBAA8C;IACzD,iBAAiB;IACjB,uBAAuB;IACvB,WAAW;IACX,OAAO;IACP,kBAAkB;AACpB","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\nimport { Database } from '@/types/database'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n\nexport const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey)\n\n// Client-side Supabase client\nexport function createClientComponentClient() {\n  return createClient<Database>(supabaseUrl, supabaseAnonKey)\n} "],"names":[],"mappings":";;;;AAGoB;AAHpB;;AAGA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAY,aAAa;AAGrD,SAAS;IACd,OAAO,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAY,aAAa;AAC7C","debugId":null}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/hooks/useLeads.ts"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { supabase } from '../lib/supabase'\nimport { Lead, Campaign, Touchpoint, SyncResults, STATUS_DISPLAY_MAP } from '../types/leads'\nimport { DistrictContact } from '../types/districts'\nimport { useCompany } from '../contexts/CompanyContext'\n\nexport function useLeads(selectedCompany: string) {\n  const [leads, setLeads] = useState<Lead[]>([])\n  const [districtContacts, setDistrictContacts] = useState<DistrictContact[]>([])\n  const [filteredLeads, setFilteredLeads] = useState<Lead[]>([])\n  const [filteredDistrictContacts, setFilteredDistrictContacts] = useState<DistrictContact[]>([])\n  const [paginatedLeads, setPaginatedLeads] = useState<Lead[]>([])\n  const [paginatedDistrictContacts, setPaginatedDistrictContacts] = useState<DistrictContact[]>([])\n  const [loading, setLoading] = useState(true)\n  const [campaigns, setCampaigns] = useState<Campaign[]>([])\n  const [touchpoints, setTouchpoints] = useState<Touchpoint[]>([])\n  const [syncing, setSyncing] = useState(false)\n  const [syncResults, setSyncResults] = useState<SyncResults | null>(null)\n\n  // Filter states\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedStage, setSelectedStage] = useState<string>('all')\n  const [selectedCampaign, setSelectedCampaign] = useState<string>('all')\n  const [selectedSource, setSelectedSource] = useState<string>('all')\n  const [selectedCity, setSelectedCity] = useState<string>('all')\n\n  // Selection states\n  const [selectedLeads, setSelectedLeads] = useState<string[]>([])\n  const [selectedLead, setSelectedLead] = useState<Lead | null>(null)\n  const [editingLead, setEditingLead] = useState<Lead | null>(null)\n\n  // Pagination states\n  const [currentPage, setCurrentPage] = useState(1)\n  const [itemsPerPage, setItemsPerPage] = useState(20)\n\n  // Touchpoint states\n  const [showNewTouchpointForm, setShowNewTouchpointForm] = useState(false)\n  const [newTouchpoint, setNewTouchpoint] = useState<Partial<Touchpoint>>({\n    type: 'email',\n    completed_at: new Date().toISOString().slice(0, 16)\n  })\n  const [saving, setSaving] = useState(false)\n\n  // Fetch campaigns\n  const fetchCampaigns = async () => {\n    try {\n      const { data: campaignsData, error } = await supabase\n        .from('campaigns')\n        .select('*')\n        .eq('company', selectedCompany)\n        .order('created_at', { ascending: false })\n\n      if (error) {\n        console.error('Error fetching campaigns:', error)\n        return\n      }\n\n      setCampaigns(campaignsData || [])\n    } catch (error) {\n      console.error('Error fetching campaigns:', error)\n    }\n  }\n\n  // Fetch leads\n  const fetchLeads = async () => {\n    try {\n      setLoading(true)\n      \n      // First fetch leads with campaigns\n      const { data: leadsData, error: leadsError } = await supabase\n        .from('leads')\n        .select(`\n          *,\n          campaign:campaigns(id, name, company)\n        `)\n        .eq('company', selectedCompany)\n        .order('created_at', { ascending: false })\n\n      if (leadsError) {\n        console.error('Error fetching leads:', leadsError)\n        return\n      }\n\n      // Then fetch contact attempts count for each lead (only completed touchpoints with outcomes)\n      const leadsWithCounts = await Promise.all(\n        (leadsData || []).map(async (lead) => {\n          // Get completed touchpoints count\n          const { count: completedCount } = await supabase\n            .from('touchpoints')\n            .select('*', { count: 'exact', head: true })\n            .eq('lead_id', lead.id)\n            .not('completed_at', 'is', null)\n            .not('outcome', 'is', null)\n          \n          // Get scheduled touchpoints count (not completed yet)\n          const { count: scheduledCount } = await supabase\n            .from('touchpoints')\n            .select('*', { count: 'exact', head: true })\n            .eq('lead_id', lead.id)\n            .is('completed_at', null)\n            .not('scheduled_at', 'is', null)\n          \n          return {\n            ...lead,\n            touchpoints_count: completedCount || 0,\n            scheduled_touchpoints_count: scheduledCount || 0\n          }\n        })\n      )\n\n      setLeads(leadsWithCounts)\n    } catch (error) {\n      console.error('Error fetching leads:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Fetch touchpoints for a specific lead (only completed touchpoints with outcomes)\n  const fetchTouchpoints = async (leadId: string) => {\n    try {\n      const { data: touchpointsData, error } = await supabase\n        .from('touchpoints')\n        .select('*')\n        .eq('lead_id', leadId)\n        .not('completed_at', 'is', null)\n        .not('outcome', 'is', null)\n        .order('completed_at', { ascending: false })\n\n      if (error) {\n        console.error('Error fetching touchpoints:', error)\n        return\n      }\n\n      setTouchpoints(touchpointsData || [])\n    } catch (error) {\n      console.error('Error fetching touchpoints:', error)\n    }\n  }\n\n  // Fetch district contacts for Avalern\n  const fetchDistrictContacts = async () => {\n    try {\n      setLoading(true)\n      \n      const { data: contactsData, error: contactsError } = await supabase\n        .from('district_contacts')\n        .select(`\n          *,\n          district_lead:district_leads!inner(\n            id,\n            district_name,\n            county,\n            company,\n            status,\n            campaign_id,\n            campaign:campaigns(id, name, company)\n          )\n        `)\n        .eq('district_lead.company', selectedCompany)\n        .order('created_at', { ascending: false })\n\n      if (contactsError) {\n        console.error('Error fetching district contacts:', contactsError)\n        return\n      }\n\n      // Fetch touchpoints count for each contact\n      const contactsWithCounts = await Promise.all(\n        (contactsData || []).map(async (contact) => {\n          // Get completed touchpoints count\n          const { count: completedCount } = await supabase\n            .from('touchpoints')\n            .select('*', { count: 'exact', head: true })\n            .eq('district_contact_id', contact.id)\n            .not('completed_at', 'is', null)\n            .not('outcome', 'is', null)\n          \n          // Get scheduled touchpoints count (not completed yet)\n          const { count: scheduledCount } = await supabase\n            .from('touchpoints')\n            .select('*', { count: 'exact', head: true })\n            .eq('district_contact_id', contact.id)\n            .is('completed_at', null)\n            .not('scheduled_at', 'is', null)\n          \n          return {\n            ...contact,\n            touchpoints_count: completedCount || 0,\n            scheduled_touchpoints_count: scheduledCount || 0\n          }\n        })\n      )\n\n      setDistrictContacts(contactsWithCounts)\n    } catch (error) {\n      console.error('Error fetching district contacts:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Fetch touchpoints for a specific district contact\n  const fetchDistrictContactTouchpoints = async (contactId: string) => {\n    try {\n      const { data: touchpointsData, error } = await supabase\n        .from('touchpoints')\n        .select('*')\n        .eq('district_contact_id', contactId)\n        .not('completed_at', 'is', null)\n        .not('outcome', 'is', null)\n        .order('completed_at', { ascending: false })\n\n      if (error) {\n        console.error('Error fetching district contact touchpoints:', error)\n        return\n      }\n\n      setTouchpoints(touchpointsData || [])\n    } catch (error) {\n      console.error('Error fetching district contact touchpoints:', error)\n    }\n  }\n\n  // Initial data fetch\n  useEffect(() => {\n    if (selectedCompany === 'Avalern') {\n      fetchDistrictContacts()\n    } else {\n      fetchLeads()\n    }\n    fetchCampaigns()\n  }, [selectedCompany])\n\n  // Auto-select leads when they first load\n  useEffect(() => {\n    if (leads.length > 0 && selectedLeads.length === 0) {\n      // Don't auto-select any leads - let user choose\n    }\n  }, [leads.length, selectedLeads.length])\n\n  // Filter leads based on search and filters\n  useEffect(() => {\n    if (selectedCompany === 'Avalern') {\n      // Filter district contacts\n      let filtered = districtContacts || []\n\n      // Search filter\n      if (searchTerm) {\n        filtered = filtered.filter(contact =>\n          `${contact.first_name || ''} ${contact.last_name || ''}`.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          (contact.email || '').toLowerCase().includes(searchTerm.toLowerCase()) ||\n          (contact.title || '').toLowerCase().includes(searchTerm.toLowerCase()) ||\n          (contact.district_lead?.district_name || '').toLowerCase().includes(searchTerm.toLowerCase()) ||\n          (contact.district_lead?.county || '').toLowerCase().includes(searchTerm.toLowerCase())\n        )\n      }\n\n      // Stage filter (based on district status)\n      if (selectedStage !== 'all') {\n        filtered = filtered.filter(contact => contact.district_lead?.status === selectedStage)\n      }\n\n      // Campaign filter (based on district campaign)\n      if (selectedCampaign !== 'all') {\n        filtered = filtered.filter(contact => contact.district_lead?.campaign_id === selectedCampaign)\n      }\n\n      // City filter (based on county for districts)\n      if (selectedCity !== 'all') {\n        filtered = filtered.filter(contact => contact.district_lead?.county === selectedCity)\n      }\n\n      setFilteredDistrictContacts(filtered)\n    } else {\n      // Filter individual leads\n      let filtered = leads || []\n\n      // Search filter\n      if (searchTerm) {\n        filtered = filtered.filter(lead =>\n          `${lead.first_name || ''} ${lead.last_name || ''}`.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          (lead.email || '').toLowerCase().includes(searchTerm.toLowerCase()) ||\n          (lead.company && lead.company.toLowerCase().includes(searchTerm.toLowerCase()))\n        )\n      }\n\n      // Stage filter\n      if (selectedStage !== 'all') {\n        filtered = filtered.filter(lead => lead.status === selectedStage)\n      }\n\n      // Campaign filter\n      if (selectedCampaign !== 'all') {\n        filtered = filtered.filter(lead => lead.campaign_id === selectedCampaign)\n      }\n\n      // Source filter\n      if (selectedSource !== 'all') {\n        filtered = filtered.filter(lead => lead.source === selectedSource)\n      }\n\n      // City filter\n      if (selectedCity !== 'all') {\n        filtered = filtered.filter(lead => lead.city === selectedCity)\n      }\n\n      setFilteredLeads(filtered)\n    }\n    \n    // Reset to first page when filters change\n    setCurrentPage(1)\n  }, [leads, districtContacts, searchTerm, selectedStage, selectedCampaign, selectedSource, selectedCity, selectedCompany])\n\n  // Pagination logic\n  useEffect(() => {\n    const startIndex = (currentPage - 1) * itemsPerPage\n    const endIndex = startIndex + itemsPerPage\n    \n    if (selectedCompany === 'Avalern') {\n      const paginated = filteredDistrictContacts.slice(startIndex, endIndex)\n      setPaginatedDistrictContacts(paginated)\n    } else {\n      const paginated = filteredLeads.slice(startIndex, endIndex)\n      setPaginatedLeads(paginated)\n    }\n  }, [filteredLeads, filteredDistrictContacts, currentPage, itemsPerPage, selectedCompany])\n\n  // Lead selection handlers\n  const handleSelectLead = (leadId: string) => {\n    setSelectedLeads(prev =>\n      prev.includes(leadId)\n        ? prev.filter(id => id !== leadId)\n        : [...prev, leadId]\n    )\n  }\n\n  const handleSelectAll = () => {\n    if (selectedLeads.length === filteredLeads.length) {\n      setSelectedLeads([])\n    } else {\n      setSelectedLeads(filteredLeads.map(lead => lead.id))\n    }\n  }\n\n  const handleSelectNumber = (count: number) => {\n    if (count === 0) {\n      setSelectedLeads([])\n    } else {\n      const leadsToSelect = filteredLeads.slice(0, count)\n      setSelectedLeads(leadsToSelect.map(lead => lead.id))\n    }\n  }\n\n  // Pagination handlers\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page)\n  }\n\n  const handleItemsPerPageChange = (items: number) => {\n    setItemsPerPage(items)\n    setCurrentPage(1) // Reset to first page\n  }\n\n  // Lead panel handlers\n  const handleOpenLeadPanel = async (lead: Lead) => {\n    setSelectedLead(lead)\n    setEditingLead({ ...lead })\n    await fetchTouchpoints(lead.id)\n  }\n\n  const handleCloseLeadPanel = () => {\n    setSelectedLead(null)\n    setEditingLead(null)\n    setTouchpoints([])\n    setShowNewTouchpointForm(false)\n    setNewTouchpoint({\n      type: 'email',\n      completed_at: new Date().toISOString().slice(0, 16)\n    })\n  }\n\n  // Update lead\n  const handleUpdateLead = async () => {\n    if (!editingLead || !selectedLead) return\n\n    try {\n      setSaving(true)\n      \n      // Check if lead is being assigned to a campaign and should change status\n      let finalStatus = editingLead.status\n      const wasAssignedToCampaign = !selectedLead.campaign_id && editingLead.campaign_id\n      const isBeingRemovedFromCampaign = selectedLead.campaign_id && !editingLead.campaign_id\n      \n      if (wasAssignedToCampaign && editingLead.status === 'not_contacted') {\n        // Auto-change status to actively_contacting when assigning to campaign\n        finalStatus = 'actively_contacting'\n      } else if (isBeingRemovedFromCampaign && editingLead.status === 'actively_contacting') {\n        // Auto-change status back to not_contacted when removing from campaign\n        finalStatus = 'not_contacted'\n      }\n      \n      const { error } = await supabase\n        .from('leads')\n        .update({\n          first_name: editingLead.first_name,\n          last_name: editingLead.last_name,\n          email: editingLead.email,\n          phone: editingLead.phone,\n          city: editingLead.city,\n          state: editingLead.state,\n          company: editingLead.company,\n          linkedin_url: editingLead.linkedin_url,\n          website_url: editingLead.website_url,\n          online_profile: editingLead.online_profile,\n          source: editingLead.source,\n          status: finalStatus,\n          notes: editingLead.notes,\n          campaign_id: editingLead.campaign_id\n        })\n        .eq('id', selectedLead.id)\n\n      if (error) {\n        console.error('Error updating lead:', error)\n        alert('Failed to update lead')\n        return\n      }\n\n      // Update the lead in the local state\n      const updatedLead = { ...editingLead, status: finalStatus }\n      setLeads(prevLeads => \n        prevLeads.map(lead => \n          lead.id === selectedLead.id \n            ? { ...lead, ...updatedLead }\n            : lead\n        )\n      )\n\n      // Update selected lead and editing lead\n      setSelectedLead({ ...selectedLead, ...updatedLead })\n      setEditingLead(updatedLead)\n    } catch (error) {\n      console.error('Error updating lead:', error)\n      alert('Failed to update lead')\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  // Add touchpoint\n  const handleAddTouchpoint = async () => {\n    if (!selectedLead || !newTouchpoint.type) return\n\n    try {\n      setSaving(true)\n      \n      const { error } = await supabase\n        .from('touchpoints')\n        .insert({\n          lead_id: selectedLead.id,\n          type: newTouchpoint.type,\n          subject: newTouchpoint.subject,\n          content: newTouchpoint.content,\n          completed_at: newTouchpoint.completed_at,\n          outcome: newTouchpoint.outcome\n        })\n        .select()\n        .single()\n\n      if (error) {\n        console.error('Error adding touchpoint:', error)\n        alert('Failed to add touchpoint')\n        return\n      }\n\n      // Refresh touchpoints\n      await fetchTouchpoints(selectedLead.id)\n      \n      // Update lead's last_contacted_at if this touchpoint has a completed_at date\n      if (newTouchpoint.completed_at) {\n        await supabase\n          .from('leads')\n          .update({ last_contacted_at: newTouchpoint.completed_at })\n          .eq('id', selectedLead.id)\n      }\n\n      // Update the touchpoints count in local state immediately (only count completed touchpoints with outcomes)\n      const completedTouchpointsWithOutcomes = touchpoints.filter(tp => tp.completed_at && tp.outcome)\n      const updatedTouchpointCount = completedTouchpointsWithOutcomes.length + (newTouchpoint.completed_at && newTouchpoint.outcome ? 1 : 0)\n      setLeads(prevLeads => \n        prevLeads.map(lead => \n          lead.id === selectedLead.id \n            ? { ...lead, touchpoints_count: updatedTouchpointCount, last_contacted_at: newTouchpoint.completed_at || lead.last_contacted_at }\n            : lead\n        )\n      )\n\n      // Update selected lead\n      setSelectedLead(prev => prev ? { \n        ...prev, \n        touchpoints_count: updatedTouchpointCount,\n        last_contacted_at: newTouchpoint.completed_at || prev.last_contacted_at\n      } : null)\n\n      // Reset form\n      setNewTouchpoint({\n        type: 'email',\n        completed_at: new Date().toISOString().slice(0, 16)\n      })\n      setShowNewTouchpointForm(false)\n    } catch (error) {\n      console.error('Error adding contact attempt:', error)\n      alert('Failed to add contact attempt')\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  // Sync with Instantly\n  const handleSyncInstantly = async () => {\n    try {\n      setSyncing(true)\n      setSyncResults(null)\n      \n      // Get all lead IDs or selected lead IDs\n      const leadIdsToSync = selectedLeads.length > 0 ? selectedLeads : filteredLeads.map(lead => lead.id)\n      \n      if (leadIdsToSync.length === 0) {\n        alert('No leads to sync')\n        return\n      }\n\n      const response = await fetch('/api/sync-instantly', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          leadIds: leadIdsToSync\n        })\n      })\n\n      const result = await response.json()\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Sync failed')\n      }\n\n      setSyncResults(result)\n      \n      // Refresh leads and touchpoints to show updated data\n      await fetchLeads()\n      if (selectedLead) {\n        await fetchTouchpoints(selectedLead.id)\n      }\n\n      // Show success message\n      const message = `Sync completed! ${result.syncedCount} new contact attempts added from ${result.totalEmails} emails.`\n      alert(message)\n\n    } catch (error) {\n      console.error('Sync error:', error)\n      alert(`Sync failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    } finally {\n      setSyncing(false)\n    }\n  }\n\n  // Get unique values for filters\n  const uniqueSources = selectedCompany === 'Avalern' \n    ? [] // No sources for district contacts\n    : [...new Set((leads || []).map(l => l.source).filter((source): source is string => Boolean(source)))].sort()\n  \n  const uniqueCities = selectedCompany === 'Avalern'\n    ? [...new Set((districtContacts || []).map(c => c.district_lead?.county).filter((county): county is string => Boolean(county)))].sort()\n    : [...new Set((leads || []).map(l => l.city).filter((city): city is string => Boolean(city)))].sort()\n  \n  const availableStatuses = Object.keys(STATUS_DISPLAY_MAP)\n  const totalCompanyLeads = selectedCompany === 'Avalern' ? districtContacts.length : leads.length\n\n  // Pagination info\n  const currentData = selectedCompany === 'Avalern' ? filteredDistrictContacts : filteredLeads\n  const totalPages = Math.ceil(currentData.length / itemsPerPage)\n  const totalFilteredCount = currentData.length\n  const startIndex = (currentPage - 1) * itemsPerPage + 1\n  const endIndex = Math.min(currentPage * itemsPerPage, currentData.length)\n\n  return {\n    // Data\n    leads: selectedCompany === 'Avalern' ? [] : paginatedLeads,\n    districtContacts: selectedCompany === 'Avalern' ? paginatedDistrictContacts : [],\n    allLeads: leads, // All leads for bulk operations\n    allDistrictContacts: districtContacts, // All district contacts\n    filteredLeads: selectedCompany === 'Avalern' ? [] : filteredLeads,\n    filteredDistrictContacts: selectedCompany === 'Avalern' ? filteredDistrictContacts : [],\n    campaigns,\n    touchpoints,\n    loading,\n    syncing,\n    syncResults,\n    saving,\n    \n    // Filter states\n    searchTerm,\n    selectedStage,\n    selectedCampaign,\n    selectedSource,\n    selectedCity,\n    \n    // Selection states\n    selectedLeads,\n    selectedLead,\n    editingLead,\n    \n    // Touchpoint states\n    showNewTouchpointForm,\n    newTouchpoint,\n    \n    // Pagination states\n    currentPage,\n    itemsPerPage,\n    totalPages,\n    totalFilteredCount,\n    startIndex,\n    endIndex,\n    \n    // Computed values\n    uniqueSources,\n    uniqueCities,\n    availableStatuses,\n    totalCompanyLeads,\n    isAvalern: selectedCompany === 'Avalern',\n    \n    // Handlers\n    setSearchTerm,\n    setSelectedStage,\n    setSelectedCampaign,\n    setSelectedSource,\n    setSelectedCity,\n    handleSelectLead,\n    handleSelectAll,\n    handleSelectNumber,\n    handlePageChange,\n    handleItemsPerPageChange,\n    handleOpenLeadPanel,\n    handleCloseLeadPanel,\n    setEditingLead,\n    handleUpdateLead,\n    setShowNewTouchpointForm,\n    setNewTouchpoint,\n    handleAddTouchpoint,\n    handleSyncInstantly,\n    setSyncResults,\n    \n    // Refresh functions\n    fetchLeads,\n    fetchTouchpoints,\n    fetchDistrictContacts,\n    fetchDistrictContactTouchpoints\n  }\n} "],"names":[],"mappings":"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AAI,eAAe;IACtD,MAAM,WAAW,KAAK,GAAG,CAAC,cAAc,cAAc,YAAY,MAAM;IAExE,OAAO;QACL,OAAO;QACP,OAAO,oBAAoB,YAAY,EAAE,GAAG;QAC5C,kBAAkB,oBAAoB,YAAY,4BAA4B,EAAE;QAChF,UAAU;QACV,qBAAqB;QACrB,eAAe,oBAAoB,YAAY,EAAE,GAAG;QACpD,0BAA0B,oBAAoB,YAAY,2BAA2B,EAAE;QACvF;QACA;QACA;QACA;QACA;QACA;QAEA,gBAAgB;QAChB;QACA;QACA;QACA;QACA;QAEA,mBAAmB;QACnB;QACA;QACA;QAEA,oBAAoB;QACpB;QACA;QAEA,oBAAoB;QACpB;QACA;QACA;QACA;QACA;QACA;QAEA,kBAAkB;QAClB;QACA;QACA;QACA;QACA,WAAW,oBAAoB;QAE/B,WAAW;QACX;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA,oBAAoB;QACpB;QACA;QACA;QACA;IACF;AACF;GA9oBgB","debugId":null}},
    {"offset": {"line": 994, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/lib/csv-utils.ts"],"sourcesContent":["import Papa from 'papaparse'\nimport { Lead } from '../types/database'\n\nexport interface CSVLead {\n  firstName: string\n  lastName: string\n  email: string\n  phone?: string\n  city?: string\n  source?: string\n  industry?: string\n  websiteQuality?: string\n  company?: string\n  linkedinUrl?: string\n  websiteUrl?: string\n  onlineProfile?: string\n  emailSent?: string\n  callMade?: string\n  response?: string\n  nextStep?: string\n}\n\nexport function parseCSV(file: File): Promise<CSVLead[]> {\n  return new Promise((resolve, reject) => {\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: (results) => {\n        if (results.errors.length > 0) {\n          reject(new Error('CSV parsing error: ' + results.errors[0].message))\n          return\n        }\n        \n        const leads = results.data.map((row: any) => ({\n          firstName: row['First Name'] || '',\n          lastName: row['Last Name'] || '',\n          email: row['Email'] || '',\n          phone: row['Phone Number'] || '',\n          city: row['City/State'] || '',\n          source: determineSource(row['Online Profile'], row['Linkedin URL']),\n          industry: 'Real Estate',\n          websiteQuality: row['Website?'] === 'Yes' || row['Website?'] === 'yes' ? '8' : '0',\n          company: row['Company'] || '',\n          linkedinUrl: row['Linkedin URL'] || '',\n          websiteUrl: row['Website Link'] || '',\n          onlineProfile: row['Online Profile'] || '',\n          emailSent: row['Email Sent?'] || '',\n          callMade: row['Call Made?'] || '',\n          response: row['Response'] || '',\n          nextStep: row['Next Step / Notes'] || ''\n        }))\n        \n        resolve(leads)\n      },\n      error: (error) => {\n        reject(error)\n      }\n    })\n  })\n}\n\nfunction determineSource(onlineProfile?: string, linkedinUrl?: string): string {\n  if (onlineProfile?.includes('zillow.com')) return 'Zillow'\n  if (linkedinUrl?.includes('linkedin.com')) return 'LinkedIn'\n  if (onlineProfile?.includes('realtor.com')) return 'Realtor.com'\n  return 'Cold Outreach'\n}\n\nfunction extractCityFromCityState(cityState?: string): string {\n  if (!cityState) return ''\n  \n  const cleanCityState = cityState.replace(/,$/, '').trim()\n  const parts = cleanCityState.split(',')\n  return parts[0]?.trim() || ''\n}\n\nexport interface ValidationError {\n  lead: CSVLead\n  errors: string[]\n  rowIndex: number\n}\n\nexport function validateLeads(leads: CSVLead[]): { valid: CSVLead[], invalid: ValidationError[] } {\n  const valid: CSVLead[] = []\n  const invalid: ValidationError[] = []\n  \n  leads.forEach((lead, index) => {\n    const errors: string[] = []\n    \n    // Check required fields\n    if (!lead.firstName || lead.firstName.trim() === '') {\n      errors.push('Missing first name')\n    }\n    if (!lead.lastName || lead.lastName.trim() === '') {\n      errors.push('Missing last name')\n    }\n    if (!lead.email || lead.email.trim() === '') {\n      errors.push('Missing email address')\n    } else if (!isValidEmail(lead.email)) {\n      errors.push('Invalid email format')\n    }\n    \n    // Check optional field formats\n    if (lead.phone && !isValidPhone(lead.phone)) {\n      errors.push('Invalid phone number format')\n    }\n    \n    if (errors.length === 0) {\n      lead.city = extractCityFromCityState(lead.city)\n      valid.push(lead)\n    } else {\n      invalid.push({\n        lead,\n        errors,\n        rowIndex: index + 2 // +2 because CSV rows start at 2 (1 is header)\n      })\n    }\n  })\n  \n  return { valid, invalid }\n}\n\nexport function deduplicateLeads(leads: CSVLead[], existingEmails: string[]): CSVLead[] {\n  const seen = new Set(existingEmails.map(email => email.toLowerCase()))\n  const deduplicated: CSVLead[] = []\n  \n  leads.forEach(lead => {\n    if (!seen.has(lead.email.toLowerCase())) {\n      seen.add(lead.email.toLowerCase())\n      deduplicated.push(lead)\n    }\n  })\n  \n  return deduplicated\n}\n\nexport function convertToLeadInsert(csvLead: CSVLead) {\n  // Map city to proper enum value\n  const mapCityToEnum = (cityState?: string): string | null => {\n    if (!cityState) return null\n    \n    const cityMap: { [key: string]: string } = {\n      'burbank': 'Burbank',\n      'glendale': 'Glendale', \n      'los angeles': 'Los Angeles',\n      'pasadena': 'Pasadena',\n      'north hollywood': 'North Hollywood',\n      'van nuys': 'Van Nuys',\n      'sherman oaks': 'Sherman Oaks',\n      'studio city': 'Studio City',\n      'hollywood': 'Hollywood',\n      'west hollywood': 'West Hollywood',\n      'beverly hills': 'Beverly Hills',\n      'santa monica': 'Santa Monica',\n      'culver city': 'Culver City',\n      'westwood': 'Westwood',\n      'brentwood': 'Brentwood',\n      'venice': 'Venice',\n      'manhattan beach': 'Manhattan Beach',\n      'redondo beach': 'Redondo Beach',\n      'torrance': 'Torrance',\n      'el segundo': 'El Segundo',\n      'inglewood': 'Inglewood',\n      'hawthorne': 'Hawthorne'\n    }\n    \n    // Extract city from \"City, State\" format\n    const city = cityState.split(',')[0]?.trim().toLowerCase()\n    return cityMap[city] || 'Other'\n  }\n\n  // Map source to proper enum value\n  const mapSourceToEnum = (source?: string): string => {\n    if (!source) return 'Other'\n    \n    const sourceMap: { [key: string]: string } = {\n      'zillow': 'Zillow',\n      'linkedin': 'LinkedIn',\n      'realtor.com': 'Realtor.com',\n      'realtor': 'Realtor.com',\n      'redfin': 'Redfin',\n      'trulia': 'Trulia'\n    }\n    \n    return sourceMap[source.toLowerCase()] || 'Other'\n  }\n\n  return {\n    first_name: csvLead.firstName,\n    last_name: csvLead.lastName,\n    email: csvLead.email.toLowerCase(),\n    phone: csvLead.phone || null,\n    city: mapCityToEnum(csvLead.city),\n    state: 'CA',\n    company: csvLead.company || null,\n    linkedin_url: csvLead.linkedinUrl || null,\n    website_url: csvLead.websiteUrl || null,\n    online_profile: csvLead.onlineProfile || null,\n    source: mapSourceToEnum(csvLead.source)\n  }\n}\n\nexport function convertToLeadStatusInsert(csvLead: CSVLead, leadId: string, campaignId: string) {\n  const emailSent = csvLead.emailSent?.toLowerCase() === 'yes' || csvLead.emailSent?.toLowerCase() === 'true'\n  const callMade = csvLead.callMade?.toLowerCase() === 'yes' || csvLead.callMade?.toLowerCase() === 'true'\n  \n  let status = 'Not Contacted'\n  if (csvLead.response && csvLead.response.trim()) {\n    status = 'Responded'\n  } else if (callMade) {\n    status = 'Call Made'\n  } else if (emailSent) {\n    status = 'Email Sent'\n  }\n  \n  return {\n    lead_id: leadId,\n    campaign_id: campaignId,\n    status,\n    email_sent: emailSent,\n    call_made: callMade,\n    response: csvLead.response || null,\n    next_step: csvLead.nextStep || null,\n    touch_count: (emailSent ? 1 : 0) + (callMade ? 1 : 0)\n  }\n}\n\nexport function exportToCSV(leads: Lead[], filename: string = 'san-fernando-valley-leads') {\n  const csvData = leads.map(lead => ({\n    'First Name': lead.first_name,\n    'Last Name': lead.last_name,\n    'Email': lead.email,\n    'Phone Number': lead.phone || '',\n    'City/State': lead.city ? `${lead.city}, CA` : '',\n    'Company': lead.company || '',\n    'LinkedIn URL': lead.linkedin_url || '',\n    'Website Link': lead.website_url || '',\n    'Online Profile': lead.online_profile || '',\n    'Source': lead.source || '',\n    'Status': lead.status || 'Not Contacted'\n  }))\n  \n  const csv = Papa.unparse(csvData)\n  const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' })\n  const link = document.createElement('a')\n  \n  if (link.download !== undefined) {\n    const url = URL.createObjectURL(blob)\n    link.setAttribute('href', url)\n    link.setAttribute('download', `${filename}.csv`)\n    link.style.visibility = 'hidden'\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n}\n\nfunction isValidEmail(email: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  return emailRegex.test(email)\n}\n\nfunction isValidPhone(phone: string): boolean {\n  // Allow various phone formats: (123) 456-7890, 123-456-7890, +1-123-456-7890, etc.\n  const phoneRegex = /^[\\+]?[1-9]?[\\-\\s\\(\\)]?[0-9]{3}[\\-\\s\\(\\)]?[0-9]{3}[\\-\\s]?[0-9]{4}$/\n  return phoneRegex.test(phone.replace(/[\\s\\-\\(\\)]/g, ''))\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1230, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/leads/LeadsHeader.tsx"],"sourcesContent":["'use client'\n\nimport { Download, Upload } from 'lucide-react'\n\ninterface LeadsHeaderProps {\n  onImportLeads: () => void\n  onExportLeads: () => void\n  selectedCount: number\n  totalCompanyLeads: number\n  selectedCompany: string\n}\n\nexport default function LeadsHeader({\n  onImportLeads,\n  onExportLeads,\n  selectedCount,\n  totalCompanyLeads,\n  selectedCompany\n}: LeadsHeaderProps) {\n  return (\n    <div className=\"flex items-center justify-between\">\n      <div>\n        <h1 className=\"text-2xl font-bold text-gray-900\">\n          Leads ({totalCompanyLeads})\n        </h1>\n        <p className=\"text-gray-600\">Manage and track your leads for {selectedCompany}</p>\n      </div>\n      <div className=\"flex items-center space-x-3\">\n        <button \n          onClick={onExportLeads}\n          disabled={selectedCount === 0}\n          className=\"flex items-center px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          <Download className=\"h-4 w-4 mr-2\" />\n          Export {selectedCount > 0 ? `(${selectedCount})` : ''}\n        </button>\n        <button\n          onClick={onImportLeads}\n          className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n        >\n          <Upload className=\"h-4 w-4 mr-2\" />\n          Import Leads\n        </button>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAAA;AAFA;;;AAYe,SAAS,YAAY,EAClC,aAAa,EACb,aAAa,EACb,aAAa,EACb,iBAAiB,EACjB,eAAe,EACE;IACjB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;;4BAAmC;4BACvC;4BAAkB;;;;;;;kCAE5B,6LAAC;wBAAE,WAAU;;4BAAgB;4BAAiC;;;;;;;;;;;;;0BAEhE,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,SAAS;wBACT,UAAU,kBAAkB;wBAC5B,WAAU;;0CAEV,6LAAC,6MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;4BAAiB;4BAC7B,gBAAgB,IAAI,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,GAAG;;;;;;;kCAErD,6LAAC;wBACC,SAAS;wBACT,WAAU;;0CAEV,6LAAC,yMAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;;;AAM7C;KAlCwB","debugId":null}},
    {"offset": {"line": 1340, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/leads/SyncResults.tsx"],"sourcesContent":["'use client'\n\nimport { RefreshCw, X } from 'lucide-react'\n\ninterface SyncResultsProps {\n  syncResults: {\n    syncedCount: number\n    totalEmails: number\n    errors?: string[]\n  } | null\n  onDismiss: () => void\n}\n\nexport default function SyncResults({ syncResults, onDismiss }: SyncResultsProps) {\n  if (!syncResults) return null\n\n  return (\n    <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n      <div className=\"flex items-center\">\n        <div className=\"flex-shrink-0\">\n          <RefreshCw className=\"h-5 w-5 text-green-400\" />\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-green-800\">\n            Instantly Sync Completed\n          </h3>\n          <div className=\"mt-2 text-sm text-green-700\">\n            <p>\n              Successfully synced {syncResults.syncedCount} new contact attempts from {syncResults.totalEmails} emails.\n            </p>\n            {syncResults.errors && syncResults.errors.length > 0 && (\n              <div className=\"mt-2\">\n                <p className=\"font-medium\">Errors encountered:</p>\n                <ul className=\"list-disc list-inside\">\n                  {syncResults.errors.map((error, index) => (\n                    <li key={index} className=\"text-red-600\">{error}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"ml-auto\">\n          <button\n            onClick={onDismiss}\n            className=\"text-green-400 hover:text-green-600\"\n          >\n            <X className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAAA;AAFA;;;AAae,SAAS,YAAY,EAAE,WAAW,EAAE,SAAS,EAAoB;IAC9E,IAAI,CAAC,aAAa,OAAO;IAEzB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,mNAAA,CAAA,YAAS;wBAAC,WAAU;;;;;;;;;;;8BAEvB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAqC;;;;;;sCAGnD,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;;wCAAE;wCACoB,YAAY,WAAW;wCAAC;wCAA4B,YAAY,WAAW;wCAAC;;;;;;;gCAElG,YAAY,MAAM,IAAI,YAAY,MAAM,CAAC,MAAM,GAAG,mBACjD,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAE,WAAU;sDAAc;;;;;;sDAC3B,6LAAC;4CAAG,WAAU;sDACX,YAAY,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,sBAC9B,6LAAC;oDAAe,WAAU;8DAAgB;mDAAjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAOrB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,SAAS;wBACT,WAAU;kCAEV,cAAA,6LAAC,+LAAA,CAAA,IAAC;4BAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMzB;KAxCwB","debugId":null}},
    {"offset": {"line": 1487, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/leads/LeadsFilters.tsx"],"sourcesContent":["'use client'\n\nimport { Search } from 'lucide-react'\nimport { Campaign } from '../../types/leads'\n\ninterface LeadsFiltersProps {\n  searchTerm: string\n  onSearchChange: (value: string) => void\n  showFilters: boolean\n  selectedStage: string\n  onStageChange: (value: string) => void\n  selectedCampaign: string\n  onCampaignChange: (value: string) => void\n  selectedSource: string\n  onSourceChange: (value: string) => void\n  selectedCity: string\n  onCityChange: (value: string) => void\n  availableStatuses: string[]\n  campaigns: Campaign[]\n  uniqueSources: string[]\n  uniqueCities: string[]\n  statusDisplayMap: Record<string, string>\n  selectedCount: number\n  totalCount: number\n  onSelectNumber: (count: number) => void\n}\n\nexport default function LeadsFilters({\n  searchTerm,\n  onSearchChange,\n  showFilters,\n  selectedStage,\n  onStageChange,\n  selectedCampaign,\n  onCampaignChange,\n  selectedSource,\n  onSourceChange,\n  selectedCity,\n  onCityChange,\n  availableStatuses,\n  campaigns,\n  uniqueSources,\n  uniqueCities,\n  statusDisplayMap,\n  selectedCount,\n  totalCount,\n  onSelectNumber\n}: LeadsFiltersProps) {\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"relative flex-1 max-w-md\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search leads...\"\n            value={searchTerm}\n            onChange={(e) => onSearchChange(e.target.value)}\n            className=\"pl-10 pr-4 py-2 w-full border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          />\n        </div>\n        \n        <div className=\"flex items-center space-x-3 ml-4\">\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => onSelectNumber(10)}\n              className=\"px-3 py-1 text-xs bg-gray-100 hover:bg-gray-200 rounded-md transition-colors\"\n            >\n              Select 10\n            </button>\n            <button\n              onClick={() => onSelectNumber(25)}\n              className=\"px-3 py-1 text-xs bg-gray-100 hover:bg-gray-200 rounded-md transition-colors\"\n            >\n              Select 25\n            </button>\n            <button\n              onClick={() => onSelectNumber(0)}\n              className=\"px-3 py-1 text-xs bg-red-100 hover:bg-red-200 text-red-700 rounded-md transition-colors\"\n            >\n              Clear All\n            </button>\n          </div>\n          {selectedCount > 0 && (\n            <span className=\"text-sm text-gray-600 font-medium\">\n              {selectedCount} selected\n            </span>\n          )}\n        </div>\n      </div>\n\n      {/* Filter Options */}\n      {showFilters && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 pt-4 border-t border-gray-200\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n            <select\n              value={selectedStage}\n              onChange={(e) => onStageChange(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"all\">All Statuses</option>\n              {(availableStatuses || []).map(status => (\n                <option key={status} value={status}>{statusDisplayMap[status] || status}</option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Campaign</label>\n            <select\n              value={selectedCampaign}\n              onChange={(e) => onCampaignChange(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"all\">All Campaigns</option>\n              {(campaigns || []).map(campaign => (\n                <option key={campaign.id} value={campaign.id}>{campaign.name}</option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Source</label>\n            <select\n              value={selectedSource}\n              onChange={(e) => onSourceChange(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"all\">All Sources</option>\n              {(uniqueSources || []).map(source => (\n                <option key={source} value={source}>{source}</option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">City</label>\n            <select\n              value={selectedCity}\n              onChange={(e) => onCityChange(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"all\">All Cities</option>\n              {(uniqueCities || []).map(city => (\n                <option key={city} value={city}>{city}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AA2Be,SAAS,aAAa,EACnC,UAAU,EACV,cAAc,EACd,WAAW,EACX,aAAa,EACb,aAAa,EACb,gBAAgB,EAChB,gBAAgB,EAChB,cAAc,EACd,cAAc,EACd,YAAY,EACZ,YAAY,EACZ,iBAAiB,EACjB,SAAS,EACT,aAAa,EACb,YAAY,EACZ,gBAAgB,EAChB,aAAa,EACb,UAAU,EACV,cAAc,EACI;IAClB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,yMAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;0CAClB,6LAAC;gCACC,MAAK;gCACL,aAAY;gCACZ,OAAO;gCACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;gCAC9C,WAAU;;;;;;;;;;;;kCAId,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,SAAS,IAAM,eAAe;wCAC9B,WAAU;kDACX;;;;;;kDAGD,6LAAC;wCACC,SAAS,IAAM,eAAe;wCAC9B,WAAU;kDACX;;;;;;kDAGD,6LAAC;wCACC,SAAS,IAAM,eAAe;wCAC9B,WAAU;kDACX;;;;;;;;;;;;4BAIF,gBAAgB,mBACf,6LAAC;gCAAK,WAAU;;oCACb;oCAAc;;;;;;;;;;;;;;;;;;;YAOtB,6BACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACC,6LAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAChE,6LAAC;gCACC,OAAO;gCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;gCAC7C,WAAU;;kDAEV,6LAAC;wCAAO,OAAM;kDAAM;;;;;;oCACnB,CAAC,qBAAqB,EAAE,EAAE,GAAG,CAAC,CAAA,uBAC7B,6LAAC;4CAAoB,OAAO;sDAAS,gBAAgB,CAAC,OAAO,IAAI;2CAApD;;;;;;;;;;;;;;;;;kCAKnB,6LAAC;;0CACC,6LAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAChE,6LAAC;gCACC,OAAO;gCACP,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;gCAChD,WAAU;;kDAEV,6LAAC;wCAAO,OAAM;kDAAM;;;;;;oCACnB,CAAC,aAAa,EAAE,EAAE,GAAG,CAAC,CAAA,yBACrB,6LAAC;4CAAyB,OAAO,SAAS,EAAE;sDAAG,SAAS,IAAI;2CAA/C,SAAS,EAAE;;;;;;;;;;;;;;;;;kCAK9B,6LAAC;;0CACC,6LAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAChE,6LAAC;gCACC,OAAO;gCACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;gCAC9C,WAAU;;kDAEV,6LAAC;wCAAO,OAAM;kDAAM;;;;;;oCACnB,CAAC,iBAAiB,EAAE,EAAE,GAAG,CAAC,CAAA,uBACzB,6LAAC;4CAAoB,OAAO;sDAAS;2CAAxB;;;;;;;;;;;;;;;;;kCAKnB,6LAAC;;0CACC,6LAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAChE,6LAAC;gCACC,OAAO;gCACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;gCAC5C,WAAU;;kDAEV,6LAAC;wCAAO,OAAM;kDAAM;;;;;;oCACnB,CAAC,gBAAgB,EAAE,EAAE,GAAG,CAAC,CAAA,qBACxB,6LAAC;4CAAkB,OAAO;sDAAO;2CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ7B;KA9HwB","debugId":null}},
    {"offset": {"line": 1791, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/leads/LeadsStats.tsx"],"sourcesContent":["'use client'\n\nimport { Users, Mail, Phone, Calendar } from 'lucide-react'\nimport { Lead } from '../../types/leads'\n\ninterface LeadsStatsProps {\n  leads: Lead[]\n}\n\nexport default function LeadsStats({ leads }: LeadsStatsProps) {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-6\">\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        <div className=\"flex items-center\">\n          <Users className=\"h-8 w-8 text-blue-600 mr-3\" />\n          <div>\n            <p className=\"text-2xl font-bold text-gray-900\">{leads.length}</p>\n            <p className=\"text-sm text-gray-600\">Total Leads</p>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        <div className=\"flex items-center\">\n          <Mail className=\"h-8 w-8 text-green-600 mr-3\" />\n          <div>\n            <p className=\"text-2xl font-bold text-gray-900\">\n              {leads.filter(lead => lead.status === 'emailed').length}\n            </p>\n            <p className=\"text-sm text-gray-600\">Emails Sent</p>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        <div className=\"flex items-center\">\n          <Phone className=\"h-8 w-8 text-orange-600 mr-3\" />\n          <div>\n            <p className=\"text-2xl font-bold text-gray-900\">\n              {leads.filter(lead => lead.status === 'called').length}\n            </p>\n            <p className=\"text-sm text-gray-600\">Calls Made</p>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        <div className=\"flex items-center\">\n          <Calendar className=\"h-8 w-8 text-purple-600 mr-3\" />\n          <div>\n            <p className=\"text-2xl font-bold text-gray-900\">\n              {leads.filter(lead => lead.status === 'booked').length}\n            </p>\n            <p className=\"text-sm text-gray-600\">Meetings Scheduled</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAFA;;;AASe,SAAS,WAAW,EAAE,KAAK,EAAmB;IAC3D,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,uMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;sCACjB,6LAAC;;8CACC,6LAAC;oCAAE,WAAU;8CAAoC,MAAM,MAAM;;;;;;8CAC7D,6LAAC;oCAAE,WAAU;8CAAwB;;;;;;;;;;;;;;;;;;;;;;;0BAK3C,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,qMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;sCAChB,6LAAC;;8CACC,6LAAC;oCAAE,WAAU;8CACV,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,MAAM,KAAK,WAAW,MAAM;;;;;;8CAEzD,6LAAC;oCAAE,WAAU;8CAAwB;;;;;;;;;;;;;;;;;;;;;;;0BAK3C,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,uMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;sCACjB,6LAAC;;8CACC,6LAAC;oCAAE,WAAU;8CACV,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,MAAM,KAAK,UAAU,MAAM;;;;;;8CAExD,6LAAC;oCAAE,WAAU;8CAAwB;;;;;;;;;;;;;;;;;;;;;;;0BAK3C,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,6MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC;;8CACC,6LAAC;oCAAE,WAAU;8CACV,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,MAAM,KAAK,UAAU,MAAM;;;;;;8CAExD,6LAAC;oCAAE,WAAU;8CAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjD;KAlDwB","debugId":null}},
    {"offset": {"line": 2013, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/leads/LeadsTable.tsx"],"sourcesContent":["'use client'\n\nimport { User, Calendar, MapPin, Building } from 'lucide-react'\nimport { Lead } from '../../types/leads'\nimport { DistrictContact, DISTRICT_STATUS_DISPLAY_MAP } from '../../types/districts'\nimport { STATUS_DISPLAY_MAP } from '../../types/leads'\n\ninterface LeadsTableProps {\n  leads?: Lead[]\n  districtContacts?: DistrictContact[]\n  selectedLeads: string[]\n  selectedLead: Lead | null\n  isAvalern: boolean\n  onSelectLead: (leadId: string) => void\n  onSelectAll: () => void\n  onLeadClick: (lead: Lead) => void\n  onDistrictContactClick?: (contact: DistrictContact) => void\n}\n\nexport default function LeadsTable({\n  leads,\n  districtContacts,\n  selectedLeads,\n  selectedLead,\n  isAvalern,\n  onSelectLead,\n  onSelectAll,\n  onLeadClick,\n  onDistrictContactClick\n}: LeadsTableProps) {\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">\n            Leads ({leads?.length || 0})\n          </h3>\n          <div className=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              checked={selectedLeads.length === (leads?.length || 0) && (leads?.length || 0) > 0}\n              onChange={onSelectAll}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <span className=\"text-sm text-gray-600\">Select All</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Select\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Lead\n              </th>\n              {!selectedLead && (\n                <>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Campaign\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Details\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Touchpoints\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Last Contact\n                  </th>\n                </>\n              )}\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {leads?.length === 0 ? (\n              <tr>\n                <td colSpan={selectedLead ? 2 : 7} className=\"px-6 py-12 text-center\">\n                  <div className=\"flex flex-col items-center\">\n                    <User className=\"h-12 w-12 text-gray-400 mb-4\" />\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No leads found</h3>\n                    <p className=\"text-gray-500 mb-4\">\n                      Get started by importing leads or creating a new campaign.\n                    </p>\n                    <button\n                      onClick={() => window.location.href = '/import'}\n                      className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                    >\n                      Import Leads\n                    </button>\n                  </div>\n                </td>\n              </tr>\n            ) : (\n              leads.map((lead) => (\n                <tr key={lead.id} className=\"hover:bg-gray-50 cursor-pointer\" onClick={() => onLeadClick(lead)}>\n                  <td className=\"px-6 py-4\" onClick={(e) => e.stopPropagation()}>\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedLeads.includes(lead.id)}\n                      onChange={() => onSelectLead(lead.id)}\n                      className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                    />\n                  </td>\n                <td className=\"px-6 py-4\">\n                  <div className=\"flex items-center\">\n                    <div className=\"h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center mr-3\">\n                      <User className=\"h-5 w-5 text-gray-500\" />\n                    </div>\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        {lead.first_name} {lead.last_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">{lead.email}</div>\n                    </div>\n                  </div>\n                </td>\n                {!selectedLead && (\n                  <>\n                    <td className=\"px-6 py-4\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                        lead.status === 'not_contacted' ? 'bg-gray-100 text-gray-800' :\n                        lead.status === 'actively_contacting' ? 'bg-blue-100 text-blue-800' :\n                        lead.status === 'engaged' ? 'bg-green-100 text-green-800' :\n                        lead.status === 'won' ? 'bg-emerald-100 text-emerald-800' :\n                        lead.status === 'not_interested' ? 'bg-red-100 text-red-800' :\n                        'bg-gray-100 text-gray-800'\n                      }`}>\n                        {STATUS_DISPLAY_MAP[lead.status] || lead.status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <div className=\"text-sm text-gray-900\">\n                        {lead.campaign?.name || 'No Campaign'}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <div className=\"text-sm text-gray-900\">\n                        {lead.city && lead.state ? `${lead.city}, ${lead.state}` : lead.city || lead.state || 'N/A'}\n                      </div>\n                      <div className=\"text-sm\">\n                        {lead.online_profile ? (\n                          <a \n                            href={lead.online_profile} \n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"text-blue-600 hover:text-blue-800 hover:underline\"\n                            onClick={(e) => e.stopPropagation()}\n                          >\n                            View Profile\n                          </a>\n                        ) : lead.linkedin_url ? (\n                          <a \n                            href={lead.linkedin_url} \n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"text-blue-600 hover:text-blue-800 hover:underline\"\n                            onClick={(e) => e.stopPropagation()}\n                          >\n                            LinkedIn\n                          </a>\n                        ) : (\n                          <span className=\"text-gray-500\">{lead.source || 'Unknown'}</span>\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <div className=\"flex flex-col space-y-1 text-sm\">\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                          {(lead.touchpoints_count ?? 0)} total\n                        </span>\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-orange-100 text-orange-800\">\n                          {(lead.scheduled_touchpoints_count ?? 0)} scheduled\n                        </span>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <div className=\"flex items-center text-sm text-gray-900\">\n                        <Calendar className=\"h-3 w-3 mr-1 text-gray-400\" />\n                        {lead.last_contacted_at ? new Date(lead.last_contacted_at).toLocaleDateString() : 'Never'}\n                      </div>\n                    </td>\n                  </>\n                )}\n              </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2490, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/leads/LeadDetailPanel.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { X, Plus } from 'lucide-react'\nimport { Lead, Campaign, Touchpoint, STATUS_DISPLAY_MAP } from '../../types/leads'\n\ninterface LeadDetailPanelProps {\n  selectedLead: Lead\n  editingLead: Lead\n  onEditingLeadChange: (lead: Lead) => void\n  onClose: () => void\n  onSave: () => void\n  saving: boolean\n  campaigns: Campaign[]\n  availableStatuses: string[]\n  touchpoints: Touchpoint[]\n  showNewTouchpointForm: boolean\n  onToggleTouchpointForm: () => void\n  newTouchpoint: Partial<Touchpoint>\n  onNewTouchpointChange: (touchpoint: Partial<Touchpoint>) => void\n  onAddTouchpoint: () => void\n}\n\nexport default function LeadDetailPanel({\n  selectedLead,\n  editingLead,\n  onEditingLeadChange,\n  onClose,\n  onSave,\n  saving,\n  campaigns,\n  availableStatuses,\n  touchpoints,\n  showNewTouchpointForm,\n  onToggleTouchpointForm,\n  newTouchpoint,\n  onNewTouchpointChange,\n  onAddTouchpoint\n}: LeadDetailPanelProps) {\n  const [touchpointTab, setTouchpointTab] = useState<'past' | 'scheduled'>('past')\n  \n  // Filter touchpoints based on tab selection\n  const pastTouchpoints = touchpoints.filter(tp => tp.completed_at)\n  const scheduledTouchpoints = touchpoints.filter(tp => tp.scheduled_at && !tp.completed_at)\n  const currentTouchpoints = touchpointTab === 'past' ? pastTouchpoints : scheduledTouchpoints\n\n  return (\n    <div className=\"bg-white border border-gray-200 rounded-lg shadow-sm p-6 h-fit\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900\">\n          {editingLead.first_name} {editingLead.last_name}\n        </h2>\n        <button\n          onClick={onClose}\n          className=\"text-gray-400 hover:text-gray-600\"\n        >\n          <X className=\"h-5 w-5\" />\n        </button>\n      </div>\n\n      <div className=\"space-y-6\">\n        {/* Contact Information */}\n        <div>\n          <h3 className=\"text-md font-medium text-gray-900 mb-3\">Contact Information</h3>\n          <div className=\"grid grid-cols-1 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">First Name</label>\n              <input\n                type=\"text\"\n                value={editingLead.first_name}\n                onChange={(e) => onEditingLeadChange({...editingLead, first_name: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Last Name</label>\n              <input\n                type=\"text\"\n                value={editingLead.last_name}\n                onChange={(e) => onEditingLeadChange({...editingLead, last_name: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n              <input\n                type=\"email\"\n                value={editingLead.email}\n                onChange={(e) => onEditingLeadChange({...editingLead, email: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Phone</label>\n              <input\n                type=\"tel\"\n                value={editingLead.phone || ''}\n                onChange={(e) => onEditingLeadChange({...editingLead, phone: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Status & Campaign */}\n        <div>\n          <h3 className=\"text-md font-medium text-gray-900 mb-3\">Status & Campaign</h3>\n          <div className=\"grid grid-cols-1 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n              <select\n                value={editingLead.status}\n                onChange={(e) => onEditingLeadChange({...editingLead, status: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                {availableStatuses.map(status => (\n                  <option key={status} value={status}>\n                    {STATUS_DISPLAY_MAP[status] || status}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Campaign</label>\n              <select\n                value={editingLead.campaign_id || ''}\n                onChange={(e) => onEditingLeadChange({...editingLead, campaign_id: e.target.value || undefined})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value=\"\">No Campaign</option>\n                {campaigns.map(campaign => (\n                  <option key={campaign.id} value={campaign.id}>\n                    {campaign.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {/* Location & Company */}\n        <div>\n          <h3 className=\"text-md font-medium text-gray-900 mb-3\">Location & Company</h3>\n          <div className=\"grid grid-cols-1 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">City</label>\n              <input\n                type=\"text\"\n                value={editingLead.city || ''}\n                onChange={(e) => onEditingLeadChange({...editingLead, city: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">State</label>\n              <input\n                type=\"text\"\n                value={editingLead.state || ''}\n                onChange={(e) => onEditingLeadChange({...editingLead, state: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Company</label>\n              <input\n                type=\"text\"\n                value={editingLead.company || ''}\n                onChange={(e) => onEditingLeadChange({...editingLead, company: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Source */}\n        <div>\n          <h3 className=\"text-md font-medium text-gray-900 mb-3\">Source</h3>\n          <select\n            value={editingLead.source || ''}\n            onChange={(e) => onEditingLeadChange({...editingLead, source: e.target.value})}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value=\"\">Select Source</option>\n            <option value=\"Zillow\">Zillow</option>\n            <option value=\"LinkedIn\">LinkedIn</option>\n            <option value=\"Realtor.com\">Realtor.com</option>\n            <option value=\"Redfin\">Redfin</option>\n            <option value=\"Trulia\">Trulia</option>\n            <option value=\"Other\">Other</option>\n          </select>\n        </div>\n\n        {/* URLs */}\n        <div>\n          <h3 className=\"text-md font-medium text-gray-900 mb-3\">URLs & Links</h3>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">LinkedIn URL</label>\n              <input\n                type=\"url\"\n                value={editingLead.linkedin_url || ''}\n                onChange={(e) => onEditingLeadChange({...editingLead, linkedin_url: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Website URL</label>\n              <input\n                type=\"url\"\n                value={editingLead.website_url || ''}\n                onChange={(e) => onEditingLeadChange({...editingLead, website_url: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Notes */}\n        <div>\n          <h3 className=\"text-md font-medium text-gray-900 mb-3\">Notes</h3>\n          <textarea\n            value={editingLead.notes || ''}\n            onChange={(e) => onEditingLeadChange({...editingLead, notes: e.target.value})}\n            rows={4}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            placeholder=\"Add notes about this lead...\"\n          />\n        </div>\n\n        {/* Touchpoints */}\n        <div>\n          <div className=\"flex items-center justify-between mb-3\">\n            <h3 className=\"text-md font-medium text-gray-900\">Touchpoints</h3>\n            <button\n              onClick={onToggleTouchpointForm}\n              className=\"flex items-center px-3 py-1 text-sm bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n            >\n              <Plus className=\"h-4 w-4 mr-1\" />\n              Add Touchpoint\n            </button>\n          </div>\n\n          {/* Touchpoint Tabs */}\n          <div className=\"border-b border-gray-200 mb-4\">\n            <nav className=\"-mb-px flex space-x-8\">\n              <button\n                onClick={() => setTouchpointTab('past')}\n                className={`py-2 px-1 border-b-2 font-medium text-sm ${\n                  touchpointTab === 'past'\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                Past ({pastTouchpoints.length})\n              </button>\n              <button\n                onClick={() => setTouchpointTab('scheduled')}\n                className={`py-2 px-1 border-b-2 font-medium text-sm ${\n                  touchpointTab === 'scheduled'\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                Scheduled ({scheduledTouchpoints.length})\n              </button>\n            </nav>\n          </div>\n\n          {/* New Touchpoint Form */}\n          {showNewTouchpointForm && (\n            <div className=\"bg-gray-50 rounded-lg p-4 mb-4\">\n              <h4 className=\"text-sm font-medium text-gray-900 mb-3\">New Touchpoint</h4>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Type</label>\n                  <select\n                    value={newTouchpoint.type || 'email'}\n                    onChange={(e) => onNewTouchpointChange({...newTouchpoint, type: e.target.value as Touchpoint['type']})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"email\">Email</option>\n                    <option value=\"call\">Phone Call</option>\n                    <option value=\"meeting\">Meeting</option>\n                    <option value=\"linkedin_message\">LinkedIn Message</option>\n                    <option value=\"note\">Note</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date</label>\n                  <input\n                    type=\"date\"\n                    value={newTouchpoint.completed_at ? newTouchpoint.completed_at.split('T')[0] : ''}\n                    onChange={(e) => onNewTouchpointChange({...newTouchpoint, completed_at: e.target.value ? e.target.value + 'T09:00:00' : ''})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Subject</label>\n                  <input\n                    type=\"text\"\n                    value={newTouchpoint.subject || ''}\n                    onChange={(e) => onNewTouchpointChange({...newTouchpoint, subject: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"Brief subject or title\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\n                  <textarea\n                    value={newTouchpoint.content || ''}\n                    onChange={(e) => onNewTouchpointChange({...newTouchpoint, content: e.target.value})}\n                    rows={3}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"Details about this touchpoint...\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Outcome</label>\n                  <input\n                    type=\"text\"\n                    value={newTouchpoint.outcome || ''}\n                    onChange={(e) => onNewTouchpointChange({...newTouchpoint, outcome: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"Result or outcome\"\n                  />\n                </div>\n                <div className=\"flex justify-end space-x-2\">\n                  <button\n                    onClick={onToggleTouchpointForm}\n                    className=\"px-3 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={onAddTouchpoint}\n                    disabled={saving}\n                    className=\"px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n                  >\n                    {saving ? 'Adding...' : 'Add Touchpoint'}\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Touchpoints List */}\n          <div className=\"space-y-3 max-h-60 overflow-y-auto\">\n            {currentTouchpoints.length === 0 ? (\n              <p className=\"text-sm text-gray-500 text-center py-4\">\n                No {touchpointTab} touchpoints yet\n              </p>\n            ) : (\n              currentTouchpoints.map((touchpoint) => (\n                <div key={touchpoint.id} className=\"bg-gray-50 rounded-lg p-3\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\n                        touchpoint.type === 'email' ? 'bg-blue-100 text-blue-800' :\n                        touchpoint.type === 'call' ? 'bg-green-100 text-green-800' :\n                        touchpoint.type === 'meeting' ? 'bg-purple-100 text-purple-800' :\n                        touchpoint.type === 'linkedin_message' ? 'bg-indigo-100 text-indigo-800' :\n                        'bg-gray-100 text-gray-800'\n                      }`}>\n                        {touchpoint.type.replace('_', ' ').toUpperCase()}\n                      </span>\n                      {touchpoint.subject && (\n                        <span className=\"text-sm font-medium text-gray-900\">{touchpoint.subject}</span>\n                      )}\n                      {touchpoint.outcome && touchpointTab === 'past' && (\n                        <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                          COMPLETED\n                        </span>\n                      )}\n                      {touchpointTab === 'scheduled' && (\n                        <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n                          SCHEDULED\n                        </span>\n                      )}\n                    </div>\n                    <span className=\"text-xs text-gray-500\">\n                      {touchpointTab === 'past' \n                        ? (touchpoint.completed_at ? new Date(touchpoint.completed_at).toLocaleDateString() : 'No date')\n                        : (touchpoint.scheduled_at ? new Date(touchpoint.scheduled_at).toLocaleDateString() : 'No date')\n                      }\n                    </span>\n                  </div>\n                  {touchpoint.content && (\n                    <p className=\"text-sm text-gray-700 mb-2\">{touchpoint.content}</p>\n                  )}\n                  {touchpoint.outcome && touchpointTab === 'past' && (\n                    <p className=\"text-sm text-gray-600\">\n                      <span className=\"font-medium\">Outcome:</span> {touchpoint.outcome}\n                    </p>\n                  )}\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Lead Information Summary */}\n        <div>\n          <h3 className=\"text-md font-medium text-gray-900 mb-3\">Lead Information</h3>\n          <div className=\"bg-gray-50 rounded-lg p-4\">\n            <div className=\"grid grid-cols-1 gap-4 text-sm\">\n              <div>\n                <span className=\"font-medium text-gray-700\">Status:</span>\n                <span className=\"ml-2 inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                  {STATUS_DISPLAY_MAP[selectedLead.status] || selectedLead.status}\n                </span>\n              </div>\n              <div>\n                <span className=\"font-medium text-gray-700\">Created:</span>\n                <span className=\"ml-2 text-gray-900\">{new Date(selectedLead.created_at).toLocaleDateString()}</span>\n              </div>\n              <div>\n                <span className=\"font-medium text-gray-700\">Last Contact:</span>\n                <span className=\"ml-2 text-gray-900\">\n                  {selectedLead.last_contacted_at ? new Date(selectedLead.last_contacted_at).toLocaleDateString() : 'Never'}\n                </span>\n              </div>\n              <div>\n                <span className=\"font-medium text-gray-700\">Total Touchpoints:</span>\n                <span className=\"ml-2 text-gray-900\">{touchpoints.length}</span>\n              </div>\n              <div>\n                <span className=\"font-medium text-gray-700\">Past Touchpoints:</span>\n                <span className=\"ml-2 text-gray-900\">{pastTouchpoints.length}</span>\n              </div>\n              <div>\n                <span className=\"font-medium text-gray-700\">Scheduled Touchpoints:</span>\n                <span className=\"ml-2 text-gray-900\">{scheduledTouchpoints.length}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Save Button */}\n        <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-gray-600 border border-gray-200 rounded-lg hover:bg-gray-50\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={onSave}\n            disabled={saving}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n          >\n            {saving ? 'Saving...' : 'Save Changes'}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3782, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/leads/Touchpoints.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Plus, RefreshCw, Calendar, ChevronLeft, ChevronRight } from 'lucide-react'\nimport { Touchpoint } from '../../types/leads'\n\ninterface TouchpointsProps {\n  touchpoints: Touchpoint[]\n  showNewTouchpointForm: boolean\n  onToggleForm: () => void\n  newTouchpoint: Partial<Touchpoint>\n  onNewTouchpointChange: (touchpoint: Partial<Touchpoint>) => void\n  onAddTouchpoint: () => void\n  saving: boolean\n  onSyncInstantly: () => void\n  syncing: boolean\n}\n\nexport default function Touchpoints({\n  touchpoints,\n  showNewTouchpointForm,\n  onToggleForm,\n  newTouchpoint,\n  onNewTouchpointChange,\n  onAddTouchpoint,\n  saving,\n  onSyncInstantly,\n  syncing\n}: TouchpointsProps) {\n  // Filter states\n  const [typeFilter, setTypeFilter] = useState('')\n  const [dateFromFilter, setDateFromFilter] = useState('')\n  const [dateToFilter, setDateToFilter] = useState('')\n  const [outcomeFilter, setOutcomeFilter] = useState('')\n  \n  // Pagination states\n  const [currentPage, setCurrentPage] = useState(1)\n  const [itemsPerPage] = useState(10)\n  \n  // Filtered and paginated data\n  const [filteredTouchpoints, setFilteredTouchpoints] = useState<Touchpoint[]>(touchpoints)\n  const [paginatedTouchpoints, setPaginatedTouchpoints] = useState<Touchpoint[]>([])\n  \n  // Apply filters whenever touchpoints or filters change\n  useEffect(() => {\n    let filtered = [...touchpoints]\n    \n    // Type filter\n    if (typeFilter) {\n      filtered = filtered.filter(tp => tp.type === typeFilter)\n    }\n    \n    // Date range filter\n    if (dateFromFilter) {\n      filtered = filtered.filter(tp => {\n        const tpDate = tp.completed_at || tp.scheduled_at\n        return tpDate && new Date(tpDate) >= new Date(dateFromFilter)\n      })\n    }\n    \n    if (dateToFilter) {\n      filtered = filtered.filter(tp => {\n        const tpDate = tp.completed_at || tp.scheduled_at\n        return tpDate && new Date(tpDate) <= new Date(dateToFilter + 'T23:59:59')\n      })\n    }\n    \n    // Outcome filter\n    if (outcomeFilter) {\n      if (outcomeFilter === 'completed') {\n        filtered = filtered.filter(tp => tp.outcome)\n      } else if (outcomeFilter === 'pending') {\n        filtered = filtered.filter(tp => !tp.outcome)\n      }\n    }\n    \n    setFilteredTouchpoints(filtered)\n    setCurrentPage(1) // Reset to first page when filters change\n  }, [touchpoints, typeFilter, dateFromFilter, dateToFilter, outcomeFilter])\n  \n  // Apply pagination whenever filtered data or page changes\n  useEffect(() => {\n    const startIndex = (currentPage - 1) * itemsPerPage\n    const endIndex = startIndex + itemsPerPage\n    setPaginatedTouchpoints(filteredTouchpoints.slice(startIndex, endIndex))\n  }, [filteredTouchpoints, currentPage, itemsPerPage])\n  \n  const totalPages = Math.ceil(filteredTouchpoints.length / itemsPerPage)\n  \n  const clearFilters = () => {\n    setTypeFilter('')\n    setDateFromFilter('')\n    setDateToFilter('')\n    setOutcomeFilter('')\n  }\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between mb-3\">\n        <h3 className=\"text-md font-medium text-gray-900\">\n          Touchpoints ({filteredTouchpoints.length} of {touchpoints.length})\n        </h3>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={onSyncInstantly}\n            disabled={syncing}\n            className=\"flex items-center px-3 py-1 text-sm text-white bg-purple-600 rounded-md hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <RefreshCw className={`h-4 w-4 mr-1 ${syncing ? 'animate-spin' : ''}`} />\n            {syncing ? 'Syncing...' : 'Sync Instantly'}\n          </button>\n          <button\n            onClick={onToggleForm}\n            className=\"flex items-center px-3 py-1 text-sm bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n          >\n            <Plus className=\"h-4 w-4 mr-1\" />\n            Add Touchpoint\n          </button>\n        </div>\n      </div>\n\n      {/* Filters Section */}\n      <div className=\"bg-gray-50 rounded-lg p-4 mb-4\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <h4 className=\"text-sm font-medium text-gray-900\">Filters</h4>\n          <button\n            onClick={clearFilters}\n            className=\"text-sm text-blue-600 hover:text-blue-800\"\n          >\n            Clear All\n          </button>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3\">\n          <div>\n            <label className=\"block text-xs font-medium text-gray-700 mb-1\">Type</label>\n            <select\n              value={typeFilter}\n              onChange={(e) => setTypeFilter(e.target.value)}\n              className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded-md focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"\">All Types</option>\n              <option value=\"email\">Email</option>\n              <option value=\"call\">Phone Call</option>\n              <option value=\"meeting\">Meeting</option>\n              <option value=\"linkedin_message\">LinkedIn Message</option>\n              <option value=\"note\">Note</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-xs font-medium text-gray-700 mb-1\">From Date</label>\n            <input\n              type=\"date\"\n              value={dateFromFilter}\n              onChange={(e) => setDateFromFilter(e.target.value)}\n              className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded-md focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-xs font-medium text-gray-700 mb-1\">To Date</label>\n            <input\n              type=\"date\"\n              value={dateToFilter}\n              onChange={(e) => setDateToFilter(e.target.value)}\n              className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded-md focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-xs font-medium text-gray-700 mb-1\">Status</label>\n            <select\n              value={outcomeFilter}\n              onChange={(e) => setOutcomeFilter(e.target.value)}\n              className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded-md focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"\">All Status</option>\n              <option value=\"completed\">Completed</option>\n              <option value=\"pending\">Pending</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* New Touchpoint Form */}\n      {showNewTouchpointForm && (\n        <div className=\"bg-gray-50 rounded-lg p-4 mb-4\">\n          <h4 className=\"text-sm font-medium text-gray-900 mb-3\">New Touchpoint</h4>\n          <div className=\"space-y-3\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Type</label>\n              <select\n                value={newTouchpoint.type || 'email'}\n                onChange={(e) => onNewTouchpointChange({...newTouchpoint, type: e.target.value as Touchpoint['type']})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value=\"email\">Email</option>\n                <option value=\"call\">Phone Call</option>\n                <option value=\"meeting\">Meeting</option>\n                <option value=\"linkedin_message\">LinkedIn Message</option>\n                <option value=\"note\">Note</option>\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date</label>\n              <input\n                type=\"date\"\n                value={newTouchpoint.completed_at ? newTouchpoint.completed_at.split('T')[0] : ''}\n                onChange={(e) => onNewTouchpointChange({...newTouchpoint, completed_at: e.target.value ? e.target.value + 'T09:00:00' : ''})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Subject</label>\n              <input\n                type=\"text\"\n                value={newTouchpoint.subject || ''}\n                onChange={(e) => onNewTouchpointChange({...newTouchpoint, subject: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Brief subject or title\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\n              <textarea\n                value={newTouchpoint.content || ''}\n                onChange={(e) => onNewTouchpointChange({...newTouchpoint, content: e.target.value})}\n                rows={3}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Details about this touchpoint...\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Outcome</label>\n              <input\n                type=\"text\"\n                value={newTouchpoint.outcome || ''}\n                onChange={(e) => onNewTouchpointChange({...newTouchpoint, outcome: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Result or outcome\"\n              />\n            </div>\n            <div className=\"flex justify-end space-x-2\">\n              <button\n                onClick={onToggleForm}\n                className=\"px-3 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={onAddTouchpoint}\n                disabled={saving}\n                className=\"px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n              >\n                {saving ? 'Adding...' : 'Add Touchpoint'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Touchpoints List */}\n      <div className=\"space-y-3\">\n        {filteredTouchpoints.length === 0 ? (\n          <p className=\"text-sm text-gray-500 text-center py-4\">\n            {touchpoints.length === 0 ? 'No touchpoints yet' : 'No touchpoints match the current filters'}\n          </p>\n        ) : (\n          <>\n            {paginatedTouchpoints.map((touchpoint) => (\n              <div key={touchpoint.id} className=\"bg-gray-50 rounded-lg p-3\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"flex items-center space-x-2\">\n                    <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\n                      touchpoint.type === 'email' ? 'bg-blue-100 text-blue-800' :\n                      touchpoint.type === 'call' ? 'bg-green-100 text-green-800' :\n                      touchpoint.type === 'meeting' ? 'bg-purple-100 text-purple-800' :\n                      touchpoint.type === 'linkedin_message' ? 'bg-indigo-100 text-indigo-800' :\n                      'bg-gray-100 text-gray-800'\n                    }`}>\n                      {touchpoint.type.replace('_', ' ').toUpperCase()}\n                    </span>\n                    {touchpoint.subject && (\n                      <span className=\"text-sm font-medium text-gray-900\">{touchpoint.subject}</span>\n                    )}\n                    {touchpoint.outcome && (\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                        COMPLETED\n                      </span>\n                    )}\n                  </div>\n                  <span className=\"text-xs text-gray-500\">\n                    {touchpoint.completed_at ? new Date(touchpoint.completed_at).toLocaleDateString() : \n                     touchpoint.scheduled_at ? new Date(touchpoint.scheduled_at).toLocaleDateString() : 'No date'}\n                  </span>\n                </div>\n                {touchpoint.content && (\n                  <p className=\"text-sm text-gray-700 mb-2\">{touchpoint.content}</p>\n                )}\n                {touchpoint.outcome && (\n                  <p className=\"text-sm text-gray-600\">\n                    <span className=\"font-medium\">Outcome:</span> {touchpoint.outcome}\n                  </p>\n                )}\n              </div>\n            ))}\n            \n            {/* Pagination Controls */}\n            {totalPages > 1 && (\n              <div className=\"flex items-center justify-between pt-4 border-t border-gray-200\">\n                <div className=\"text-sm text-gray-600\">\n                  Showing {((currentPage - 1) * itemsPerPage) + 1} to {Math.min(currentPage * itemsPerPage, filteredTouchpoints.length)} of {filteredTouchpoints.length} touchpoints\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <button\n                    onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                    disabled={currentPage === 1}\n                    className=\"flex items-center px-3 py-1 text-sm border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    <ChevronLeft className=\"h-4 w-4 mr-1\" />\n                    Previous\n                  </button>\n                  <span className=\"text-sm text-gray-600\">\n                    Page {currentPage} of {totalPages}\n                  </span>\n                  <button\n                    onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n                    disabled={currentPage === totalPages}\n                    className=\"flex items-center px-3 py-1 text-sm border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    Next\n                    <ChevronRight className=\"h-4 w-4 ml-1\" />\n                  </button>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4625, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/leads/index.ts"],"sourcesContent":["export { default as LeadsHeader } from './LeadsHeader'\nexport { default as SyncResults } from './SyncResults'\nexport { default as LeadsFilters } from './LeadsFilters'\nexport { default as LeadsStats } from './LeadsStats'\nexport { default as LeadsTable } from './LeadsTable'\nexport { default as LeadDetailPanel } from './LeadDetailPanel'\nexport { default as Touchpoints } from './Touchpoints' "],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 4714, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/app/leads/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport DashboardLayout from '../../components/layout/DashboardLayout'\nimport { useCompany } from '../../contexts/CompanyContext'\nimport { STATUS_DISPLAY_MAP } from '../../types/leads'\nimport { useLeads } from '../../hooks/useLeads'\nimport { exportToCSV } from '../../lib/csv-utils'\n\n// Components\nimport {\n  LeadsHeader,\n  SyncResults,\n  LeadsFilters,\n  LeadsTable,\n  LeadDetailPanel\n} from '../../components/leads'\n\nexport default function LeadsPage() {\n  const { selectedCompany } = useCompany()\n  const [showFilters, setShowFilters] = useState(true)\n  \n  const {\n    // Data\n    leads,\n    allLeads,\n    filteredLeads,\n    campaigns,\n    touchpoints,\n    loading,\n    syncing,\n    syncResults,\n    saving,\n    \n    // Filter states\n    searchTerm,\n    selectedStage,\n    selectedCampaign,\n    selectedSource,\n    selectedCity,\n    \n    // Selection states\n    selectedLeads,\n    selectedLead,\n    editingLead,\n    \n    // Touchpoint states\n    showNewTouchpointForm,\n    newTouchpoint,\n    \n    // Pagination states\n    currentPage,\n    itemsPerPage,\n    totalPages,\n    totalFilteredCount,\n    startIndex,\n    endIndex,\n    \n    // Computed values\n    uniqueSources,\n    uniqueCities,\n    availableStatuses,\n    totalCompanyLeads,\n    \n    // Handlers\n    setSearchTerm,\n    setSelectedStage,\n    setSelectedCampaign,\n    setSelectedSource,\n    setSelectedCity,\n    handleSelectLead,\n    handleSelectAll,\n    handleSelectNumber,\n    handlePageChange,\n    handleItemsPerPageChange,\n    handleOpenLeadPanel,\n    handleCloseLeadPanel,\n    setEditingLead,\n    handleUpdateLead,\n    setShowNewTouchpointForm,\n    setNewTouchpoint,\n    handleAddTouchpoint,\n    handleSyncInstantly,\n    setSyncResults\n  } = useLeads(selectedCompany)\n\n  const handleImportLeads = () => {\n    window.location.href = '/import'\n  }\n\n  const handleExportLeads = () => {\n    if (selectedLeads.length === 0) return\n    \n    // Get the actual lead objects for the selected lead IDs\n    const selectedLeadObjects = allLeads.filter(lead => selectedLeads.includes(lead.id))\n    \n    // Generate filename with timestamp\n    const timestamp = new Date().toISOString().split('T')[0]\n    const filename = `selected-leads-${timestamp}`\n    \n    // Convert to database Lead type for export\n    const leadsForExport = selectedLeadObjects.map(lead => ({\n      ...lead,\n      source: lead.source || 'Other', // Ensure source is not undefined\n      updated_at: lead.created_at // Use created_at as fallback for updated_at\n    }))\n    \n    exportToCSV(leadsForExport, filename)\n  }\n\n  const handleToggleFilters = () => {\n    setShowFilters(!showFilters)\n  }\n\n  const handleToggleTouchpointForm = () => {\n    setShowNewTouchpointForm(!showNewTouchpointForm)\n  }\n\n  if (loading) {\n    return (\n      <DashboardLayout>\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n        </div>\n      </DashboardLayout>\n    )\n  }\n\n  return (\n    <DashboardLayout>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <LeadsHeader\n          onImportLeads={handleImportLeads}\n          onExportLeads={handleExportLeads}\n          selectedCount={selectedLeads.length}\n          totalCompanyLeads={totalCompanyLeads}\n          selectedCompany={selectedCompany}\n        />\n\n        {/* Sync Results */}\n        <SyncResults\n          syncResults={syncResults}\n          onDismiss={() => setSyncResults(null)}\n        />\n\n        <div className=\"flex gap-6\">\n          {/* Main Content Area */}\n          <div className={`transition-all duration-300 ${selectedLead ? 'w-1/2' : 'w-full'}`}>\n            {/* Search and Filters */}\n            <LeadsFilters\n              searchTerm={searchTerm}\n              onSearchChange={setSearchTerm}\n              showFilters={showFilters}\n              selectedStage={selectedStage}\n              onStageChange={setSelectedStage}\n              selectedCampaign={selectedCampaign}\n              onCampaignChange={setSelectedCampaign}\n              selectedSource={selectedSource}\n              onSourceChange={setSelectedSource}\n              selectedCity={selectedCity}\n              onCityChange={setSelectedCity}\n              availableStatuses={availableStatuses}\n              campaigns={campaigns}\n              uniqueSources={uniqueSources}\n              uniqueCities={uniqueCities}\n              statusDisplayMap={STATUS_DISPLAY_MAP}\n              selectedCount={selectedLeads.length}\n              totalCount={totalFilteredCount}\n              onSelectNumber={handleSelectNumber}\n            />\n\n            {/* Leads Table */}\n            <LeadsTable\n              leads={leads}\n              selectedLeads={selectedLeads}\n              selectedLead={selectedLead}\n              onSelectLead={handleSelectLead}\n              onSelectAll={handleSelectAll}\n              onLeadClick={handleOpenLeadPanel}\n            />\n\n            {/* Pagination */}\n            {totalPages > 1 && (\n              <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 mt-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <span className=\"text-sm text-gray-700\">\n                      Showing {startIndex}-{endIndex} of {totalFilteredCount} leads\n                      <span className=\"text-gray-500 ml-2\">(Total: {totalCompanyLeads} leads for {selectedCompany})</span>\n                    </span>\n                    <select\n                      value={itemsPerPage}\n                      onChange={(e) => handleItemsPerPageChange(Number(e.target.value))}\n                      className=\"px-3 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    >\n                      <option value={10}>10 per page</option>\n                      <option value={20}>20 per page</option>\n                      <option value={50}>50 per page</option>\n                      <option value={100}>100 per page</option>\n                    </select>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={() => handlePageChange(currentPage - 1)}\n                      disabled={currentPage === 1}\n                      className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      Previous\n                    </button>\n                    \n                    <div className=\"flex items-center space-x-1\">\n                      {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                        const pageNum = currentPage <= 3 ? i + 1 : currentPage - 2 + i\n                        if (pageNum > totalPages) return null\n                        return (\n                          <button\n                            key={pageNum}\n                            onClick={() => handlePageChange(pageNum)}\n                            className={`px-3 py-1 text-sm rounded ${\n                              pageNum === currentPage\n                                ? 'bg-blue-600 text-white'\n                                : 'border border-gray-300 hover:bg-gray-50'\n                            }`}\n                          >\n                            {pageNum}\n                          </button>\n                        )\n                      })}\n                    </div>\n                    \n                    <button\n                      onClick={() => handlePageChange(currentPage + 1)}\n                      disabled={currentPage === totalPages}\n                      className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      Next\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Side Panel */}\n          {selectedLead && editingLead && (\n            <LeadDetailPanel\n              selectedLead={selectedLead}\n              editingLead={editingLead}\n              onEditingLeadChange={setEditingLead}\n              onClose={handleCloseLeadPanel}\n              onSave={handleUpdateLead}\n              saving={saving}\n              campaigns={campaigns}\n              availableStatuses={availableStatuses}\n              touchpoints={touchpoints}\n              showNewTouchpointForm={showNewTouchpointForm}\n              onToggleTouchpointForm={handleToggleTouchpointForm}\n              newTouchpoint={newTouchpoint}\n              onNewTouchpointChange={setNewTouchpoint}\n              onAddTouchpoint={handleAddTouchpoint}\n            />\n          )}\n        </div>\n      </div>\n    </DashboardLayout>\n  )\n} "],"names":[],"mappings":"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","debugId":null}}]
}