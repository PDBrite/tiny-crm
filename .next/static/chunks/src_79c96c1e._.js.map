{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/layout/Sidebar.tsx"],"sourcesContent":["'use client'\n\nimport Link from 'next/link'\nimport { usePathname } from 'next/navigation'\nimport { useCompany } from '@/contexts/CompanyContext'\nimport { \n  LayoutDashboard, \n  Users, \n  Target, \n  Upload, \n  Settings,\n  Building2,\n  Calendar,\n  School,\n  MessageSquare\n} from 'lucide-react'\n\nconst baseNavigation = [\n  { name: 'Dashboard', href: '/', icon: LayoutDashboard },\n  { name: 'Outreach', href: '/outreach', icon: Calendar },\n  { name: 'Campaigns', href: '/campaigns', icon: Target },\n  { name: 'Import', href: '/import', icon: Upload },\n  { name: 'Settings', href: '/settings', icon: Settings },\n]\n\nconst craftyCodeNavigation = [\n  { name: 'Dashboard', href: '/', icon: LayoutDashboard },\n  { name: 'Leads', href: '/leads', icon: Users },\n  { name: 'Outreach', href: '/outreach', icon: MessageSquare },\n  { name: 'Campaigns', href: '/campaigns', icon: Target },\n  { name: 'Import', href: '/import', icon: Upload },\n  { name: 'Settings', href: '/settings', icon: Settings },\n]\n\nconst avalernNav = [\n  { name: 'Dashboard', href: '/', icon: LayoutDashboard },\n  { name: 'Districts', href: '/districts', icon: School },\n  { name: 'District Contacts', href: '/leads', icon: Users },\n  { name: 'Outreach', href: '/outreach', icon: MessageSquare },\n  { name: 'Campaigns', href: '/campaigns', icon: Target },\n  { name: 'Import', href: '/import', icon: Upload },\n  { name: 'Settings', href: '/settings', icon: Settings }\n]\n\nconst companies = [\n  { name: 'CraftyCode', color: 'bg-blue-500' },\n  { name: 'Avalern', color: 'bg-purple-500' }\n]\n\nexport default function Sidebar() {\n  const pathname = usePathname()\n  const { selectedCompany, setSelectedCompany } = useCompany()\n\n  return (\n    <div className=\"flex h-screen w-64 flex-col bg-white shadow-lg\">\n      {/* Logo */}\n      <div className=\"flex h-16 items-center px-6 border-b border-gray-200\">\n        <Building2 className=\"h-8 w-8 text-blue-600\" />\n        <span className=\"ml-3 text-xl font-bold text-gray-900\">Lead Manager</span>\n      </div>\n\n      {/* Company Selector - Moved to top */}\n      <div className=\"border-b border-gray-200 p-4\">\n        <div className=\"text-xs font-medium text-gray-500 uppercase tracking-wider mb-3\">\n          Active Companies\n        </div>\n        <div className=\"space-y-2\">\n          {companies.map((company) => (\n            <button\n              key={company.name}\n              onClick={() => setSelectedCompany(company.name)}\n              className={`\n                flex items-center w-full px-3 py-2 text-sm font-medium rounded-lg transition-colors\n                ${selectedCompany === company.name\n                  ? 'bg-gray-100 text-gray-900 border-l-4 border-blue-500'\n                  : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'\n                }\n              `}\n            >\n              <div className={`w-3 h-3 ${company.color} rounded-full mr-3`}></div>\n              <span>{company.name}</span>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Navigation */}\n      <nav className=\"flex-1 px-4 py-6 space-y-2\">\n        {selectedCompany === 'CraftyCode' && craftyCodeNavigation.map((item) => {\n          const isActive = pathname === item.href\n          return (\n            <Link\n              key={item.name}\n              href={item.href}\n              className={`\n                flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors\n                ${isActive \n                  ? 'bg-blue-50 text-blue-700 border-r-2 border-blue-700' \n                  : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                }\n              `}\n            >\n              <item.icon className={`mr-3 h-5 w-5 ${isActive ? 'text-blue-700' : 'text-gray-400'}`} />\n              {item.name}\n            </Link>\n          )\n        })}\n        {selectedCompany === 'Avalern' && avalernNav.map((item) => {\n          const isActive = pathname === item.href\n          return (\n            <Link\n              key={item.name}\n              href={item.href}\n              className={`\n                flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors\n                ${isActive \n                  ? 'bg-blue-50 text-blue-700 border-r-2 border-blue-700' \n                  : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                }\n              `}\n            >\n              <item.icon className={`mr-3 h-5 w-5 ${isActive ? 'text-blue-700' : 'text-gray-400'}`} />\n              {item.name}\n            </Link>\n          )\n        })}\n      </nav>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/components/layout/DashboardLayout.tsx"],"sourcesContent":["'use client'\n\nimport Sidebar from './Sidebar'\n\ninterface DashboardLayoutProps {\n  children: React.ReactNode\n}\n\nexport default function DashboardLayout({ children }: DashboardLayoutProps) {\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      <Sidebar />\n      <main className=\"flex-1 overflow-y-auto\">\n        <div className=\"p-8\">\n          {children}\n        </div>\n      </main>\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAQe,SAAS,gBAAgB,EAAE,QAAQ,EAAwB;IACxE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,0IAAA,CAAA,UAAO;;;;;0BACR,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;;;;;;;AAKX;KAXwB","debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\nimport { Database } from '@/types/database'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n\nexport const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey)\n\n// Client-side Supabase client\nexport function createClientComponentClient() {\n  return createClient<Database>(supabaseUrl, supabaseAnonKey)\n} "],"names":[],"mappings":";;;;AAGoB;AAHpB;;AAGA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAY,aAAa;AAGrD,SAAS;IACd,OAAO,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAY,aAAa;AAC7C","debugId":null}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":["file:///Users/jdog/projects/lead-manager/src/app/campaigns/%5Bid%5D/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { useParams, useRouter } from 'next/navigation'\nimport DashboardLayout from '@/components/layout/DashboardLayout'\nimport { useCompany } from '@/contexts/CompanyContext'\nimport { supabase } from '@/lib/supabase'\nimport {\n  Target,\n  Calendar,\n  Users,\n  Mail,\n  Phone,\n  TrendingUp,\n  Edit2,\n  ArrowLeft,\n  CheckCircle,\n  Plus,\n  Minus,\n  User,\n  X,\n  Trash2,\n  ChevronLeft,\n  ChevronRight\n} from 'lucide-react'\n\ninterface Campaign {\n  id: string\n  name: string\n  company: string\n  status?: string\n  start_date?: string\n  end_date?: string\n  created_at: string\n  outreach_sequence_id?: string\n  outreach_sequence?: {\n    id: string\n    name: string\n    description?: string\n  }\n  leadCount: number\n  emailsSent: number\n  callsMade: number\n  appointmentsBooked: number\n  sales: number\n  conversionRate: number\n  launch_date: string\n  description?: string\n  instantly_campaign_id?: string\n}\n\ninterface OutreachSequence {\n  id: string\n  name: string\n  description?: string\n  company: string\n}\n\nexport default function CampaignDetailPage() {\n  const params = useParams()\n  const router = useRouter()\n  const { selectedCompany } = useCompany()\n  const campaignId = params.id as string\n\n  const [campaign, setCampaign] = useState<Campaign | null>(null)\n  const [outreachSequences, setOutreachSequences] = useState<OutreachSequence[]>([])\n  const [activeTab, setActiveTab] = useState<'overview' | 'leads' | 'touchpoints'>('overview')\n  const [loading, setLoading] = useState(true)\n  const [updating, setUpdating] = useState(false)\n  const [isEditing, setIsEditing] = useState(false)\n  \n  // Lead management\n  const [campaignLeads, setCampaignLeads] = useState<any[]>([])\n  const [loadingLeads, setLoadingLeads] = useState(false)\n  const [selectedLeadForEdit, setSelectedLeadForEdit] = useState<any | null>(null)\n  const [editingLeadData, setEditingLeadData] = useState<any | null>(null)\n  const [updatingLead, setUpdatingLead] = useState(false)\n  const [showDeleteModal, setShowDeleteModal] = useState(false)\n  const [deleting, setDeleting] = useState(false)\n  \n  // Touchpoints\n  const [campaignTouchpoints, setCampaignTouchpoints] = useState<any[]>([])\n  const [loadingTouchpoints, setLoadingTouchpoints] = useState(false)\n  \n  // Touchpoints filters and pagination\n  const [touchpointTypeFilter, setTouchpointTypeFilter] = useState('')\n  const [touchpointDateFromFilter, setTouchpointDateFromFilter] = useState('')\n  const [touchpointDateToFilter, setTouchpointDateToFilter] = useState('')\n  const [touchpointOutcomeFilter, setTouchpointOutcomeFilter] = useState('')\n  const [touchpointCurrentPage, setTouchpointCurrentPage] = useState(1)\n  const [touchpointItemsPerPage] = useState(10)\n  const [filteredCampaignTouchpoints, setFilteredCampaignTouchpoints] = useState<any[]>([])\n  \n  // Sequence steps\n  const [sequenceSteps, setSequenceSteps] = useState<any[]>([])\n  const [loadingSequenceSteps, setLoadingSequenceSteps] = useState(false)\n\n  // Edit form data\n  const [editFormData, setEditFormData] = useState({\n    name: '',\n    company: selectedCompany,\n    start_date: '',\n    end_date: '',\n    description: '',\n    instantly_campaign_id: ''\n  })\n\n  useEffect(() => {\n    if (campaignId) {\n      fetchCampaign()\n      fetchOutreachSequences()\n      fetchCampaignLeads()\n      fetchCampaignTouchpoints()\n    }\n  }, [campaignId, selectedCompany])\n\n  const fetchSequenceSteps = async (sequenceId: string) => {\n    if (!sequenceId) return\n    \n    setLoadingSequenceSteps(true)\n    try {\n      const { data, error } = await supabase\n        .from('outreach_steps')\n        .select('*')\n        .eq('sequence_id', sequenceId)\n        .order('step_order', { ascending: true })\n\n      if (error) {\n        console.error('Error fetching sequence steps:', error)\n      } else {\n        setSequenceSteps(data || [])\n      }\n    } catch (error) {\n      console.error('Error fetching sequence steps:', error)\n    } finally {\n      setLoadingSequenceSteps(false)\n    }\n  }\n\n  const fetchCampaign = async () => {\n    try {\n      setLoading(true)\n      \n      const { data, error } = await supabase\n        .from('campaigns')\n        .select(`\n          id, name, company, start_date, end_date, created_at, outreach_sequence_id, description, instantly_campaign_id,\n          leads(id, status, touchpoints(type, completed_at)),\n          outreach_sequence:outreach_sequences(id, name, description)\n        `)\n        .eq('id', campaignId)\n        .single()\n\n      if (error) {\n        console.error('Error fetching campaign:', error)\n        return\n      }\n\n      if (data) {\n        const leadCount = data.leads?.length || 0\n        const allTouchpoints = data.leads?.flatMap((lead: any) => lead.touchpoints || []) || []\n        const emailsSent = allTouchpoints.filter((tp: any) => tp.type === 'email' && tp.completed_at).length\n        const callsMade = allTouchpoints.filter((tp: any) => tp.type === 'call' && tp.completed_at).length\n        const appointmentsBooked = data.leads?.filter((lead: any) => lead.status === 'booked').length || 0\n        const sales = data.leads?.filter((lead: any) => lead.status === 'won').length || 0\n        const conversionRate = leadCount > 0 ? Number(((sales / leadCount) * 100).toFixed(1)) : 0\n\n        const enrichedCampaign = {\n          ...data,\n          leadCount,\n          emailsSent,\n          callsMade,\n          appointmentsBooked,\n          sales,\n          conversionRate,\n          launch_date: data.start_date || data.created_at,\n          status: leadCount > 0 ? 'active' : 'queued',\n          outreach_sequence: Array.isArray(data.outreach_sequence) ? data.outreach_sequence[0] : data.outreach_sequence\n        } as Campaign\n\n        setCampaign(enrichedCampaign)\n        setEditFormData({\n          name: data.name,\n          company: data.company,\n          start_date: data.start_date || data.created_at.split('T')[0],\n          end_date: data.end_date || new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n          description: data.description || '',\n          instantly_campaign_id: data.instantly_campaign_id || ''\n        })\n        \n        // Fetch sequence steps if there's an outreach sequence\n        if (data.outreach_sequence_id) {\n          fetchSequenceSteps(data.outreach_sequence_id)\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching campaign:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const fetchOutreachSequences = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('outreach_sequences')\n        .select('id, name, description, company')\n        .eq('company', selectedCompany)\n\n      if (error) {\n        console.error('Error fetching outreach sequences:', error)\n        return\n      }\n\n      setOutreachSequences(data || [])\n    } catch (error) {\n      console.error('Error fetching outreach sequences:', error)\n    }\n  }\n\n  const fetchCampaignLeads = async () => {\n    setLoadingLeads(true)\n    try {\n      // First, try to fetch leads with contact attempts\n      let { data: currentLeads, error: currentError } = await supabase\n        .from('leads')\n        .select(`\n          id, first_name, last_name, email, status, city, state, company, \n          phone, linkedin_url, website_url, online_profile, source\n        `)\n        .eq('campaign_id', campaignId)\n\n      if (currentError) {\n        console.error('Error fetching campaign leads:', currentError)\n        return\n      }\n\n      // Try to fetch contact attempts separately to avoid relation errors\n      const leadIds = currentLeads?.map(lead => lead.id) || []\n      let contactAttemptsData: any[] = []\n      \n      if (leadIds.length > 0) {\n        const { data: attempts, error: attemptsError } = await supabase\n          .from('contact_attempts')\n          .select('lead_id, type, completed_at, notes')\n          .in('lead_id', leadIds)\n\n        if (attemptsError) {\n          console.warn('Contact attempts table not found or accessible, using default values:', attemptsError)\n        } else {\n          contactAttemptsData = attempts || []\n        }\n      }\n\n      // Process leads to add contact attempt counts and last contact date\n      const processedLeads = (currentLeads || []).map(lead => {\n        const leadAttempts = contactAttemptsData.filter(attempt => attempt.lead_id === lead.id)\n        const lastAttempt = leadAttempts.length > 0 \n          ? leadAttempts.sort((a: any, b: any) => new Date(b.completed_at).getTime() - new Date(a.completed_at).getTime())[0]\n          : null\n\n        return {\n          ...lead,\n          contact_attempts_count: leadAttempts.length,\n          last_contacted_at: lastAttempt?.completed_at || null\n        }\n      })\n\n      setCampaignLeads(processedLeads)\n    } catch (error) {\n      console.error('Error fetching leads:', error)\n    } finally {\n      setLoadingLeads(false)\n    }\n  }\n\n  const fetchCampaignTouchpoints = async () => {\n    setLoadingTouchpoints(true)\n    try {\n      const { data: touchpoints, error } = await supabase\n        .from('touchpoints')\n        .select(`\n          *,\n          lead:leads!inner(\n            id,\n            first_name,\n            last_name,\n            email,\n            campaign_id\n          )\n        `)\n        .eq('lead.campaign_id', campaignId)\n        .order('scheduled_at', { ascending: true })\n\n      if (error) {\n        console.error('Error fetching campaign touchpoints:', error)\n      } else {\n        setCampaignTouchpoints(touchpoints || [])\n      }\n    } catch (error) {\n      console.error('Error fetching campaign touchpoints:', error)\n    } finally {\n      setLoadingTouchpoints(false)\n    }\n  }\n\n  const handleUpdateCampaign = async () => {\n    if (!campaign || !editFormData.name || !editFormData.end_date) {\n      alert('Please fill in all required fields')\n      return\n    }\n\n    setUpdating(true)\n    try {\n      const { error } = await supabase\n        .from('campaigns')\n        .update({\n          name: editFormData.name,\n          company: editFormData.company,\n          description: editFormData.description,\n          start_date: editFormData.start_date,\n          end_date: editFormData.end_date,\n          instantly_campaign_id: editFormData.instantly_campaign_id\n        })\n        .eq('id', campaign.id)\n\n      if (error) {\n        console.error('Error updating campaign:', error)\n        alert('Failed to update campaign')\n        return\n      }\n\n      alert('Campaign updated successfully!')\n      setIsEditing(false)\n      fetchCampaign() // Refresh campaign data\n    } catch (error) {\n      console.error('Error updating campaign:', error)\n      alert('Failed to update campaign')\n    } finally {\n      setUpdating(false)\n    }\n  }\n\n  const handleRemoveLeadFromCampaign = async (leadId: string) => {\n    try {\n      const { error } = await supabase\n        .from('leads')\n        .update({ campaign_id: null })\n        .eq('id', leadId)\n\n      if (error) {\n        console.error('Error removing lead from campaign:', error)\n        alert('Failed to remove lead from campaign')\n        return\n      }\n\n      fetchCampaignLeads()\n      fetchCampaign() // Refresh campaign stats\n    } catch (error) {\n      console.error('Error removing lead from campaign:', error)\n      alert('Failed to remove lead from campaign')\n    }\n  }\n\n  const handleOpenLeadEditPanel = (lead: any) => {\n    setSelectedLeadForEdit(lead)\n    setEditingLeadData({ ...lead })\n  }\n\n  const handleCloseLeadEditPanel = () => {\n    setSelectedLeadForEdit(null)\n    setEditingLeadData(null)\n  }\n\n  const handleUpdateLeadInCampaign = async () => {\n    if (!editingLeadData || !selectedLeadForEdit) return\n\n    setUpdatingLead(true)\n    try {\n      const { error } = await supabase\n        .from('leads')\n        .update({\n          first_name: editingLeadData.first_name,\n          last_name: editingLeadData.last_name,\n          email: editingLeadData.email,\n          phone: editingLeadData.phone,\n          city: editingLeadData.city,\n          state: editingLeadData.state,\n          company: editingLeadData.company,\n          status: editingLeadData.status,\n          source: editingLeadData.source,\n          linkedin_url: editingLeadData.linkedin_url,\n          website_url: editingLeadData.website_url\n        })\n        .eq('id', selectedLeadForEdit.id)\n\n      if (error) {\n        console.error('Error updating lead:', error)\n        alert('Failed to update lead')\n        return\n      }\n\n      alert('Lead updated successfully!')\n      handleCloseLeadEditPanel()\n      fetchCampaignLeads() // Refresh leads\n    } catch (error) {\n      console.error('Error updating lead:', error)\n      alert('Failed to update lead')\n    } finally {\n      setUpdatingLead(false)\n    }\n  }\n\n  const handleDeleteCampaign = async () => {\n    if (!campaign) return\n\n    setDeleting(true)\n    try {\n      // First, remove campaign assignment from all leads\n      const { error: leadsError } = await supabase\n        .from('leads')\n        .update({ campaign_id: null })\n        .eq('campaign_id', campaign.id)\n\n      if (leadsError) {\n        console.error('Error updating leads:', leadsError)\n        alert('Failed to update leads before deleting campaign')\n        return\n      }\n\n      // Then delete the campaign\n      const { error: campaignError } = await supabase\n        .from('campaigns')\n        .delete()\n        .eq('id', campaign.id)\n\n      if (campaignError) {\n        console.error('Error deleting campaign:', campaignError)\n        alert('Failed to delete campaign')\n        return\n      }\n\n      alert('Campaign deleted successfully!')\n      // Navigate back to campaigns page\n      window.location.href = '/campaigns'\n    } catch (error) {\n      console.error('Error deleting campaign:', error)\n      alert('Failed to delete campaign')\n    } finally {\n      setDeleting(false)\n      setShowDeleteModal(false)\n    }\n  }\n\n  const getStatusColor = (status: string) => {\n    const colors = {\n      'active': 'bg-green-100 text-green-800',\n      'queued': 'bg-yellow-100 text-yellow-800',\n      'completed': 'bg-gray-100 text-gray-800'\n    }\n    return colors[status as keyof typeof colors] || colors['queued']\n  }\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'active':\n        return <Target className=\"h-4 w-4\" />\n      case 'queued':\n        return <Calendar className=\"h-4 w-4\" />\n      case 'completed':\n        return <CheckCircle className=\"h-4 w-4\" />\n      default:\n        return <Target className=\"h-4 w-4\" />\n    }\n  }\n\n  if (loading) {\n    return (\n      <DashboardLayout>\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n        </div>\n      </DashboardLayout>\n    )\n  }\n\n  if (!campaign) {\n    return (\n      <DashboardLayout>\n        <div className=\"text-center py-12\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Campaign not found</h3>\n          <button\n            onClick={() => router.push('/campaigns')}\n            className=\"text-blue-600 hover:text-blue-800\"\n          >\n            ← Back to Campaigns\n          </button>\n        </div>\n      </DashboardLayout>\n    )\n  }\n\n  return (\n    <DashboardLayout>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={() => router.push('/campaigns')}\n              className=\"flex items-center text-gray-600 hover:text-gray-900\"\n            >\n              <ArrowLeft className=\"h-5 w-5 mr-2\" />\n              Back to Campaigns\n            </button>\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">{campaign.name}</h1>\n              <div className=\"flex items-center space-x-4 mt-2\">\n                <div className=\"flex items-center space-x-2\">\n                  <div className={`w-3 h-3 rounded-full ${campaign.company === 'CraftyCode' ? 'bg-blue-500' : 'bg-purple-500'}`}></div>\n                  <span className=\"text-sm font-medium text-gray-600\">{campaign.company}</span>\n                </div>\n                <span className={`inline-flex items-center px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(campaign.status || 'queued')}`}>\n                  {getStatusIcon(campaign.status || 'queued')}\n                  <span className=\"ml-1 capitalize\">{campaign.status || 'queued'}</span>\n                </span>\n              </div>\n              {campaign.description && (\n                <p className=\"text-gray-600 mt-2\">{campaign.description}</p>\n              )}\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-3\">\n            {isEditing ? (\n              <>\n                <button\n                  onClick={() => setIsEditing(false)}\n                  className=\"px-4 py-2 text-gray-600 border border-gray-200 rounded-lg hover:bg-gray-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleUpdateCampaign}\n                  disabled={updating}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {updating ? 'Saving...' : 'Save Changes'}\n                </button>\n              </>\n            ) : (\n              <>\n                <button\n                  onClick={() => setShowDeleteModal(true)}\n                  className=\"flex items-center px-4 py-2 text-red-600 border border-red-200 rounded-lg hover:bg-red-50\"\n                >\n                  <Trash2 className=\"h-4 w-4 mr-2\" />\n                  Delete\n                </button>\n                <button\n                  onClick={() => setIsEditing(true)}\n                  className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                >\n                  <Edit2 className=\"h-4 w-4 mr-2\" />\n                  Edit Campaign\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n\n        {/* Campaign Stats */}\n        <div className=\"grid grid-cols-2 md:grid-cols-6 gap-6\">\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n            <div className=\"flex items-center\">\n              <Users className=\"h-8 w-8 text-blue-600 mr-3\" />\n              <div>\n                <p className=\"text-2xl font-bold text-gray-900\">{campaign.leadCount}</p>\n                <p className=\"text-sm text-gray-600\">Leads</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n            <div className=\"flex items-center\">\n              <Mail className=\"h-8 w-8 text-green-600 mr-3\" />\n              <div>\n                <p className=\"text-2xl font-bold text-gray-900\">{campaign.emailsSent}</p>\n                <p className=\"text-sm text-gray-600\">Emails Sent</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n            <div className=\"flex items-center\">\n              <Phone className=\"h-8 w-8 text-orange-600 mr-3\" />\n              <div>\n                <p className=\"text-2xl font-bold text-gray-900\">{campaign.callsMade}</p>\n                <p className=\"text-sm text-gray-600\">Calls Made</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n            <div className=\"flex items-center\">\n              <Calendar className=\"h-8 w-8 text-blue-600 mr-3\" />\n              <div>\n                <p className=\"text-2xl font-bold text-gray-900\">{campaign.appointmentsBooked}</p>\n                <p className=\"text-sm text-gray-600\">Appointments</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n            <div className=\"flex items-center\">\n              <TrendingUp className=\"h-8 w-8 text-green-600 mr-3\" />\n              <div>\n                <p className=\"text-2xl font-bold text-gray-900\">{campaign.sales}</p>\n                <p className=\"text-sm text-gray-600\">Sales</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n            <div className=\"flex items-center\">\n              <Target className=\"h-8 w-8 text-purple-600 mr-3\" />\n              <div>\n                <p className=\"text-2xl font-bold text-gray-900\">{campaign.conversionRate}%</p>\n                <p className=\"text-sm text-gray-600\">Conversion</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg\">\n          <button\n            onClick={() => setActiveTab('overview')}\n            className={`flex-1 px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n              activeTab === 'overview'\n                ? 'bg-white text-blue-600 shadow-sm'\n                : 'text-gray-600 hover:text-gray-900'\n            }`}\n          >\n            Campaign Overview\n          </button>\n          <button\n            onClick={() => setActiveTab('leads')}\n            className={`flex-1 px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n              activeTab === 'leads'\n                ? 'bg-white text-blue-600 shadow-sm'\n                : 'text-gray-600 hover:text-gray-900'\n            }`}\n          >\n            Lead Management ({campaignLeads.length})\n          </button>\n          <button\n            onClick={() => setActiveTab('touchpoints')}\n            className={`flex-1 px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n              activeTab === 'touchpoints'\n                ? 'bg-white text-blue-600 shadow-sm'\n                : 'text-gray-600 hover:text-gray-900'\n            }`}\n          >\n            Touchpoint Schedule ({campaignTouchpoints.length})\n          </button>\n        </div>\n\n        {/* Tab Content */}\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n          {/* Campaign Overview Tab */}\n          {activeTab === 'overview' && (\n            <div className=\"p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Campaign Details</h3>\n              \n              {isEditing ? (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Campaign Name *</label>\n                    <input\n                      type=\"text\"\n                      value={editFormData.name}\n                      onChange={(e) => setEditFormData({ ...editFormData, name: e.target.value })}\n                      className=\"w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-white transition-colors\"\n                      placeholder=\"Enter campaign name\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Start Date</label>\n                    <input\n                      type=\"date\"\n                      value={editFormData.start_date}\n                      onChange={(e) => setEditFormData({ ...editFormData, start_date: e.target.value })}\n                      className=\"w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-white transition-colors\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">End Date</label>\n                    <input\n                      type=\"date\"\n                      value={editFormData.end_date}\n                      onChange={(e) => setEditFormData({ ...editFormData, end_date: e.target.value })}\n                      min={editFormData.start_date}\n                      className=\"w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-white transition-colors\"\n                    />\n                  </div>\n                  \n                  <div className=\"md:col-span-2\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Description</label>\n                    <textarea\n                      value={editFormData.description}\n                      onChange={(e) => setEditFormData({ ...editFormData, description: e.target.value })}\n                      rows={3}\n                      className=\"w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-white transition-colors resize-none\"\n                      placeholder=\"Optional campaign description...\"\n                    />\n                  </div>\n                  \n                  {/* <div className=\"md:col-span-2\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Instantly.ai Campaign ID\n                      <span className=\"text-gray-500 text-xs ml-1\">(Optional - for email sync integration)</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={editFormData.instantly_campaign_id}\n                      onChange={(e) => setEditFormData({ ...editFormData, instantly_campaign_id: e.target.value })}\n                      className=\"w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:bg-white transition-colors\"\n                      placeholder=\"Enter your Instantly.ai campaign ID...\"\n                    />\n                  </div> */}\n                </div>\n              ) : (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Campaign Name</h4>\n                    <p className=\"text-gray-900\">{campaign.name}</p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Company</h4>\n                    <p className=\"text-gray-900\">{campaign.company}</p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Start Date</h4>\n                    <p className=\"text-gray-900\">\n                      {campaign.start_date ? new Date(campaign.start_date).toLocaleDateString() : 'Not set'}\n                    </p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">End Date</h4>\n                    <p className=\"text-gray-900\">\n                      {campaign.end_date ? new Date(campaign.end_date).toLocaleDateString() : 'Not set'}\n                    </p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Created</h4>\n                    <p className=\"text-gray-900\">{new Date(campaign.created_at).toLocaleDateString()}</p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Outreach Sequence</h4>\n                    <p className=\"text-gray-900\">\n                      {campaign.outreach_sequence ? campaign.outreach_sequence.name : 'No sequence assigned'}\n                    </p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Instantly.ai Campaign ID</h4>\n                    <p className=\"text-gray-900\">\n                      {campaign.instantly_campaign_id || 'Not configured'}\n                    </p>\n                  </div>\n                  \n                  {campaign.description && (\n                    <div className=\"md:col-span-2\">\n                      <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Description</h4>\n                      <p className=\"text-gray-900\">{campaign.description}</p>\n                    </div>\n                  )}\n                  \n                  {/* Touchpoint Sequence Pattern */}\n                  <div className=\"md:col-span-2\">\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Touchpoint Sequence Pattern</h4>\n                    {campaign.outreach_sequence ? (\n                      loadingSequenceSteps ? (\n                        <div className=\"flex items-center py-4\">\n                          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"></div>\n                          <span className=\"text-gray-500 text-sm\">Loading sequence...</span>\n                        </div>\n                      ) : sequenceSteps.length === 0 ? (\n                        <p className=\"text-gray-500 italic\">No steps defined in sequence</p>\n                      ) : (\n                        <div className=\"space-y-2\">\n                          {sequenceSteps.map((step, index) => {\n                            const startDate = new Date(campaign.start_date || campaign.created_at)\n                            const stepDate = new Date(startDate)\n                            stepDate.setDate(startDate.getDate() + (step.day_offset || 0))\n                            \n                            return (\n                              <div key={step.id} className=\"flex items-center space-x-3 p-2 bg-gray-50 rounded-lg\">\n                                <span className=\"text-sm font-medium text-gray-600 w-8\">\n                                  {step.step_order}.\n                                </span>\n                                <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\n                                  step.type === 'email' ? 'bg-blue-100 text-blue-800' :\n                                  step.type === 'call' ? 'bg-green-100 text-green-800' :\n                                  step.type === 'linkedin_message' ? 'bg-purple-100 text-purple-800' :\n                                  'bg-gray-100 text-gray-800'\n                                }`}>\n                                  {step.type.replace('_', ' ').toUpperCase()}\n                                </span>\n                                <span className=\"text-sm text-gray-600\">\n                                  on {stepDate.toLocaleDateString()}\n                                </span>\n                                {step.day_offset > 0 && (\n                                  <span className=\"text-xs text-gray-500\">\n                                    (+{step.day_offset} days)\n                                  </span>\n                                )}\n                              </div>\n                            )\n                          })}\n                        </div>\n                      )\n                    ) : (\n                      <p className=\"text-gray-500 italic\">No outreach sequence assigned</p>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Lead Management Tab */}\n          {activeTab === 'leads' && (\n            <div className=\"p-6\">\n              {loadingLeads ? (\n                <div className=\"text-center py-8\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n                  <p className=\"text-gray-500\">Loading leads...</p>\n                </div>\n              ) : (\n                <div className=\"flex gap-6\">\n                  {/* Main Leads Table */}\n                  <div className={`transition-all duration-300 ${selectedLeadForEdit ? 'w-1/2' : 'w-full'}`}>\n                    <div className=\"space-y-6\">\n                      {/* Campaign Leads Table */}\n                      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n                        <div className=\"px-6 py-4 border-b border-gray-200\">\n                          <h3 className=\"text-lg font-semibold text-gray-900\">\n                            Campaign Leads ({campaignLeads.length})\n                          </h3>\n                        </div>\n                        <div className=\"overflow-x-auto\">\n                          <table className=\"min-w-full divide-y divide-gray-200\">\n                            <thead className=\"bg-gray-50\">\n                              <tr>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Lead</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Details</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Contact Attempts</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Last Contact</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                              </tr>\n                            </thead>\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\n                              {campaignLeads.length === 0 ? (\n                                <tr>\n                                  <td colSpan={6} className=\"px-6 py-8 text-center text-gray-500\">\n                                    No leads assigned to this campaign\n                                  </td>\n                                </tr>\n                              ) : (\n                                campaignLeads.map((lead) => (\n                                  <tr key={lead.id} className=\"hover:bg-gray-50 cursor-pointer\" onClick={() => handleOpenLeadEditPanel(lead)}>\n                                    <td className=\"px-6 py-4\">\n                                      <div className=\"flex items-center\">\n                                        <div className=\"h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center mr-3\">\n                                          <User className=\"h-5 w-5 text-gray-500\" />\n                                        </div>\n                                        <div>\n                                          <div className=\"text-sm font-medium text-gray-900\">\n                                            {lead.first_name} {lead.last_name}\n                                          </div>\n                                          <div className=\"text-sm text-gray-500\">{lead.email}</div>\n                                        </div>\n                                      </div>\n                                    </td>\n                                    <td className=\"px-6 py-4\">\n                                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                                        lead.status === 'not_contacted' ? 'bg-gray-100 text-gray-800' :\n                                        lead.status === 'actively_contacting' ? 'bg-blue-100 text-blue-800' :\n                                        lead.status === 'engaged' ? 'bg-green-100 text-green-800' :\n                                        lead.status === 'won' ? 'bg-emerald-100 text-emerald-800' :\n                                        lead.status === 'not_interested' ? 'bg-red-100 text-red-800' :\n                                        'bg-gray-100 text-gray-800'\n                                      }`}>\n                                        {lead.status?.replace('_', ' ').toUpperCase() || 'UNKNOWN'}\n                                      </span>\n                                    </td>\n                                    <td className=\"px-6 py-4\">\n                                      <div className=\"text-sm text-gray-900\">\n                                        {lead.city && lead.state ? `${lead.city}, ${lead.state}` : lead.city || lead.state || 'N/A'}\n                                      </div>\n                                      <div className=\"text-sm\">\n                                        {lead.online_profile ? (\n                                          <a \n                                            href={lead.online_profile} \n                                            target=\"_blank\" \n                                            rel=\"noopener noreferrer\"\n                                            className=\"text-blue-600 hover:text-blue-800 hover:underline\"\n                                            onClick={(e) => e.stopPropagation()}\n                                          >\n                                            View Profile\n                                          </a>\n                                        ) : lead.linkedin_url ? (\n                                          <a \n                                            href={lead.linkedin_url} \n                                            target=\"_blank\" \n                                            rel=\"noopener noreferrer\"\n                                            className=\"text-blue-600 hover:text-blue-800 hover:underline\"\n                                            onClick={(e) => e.stopPropagation()}\n                                          >\n                                            LinkedIn\n                                          </a>\n                                        ) : (\n                                          <span className=\"text-gray-500\">{lead.source || 'Unknown'}</span>\n                                        )}\n                                      </div>\n                                    </td>\n                                    <td className=\"px-6 py-4\">\n                                      <div className=\"flex items-center text-sm text-gray-900\">\n                                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                                          {lead.contact_attempts_count || 0} attempts\n                                        </span>\n                                      </div>\n                                    </td>\n                                    <td className=\"px-6 py-4\">\n                                      <div className=\"flex items-center text-sm text-gray-900\">\n                                        <Calendar className=\"h-3 w-3 mr-1 text-gray-400\" />\n                                        {lead.last_contacted_at ? new Date(lead.last_contacted_at).toLocaleDateString() : 'Never'}\n                                      </div>\n                                    </td>\n                                    <td className=\"px-6 py-4\" onClick={(e) => e.stopPropagation()}>\n                                      <button\n                                        onClick={() => handleRemoveLeadFromCampaign(lead.id)}\n                                        className=\"flex items-center text-red-600 hover:text-red-800 text-sm font-medium\"\n                                      >\n                                        <Minus className=\"h-4 w-4 mr-1\" />\n                                        Remove\n                                      </button>\n                                    </td>\n                                  </tr>\n                                ))\n                              )}\n                            </tbody>\n                          </table>\n                        </div>\n                      </div>\n\n\n                    </div>\n                  </div>\n\n                  {/* Lead Edit Panel */}\n                  {selectedLeadForEdit && editingLeadData && (\n                    <div className=\"w-1/2 bg-white rounded-lg shadow-sm border border-gray-200 h-fit\">\n                      <div className=\"px-6 py-4 border-b border-gray-200\">\n                        <div className=\"flex items-center justify-between\">\n                          <h2 className=\"text-lg font-semibold text-gray-900\">\n                            Edit {selectedLeadForEdit.first_name} {selectedLeadForEdit.last_name}\n                          </h2>\n                          <button\n                            onClick={handleCloseLeadEditPanel}\n                            className=\"text-gray-400 hover:text-gray-600\"\n                          >\n                            <X className=\"h-6 w-6\" />\n                          </button>\n                        </div>\n                      </div>\n\n                      <div className=\"px-6 py-4 space-y-6 max-h-[80vh] overflow-y-auto\">\n                        {/* Basic Information */}\n                        <div>\n                          <h3 className=\"text-md font-medium text-gray-900 mb-3\">Basic Information</h3>\n                          <div className=\"grid grid-cols-1 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">First Name</label>\n                              <input\n                                type=\"text\"\n                                value={editingLeadData.first_name || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, first_name: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Last Name</label>\n                              <input\n                                type=\"text\"\n                                value={editingLeadData.last_name || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, last_name: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n                              <input\n                                type=\"email\"\n                                value={editingLeadData.email || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, email: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Phone</label>\n                              <input\n                                type=\"tel\"\n                                value={editingLeadData.phone || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, phone: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* Location & Company */}\n                        <div>\n                          <h3 className=\"text-md font-medium text-gray-900 mb-3\">Location & Company</h3>\n                          <div className=\"grid grid-cols-1 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">City</label>\n                              <input\n                                type=\"text\"\n                                value={editingLeadData.city || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, city: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">State</label>\n                              <input\n                                type=\"text\"\n                                value={editingLeadData.state || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, state: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Company</label>\n                              <input\n                                type=\"text\"\n                                value={editingLeadData.company || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, company: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* Status & Source */}\n                        <div>\n                          <h3 className=\"text-md font-medium text-gray-900 mb-3\">Status & Source</h3>\n                          <div className=\"grid grid-cols-1 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n                              <select\n                                value={editingLeadData.status || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, status: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              >\n                                <option value=\"not_contacted\">Not Contacted</option>\n                                <option value=\"actively_contacting\">Actively Contacting</option>\n                                <option value=\"engaged\">Engaged</option>\n                                <option value=\"won\">Won</option>\n                                <option value=\"not_interested\">Not Interested</option>\n                              </select>\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Source</label>\n                              <select\n                                value={editingLeadData.source || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, source: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              >\n                                <option value=\"Zillow\">Zillow</option>\n                                <option value=\"LinkedIn\">LinkedIn</option>\n                                <option value=\"Realtor.com\">Realtor.com</option>\n                                <option value=\"Redfin\">Redfin</option>\n                                <option value=\"Trulia\">Trulia</option>\n                                <option value=\"Other\">Other</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* URLs */}\n                        <div>\n                          <h3 className=\"text-md font-medium text-gray-900 mb-3\">URLs & Links</h3>\n                          <div className=\"space-y-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">LinkedIn URL</label>\n                              <input\n                                type=\"url\"\n                                value={editingLeadData.linkedin_url || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, linkedin_url: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Website URL</label>\n                              <input\n                                type=\"url\"\n                                value={editingLeadData.website_url || ''}\n                                onChange={(e) => setEditingLeadData({...editingLeadData, website_url: e.target.value})}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* Save Button */}\n                        <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n                          <button\n                            onClick={handleCloseLeadEditPanel}\n                            className=\"px-4 py-2 text-gray-600 border border-gray-200 rounded-lg hover:bg-gray-50\"\n                          >\n                            Cancel\n                          </button>\n                          <button\n                            onClick={handleUpdateLeadInCampaign}\n                            disabled={updatingLead}\n                            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                          >\n                            {updatingLead ? 'Saving...' : 'Save Changes'}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Touchpoints Tab */}\n          {activeTab === 'touchpoints' && (\n            <div className=\"p-6\">\n              <div className=\"space-y-6\">\n                {/* Touchpoints List */}\n                <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n                  <div className=\"px-6 py-4 border-b border-gray-200\">\n                    <h3 className=\"text-lg font-semibold text-gray-900\">Campaign Touchpoints</h3>\n                  </div>\n                  <div className=\"p-6\">\n                    {campaignTouchpoints.length === 0 ? (\n                      <p className=\"text-gray-500 text-center py-8\">No touchpoints found for this campaign</p>\n                    ) : (\n                      <div className=\"space-y-4\">\n                        {campaignTouchpoints.map((touchpoint) => (\n                          <div \n                            key={touchpoint.id} \n                            className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\"\n                          >\n                            <div className=\"flex-1\">\n                              <div className=\"flex items-center space-x-2\">\n                                <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\n                                  touchpoint.type === 'email' ? 'bg-blue-100 text-blue-800' :\n                                  touchpoint.type === 'call' ? 'bg-green-100 text-green-800' :\n                                  touchpoint.type === 'linkedin_message' ? 'bg-purple-100 text-purple-800' :\n                                  'bg-gray-100 text-gray-800'\n                                }`}>\n                                  {touchpoint.type.replace('_', ' ').toUpperCase()}\n                                </span>\n                                <span className=\"font-medium\">{touchpoint.lead?.first_name} {touchpoint.lead?.last_name}</span>\n                              </div>\n                              {touchpoint.subject && (\n                                <p className=\"text-sm text-gray-600 mt-1\">{touchpoint.subject}</p>\n                              )}\n                              <div className=\"flex items-center space-x-4 mt-1\">\n                                {touchpoint.lead?.email && (\n                                  <p className=\"text-xs text-gray-500\">{touchpoint.lead.email}</p>\n                                )}\n                                {touchpoint.scheduled_at && (\n                                  <p className=\"text-xs text-gray-500\">\n                                    Scheduled: {new Date(touchpoint.scheduled_at).toLocaleDateString()}\n                                  </p>\n                                )}\n                                {touchpoint.completed_at && (\n                                  <p className=\"text-xs text-gray-500\">\n                                    Completed: {new Date(touchpoint.completed_at).toLocaleDateString()}\n                                  </p>\n                                )}\n                              </div>\n                              {touchpoint.outcome && (\n                                <p className=\"text-sm text-gray-600 mt-1\">\n                                  <span className=\"font-medium\">Outcome:</span> {touchpoint.outcome}\n                                </p>\n                              )}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Delete Confirmation Modal */}\n        {showDeleteModal && (\n          <div className=\"fixed inset-0 bg-gray-900 bg-opacity-50 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white rounded-xl shadow-2xl p-6 w-full max-w-md border border-gray-100\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"flex-shrink-0 w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center mr-3\">\n                  <Trash2 className=\"h-5 w-5 text-red-600\" />\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Delete Campaign</h3>\n                  <p className=\"text-sm text-gray-500\">This action cannot be undone</p>\n                </div>\n              </div>\n              \n              <div className=\"mb-6\">\n                <p className=\"text-gray-700\">\n                  Are you sure you want to delete <strong>\"{campaign?.name}\"</strong>? \n                  This will remove the campaign and unassign all leads from it.\n                </p>\n              </div>\n              \n              <div className=\"flex items-center justify-end space-x-3\">\n                <button\n                  onClick={() => setShowDeleteModal(false)}\n                  disabled={deleting}\n                  className=\"px-4 py-2 text-gray-600 border border-gray-200 rounded-lg hover:bg-gray-50 disabled:opacity-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleDeleteCampaign}\n                  disabled={deleting}\n                  className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:opacity-50 flex items-center\"\n                >\n                  {deleting ? (\n                    <>\n                      <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n                      Deleting...\n                    </>\n                  ) : (\n                    <>\n                      <Trash2 className=\"w-4 h-4 mr-2\" />\n                      Delete Campaign\n                    </>\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </DashboardLayout>\n  )\n} "],"names":[],"mappings":"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","debugId":null}}]
}